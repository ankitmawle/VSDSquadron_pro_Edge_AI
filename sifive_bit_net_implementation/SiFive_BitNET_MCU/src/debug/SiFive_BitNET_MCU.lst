
C:/fs3_vsd/projects/SiFive_BitNET_MCU/src/debug/SiFive_BitNET_MCU.elf:     file format elf32-littleriscv
C:/fs3_vsd/projects/SiFive_BitNET_MCU/src/debug/SiFive_BitNET_MCU.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20100000

Program Header:
0x70000003 off    0x0004976b vaddr 0x00000000 paddr 0x00000000 align 2**0
         filesz 0x0000004d memsz 0x00000000 flags r--
    LOAD off    0x00001000 vaddr 0x20100000 paddr 0x20100000 align 2**12
         filesz 0x00004e00 memsz 0x00004e00 flags rwx
    LOAD off    0x0000d000 vaddr 0x80000000 paddr 0x2010b960 align 2**12
         filesz 0x00000ab0 memsz 0x00000ab0 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00000ab0 vaddr 0x80000ab0 paddr 0x80000ab0 align 2**12
         filesz 0x00000000 memsz 0x00000cc0 flags rw-
    LOAD off    0x00000134 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00005e00 vaddr 0x20104e00 paddr 0x20104e00 align 2**12
         filesz 0x00006b5e memsz 0x00006b5e flags r-x
    LOAD off    0x00000134 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002b8  20100000  20100000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  201002b8  201002b8  000012b8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  201002c4  201002c4  000012c4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00004ac0  20100340  20100340  00001340  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text             00006b5e  20104e00  20104e00  00005e00  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000ab0  80000000  2010b960  0000d000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000b8  80000ab0  80000ab0  0000dab0  2**3  ALLOC
  7 .stack            00000400  80000b70  80000b70  0000dab0  2**4  ALLOC
  8 .heap             00000800  80000f70  80000f70  0000dab0  2**3  ALLOC
  9 .debug_info       000255d0  00000000  00000000  0000dab0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00003580  00000000  00000000  00033080  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000d98  00000000  00000000  00036600  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000b78  00000000  00000000  00037398  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000c77c  00000000  00000000  00037f10  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        000050a6  00000000  00000000  0004468c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000039  00000000  00000000  00049732  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000004d  00000000  00000000  0004976b  2**0  CONTENTS, READONLY
 17 .debug_frame      00003744  00000000  00000000  000497b8  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20100000 l    d  .init	00000000 .init
201002b8 l    d  .init_array	00000000 .init_array
201002c4 l    d  .ctors	00000000 .ctors
20100340 l    d  .rodata	00000000 .rodata
20104e00 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000ab0 l    d  .bss	00000000 .bss
80000b70 l    d  .stack	00000000 .stack
80000f70 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 entry.o
00000000 l    df *ABS*	00000000 scrub.o
201000c0 l     F .init	00000000 __metal_memory_scrub
2010012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 trap.o
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20100234 l       .init	00000000 _skip_init
20104998 l       .rodata	00000000 argv
2010499c l       .rodata	00000000 envp
201049a0 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
201095b8 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
201095d2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
201095ec l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20109602 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20109616 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20109628 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20109638 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
2010964e l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20109660 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
20104018 l     O .rodata	00000880 pll_configs
20109676 l     F .text	0000004e get_pll_config_freq
201098ee l     F .text	000000aa find_closest_config
20109998 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 SiFive_BitNET_MCU.c
00000000 l    df *ABS*	00000000 findfp.c
20105938 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20105e72 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
201069d0 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
201069fa l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20106a22 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20106a5e l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20106bbe l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20107106 l     F .text	00000024 __metal_driver_cpu_hartid
2010712a l     F .text	0000002a __metal_driver_cpu_timebase
20107154 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
2010717e l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20108af4 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20108b1e l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20108b48 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20108b70 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20108b98 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20108bba l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio-leds.c
20109d28 l     F .text	0000004a __metal_driver_sifive_gpio_led_gpio
20109d72 l     F .text	00000044 __metal_driver_sifive_gpio_led_pin
20109db6 l     F .text	0000005c __metal_driver_sifive_gpio_led_label
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20109f5a l     F .text	00000026 __metal_driver_sifive_gpio0_base
20109f80 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20109faa l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
2010a80e l     F .text	0000002a __metal_driver_sifive_uart0_control_base
2010a838 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
2010a866 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
2010a88e l     F .text	0000002e __metal_driver_sifive_uart0_clock
2010a8bc l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
2010a8e6 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
2010a90e l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
2010acd8 l     F .text	000000da pre_rate_change_callback_func
2010adb2 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
201093c8 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
201093e2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
201093f8 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
2010940c l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
201094c8 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
201094e2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
201094f8 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
2010950c l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20109cae l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
2010b280 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 lib_a-memset.o
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
2010b200 l       .text	00000000 IRQ_0
2010b204 l       .text	00000000 IRQ_1
2010b208 l       .text	00000000 IRQ_2
2010b20c l       .text	00000000 IRQ_3
2010b210 l       .text	00000000 IRQ_4
2010b214 l       .text	00000000 IRQ_5
2010b218 l       .text	00000000 IRQ_6
2010b21c l       .text	00000000 IRQ_7
2010b220 l       .text	00000000 IRQ_8
2010b224 l       .text	00000000 IRQ_9
2010b228 l       .text	00000000 IRQ_10
2010b22c l       .text	00000000 IRQ_11
2010b230 l       .text	00000000 IRQ_12
2010b234 l       .text	00000000 IRQ_13
2010b238 l       .text	00000000 IRQ_14
2010b23c l       .text	00000000 IRQ_15
2010b240 l       .text	00000000 IRQ_LC0
2010b244 l       .text	00000000 IRQ_LC1
2010b248 l       .text	00000000 IRQ_LC2
2010b24c l       .text	00000000 IRQ_LC3
2010b250 l       .text	00000000 IRQ_LC4
2010b254 l       .text	00000000 IRQ_LC5
2010b258 l       .text	00000000 IRQ_LC6
2010b25c l       .text	00000000 IRQ_LC7
2010b260 l       .text	00000000 IRQ_LC8
2010b264 l       .text	00000000 IRQ_LC9
2010b268 l       .text	00000000 IRQ_LC10
2010b26c l       .text	00000000 IRQ_LC11
2010b270 l       .text	00000000 IRQ_LC12
2010b274 l       .text	00000000 IRQ_LC13
2010b278 l       .text	00000000 IRQ_LC14
2010b27c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000aac l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 __atexit.c
80000ac8 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80000ac0 l     O .bss	00000004 init_done.1
80000ac4 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
201002c4 l       .init_array	00000000 metal_constructors_end
201002c8 l       .init_array	00000000 __fini_array_end
201002c8 l       .init_array	00000000 metal_destructors_end
201002c8 l       .init_array	00000000 metal_destructors_start
201002c8 l       .init_array	00000000 __fini_array_start
201002b8 l       .init_array	00000000 __init_array_end
201002b8 l       .init_array	00000000 __preinit_array_end
201002b8 l       .init_array	00000000 __init_array_start
201002b8 l       .init_array	00000000 metal_constructors_start
201002b8 l       .init_array	00000000 __preinit_array_start
20105442 g     F .text	0000002a putchar
20104954 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20109e12 g     F .text	00000038 __metal_driver_led_exist
2010677c g     F .text	00000026 metal_cpu_timer_get_interrupt_id
20103680 g     O .rodata	00000100 input_data_2
201062d2 g     F .text	00000028 _isatty_r
2010b6c4 g     F .text	00000012 strcpy
201079d2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
201054ee g     F .text	000000e4 _puts_r
201062fa g     F .text	0000002c _lseek_r
2010af46 g     F .text	00000026 metal_clock_get_rate_hz
2010ac38 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20106d9a g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
2010aa8c g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2010793c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
201081e4 g     F .text	00000056 __metal_valid_interrupt_id
2010b104 g     F .text	00000040 metal_gpio_toggle_pin
20105404 g     F .text	0000003e printf
201002bc g     O .init_array	00000004 _use_hfxosc_ptr
20108664 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80001280 g       .data	00000000 __global_pointer$
2010031a g     F .ctors	00000024 metal_tty_init
20106756 g     F .text	00000026 metal_cpu_timer_interrupt_controller
20106916 g     F .text	00000024 metal_led_off
2010aef2 g     F .text	00000054 _metal_clock_append_to_callbacks
20108c14 g     F .text	00000046 __metal_plic0_complete_interrupt
20108428 g     F .text	000001e4 __metal_driver_riscv_cpu_controller_interrupt_register
201002b8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20106218 g     F .text	00000036 __sseek
201059ee g     F .text	0000006a __sinit
201048c4 g     O .rodata	00000014 __metal_driver_vtable_sifive_led
201055de g     F .text	000000c0 __swbuf_r
80000ab0 g       .data	00000000 __tls_base
201059aa g     F .text	00000044 __sfmoreglue
20106342 g     F .text	00000002 __malloc_unlock
201067c8 g     F .text	0000002e metal_cpu_get
201068f2 g     F .text	00000024 metal_led_on
80000a38 g     O .data	00000020 __metal_dt_serial_10013000
2010a3e8 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20103e28 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000b68 g       .bss	00000000 metal_segment_bss_target_end
20106a8e g     F .text	0000009a __metal_clint0_mtime_get
20108a68 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
2010ab50 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
2010a19e g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
2010b4c4 g     F .text	0000000a __errno
80000000 g       .text	00000000 metal_segment_itim_target_start
2010aa5c g     F .text	00000030 __metal_driver_sifive_uart0_txready
2010a9ea g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
2010b05c g     F .text	00000040 metal_gpio_enable_output
20100142 g     F .init	0000000e __metal_synchronize_harts
80000ab0 g       .data	00000000 metal_segment_bss_target_start
20106b28 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
201062a8 g     F .text	0000002a _fstat_r
2010a638 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000ab8 g     O .bss	00000004 errno
20109770 g     F .text	0000017e __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
2010afb8 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20109e96 g     F .text	00000042 __metal_driver_led_on
20107cc0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
201000cc  w    F .init	00000000 __metal_before_start
2010b8f6  w    F .text	00000016 metal_init_run
20103fb4 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20103f70 g     O .rodata	00000044 __metal_driver_vtable_cpu
2010b1ac g     F .text	0000002e metal_uart_set_baud_rate
2010ade0 g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000b54 g     O .bss	00000004 cpu
201086f0 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20104898 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000f70 g       .heap	00000000 metal_segment_heap_target_start
201059a0 g     F .text	0000000a _cleanup_r
80000a90 g     O .data	00000008 __metal_dt_cpu_0
20107c2a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20109b48 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
2010932c g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
201055d2 g     F .text	0000000c puts
20107f18  w    F .text	00000096 metal_lc13_interrupt_vector_handler
2010b09c g     F .text	00000068 metal_gpio_set_pin
20107310 g     F .text	00000018 __metal_default_exception_handler
2010b348 g     F .text	00000026 _fstat
201070d2 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20108680 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20103340 g     O .rodata	00000140 L4_weights
201071a2 g     F .text	00000030 __metal_driver_cpu_get
20103f0c g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20107204 g     F .text	00000018 __metal_interrupt_global_disable
201093a0 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
201068ce g     F .text	00000024 metal_led_enable
20107b94  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20107d56  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20106172 g     F .text	00000028 _sbrk_r
2010914c g     F .text	00000050 __metal_driver_riscv_plic0_disable
201082f6 g     F .text	0000004e __metal_exception_register
2010693a g     F .text	00000096 metal_led_get_rgb
2010b816 g     F .text	00000070 metal_init
201066ca g     F .text	0000002c _read_r
20108882 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2010a280 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .text	00000000 metal_segment_lim_target_end
20107400 g     F .text	00000068 __metal_default_sw_handler
2010afea g     F .text	00000032 metal_clock_register_post_rate_change_callback
80000078 g     O .data	0000000c __metal_dt_clock_2
2010a938 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
2010b36e g     F .text	00000020 _isatty
2010a346 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20103780 g     O .rodata	00000100 input_data_3
2010a978 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20104df8 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20104ddc g     O .rodata	00000004 _global_impure_ptr
20107468  w    F .text	00000094 metal_timer_interrupt_vector_handler
2010b52c g     F .text	0000005e __libc_init_array
20109ed8 g     F .text	00000042 __metal_driver_led_off
80000aa4 g     O .data	00000004 __metal_dt_led_2
2010a2c0 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20107dec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20109596 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
2010860c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
2010b3e2 g     F .text	0000006a _sbrk
2010a23a g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2010aeb0 g     F .text	00000042 _metal_clock_call_all_callbacks
20100296 g     F .init	00000002 _init
20107266 g     F .text	0000001a __metal_interrupt_timer_disable
2010a432 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20108940 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20104918 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
2010a9b2 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
2010a386 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
2010b4f6 g     F .text	00000036 __libc_fini_array
80000a70 g     O .data	0000000c __metal_dt_clock_4
20102340 g     O .rodata	00000800 L2_weights
2010b886 g     F .text	00000070 metal_fini
2010a7c0 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
201088ca g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20108ad4 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
201072b8 g     F .text	0000002c __metal_interrupt_local_enable
2010709e g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
2010b922 g     F .text	00000028 metal_tty_putc
20108e1e g     F .text	00000018 __metal_plic0_default_handler
2010b44c  w    F .text	0000006e write
2010546c g     F .text	00000082 _putc_r
00000000 g       *ABS*	00000000 __tbss_size
8000006c g     O .data	0000000c __metal_dt_clock_0
2010b58a g     F .text	0000001c strcat
00000800 g       *ABS*	00000000 __heap_size
2010919c g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
201074fc g     F .text	00000016 __metal_default_beu_handler
20103d34 g     O .rodata	00000020 __sf_fake_stderr
201066f6 g     F .text	0000002a metal_cpu_get_mtime
2010729c g     F .text	0000001c __metal_interrupt_external_disable
2010a958 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
201049b0 g     F .rodata	0000042a processfclayer
201086d4 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20108344 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
20105e9c g     F .text	00000042 __sfputs_r
20108a22 g     F .text	00000046 __metal_driver_cpu_exception_register
2010721c g     F .text	00000018 __metal_interrupt_software_enable
20107810  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20106326 g     F .text	0000001a memchr
20105d04 g     F .text	0000009e _free_r
80000abc g     O .bss	00000004 _global_atexit
20108cde g     F .text	00000066 __metal_driver_riscv_plic0_set_priority
201080da g     F .text	00000058 __metal_controller_interrupt_vector_mode
2010b752 g     F .text	000000c4 __call_exitprocs
80000f70 g       .stack	00000000 _sp
201002c0 g     O .init_array	00000004 _metal_tty_init_ptr
20100150 g     F .init	00000000 _start
20104f4a g     F .text	00000106 BitMnistInference
20109422 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
2010b38e g     F .text	0000002a _lseek
20108a02 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20108a96 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20107280 g     F .text	0000001c __metal_interrupt_external_enable
2010b6d6 g     F .text	0000007c __register_exitproc
2010ab80 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20108ede g     F .text	0000015c __metal_driver_riscv_plic0_init
201090fc g     F .text	00000050 __metal_driver_riscv_plic0_enable
2010a20e g     F .text	0000002c __metal_driver_sifive_gpio0_output
20107afe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
201071d2 g     F .text	0000001a __metal_myhart_id
2010a7e0 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20104e00 g     F .text	0000014a ReLUNorm
2010736e  w    F .text	00000092 metal_software_interrupt_vector_handler
20108638 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20106280 g     F .text	00000028 _close_r
2010ac18 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20106c7c g     F .text	000000da __metal_driver_riscv_clint0_register
2010b01c g     F .text	00000040 metal_gpio_disable_input
80000a88 g     O .data	00000008 __metal_dt_clint_2000000
2010569e g     F .text	000000fe __swsetup_r
20106834 g     F .text	0000003e metal_interrupt_register_handler
20105a58 g     F .text	0000009c __sfp
2010af6c g     F .text	0000004c metal_clock_set_rate_hz
2010619a g     F .text	00000030 __sread
2010a15e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
20100298  w    F .init	00000000 secondary_main
20107340  w    F .text	0000002e metal_interrupt_vector_handler
20106340 g     F .text	00000002 __malloc_lock
2010aa24 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
80000b58 g     O .bss	00000004 tmr_intr
201058d4 g     F .text	00000064 _fflush_r
20108ca2 g     F .text	0000003c __metal_plic0_get_threshold
20109cc0 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20103d74 g     O .rodata	00000020 __sf_fake_stdin
2010823a g     F .text	000000bc __metal_local_interrupt_enable
20106f5e g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20105c5c g     F .text	000000a8 memset
20107a68  w    F .text	00000096 metal_lc5_interrupt_vector_handler
2010520a g     F .text	000001fa main
80000ab0 g       .data	00000000 metal_segment_data_target_end
2010ab06 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20104de0 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
201088de g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
201089a2 g     F .text	00000060 __metal_driver_cpu_get_msip
2010b144 g     F .text	0000000e metal_shutdown
80000000 g       .text	00000000 metal_segment_itim_target_end
20108ab4 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20109f1a g     F .text	00000040 __metal_driver_led_toggle
20108bd8 g     F .text	0000003c __metal_plic0_claim_interrupt
2010aad6 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
2010624e g     F .text	00000006 __sclose
80000060  w    O .data	0000000c __metal_led_table
20107e82  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2010008a g     F .init	00000000 metal_mem_scrub
80000aa0 g     O .data	00000004 __metal_dt_led_1
20105da2 g     F .text	000000d0 _malloc_r
20106d7e g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
20100340 g     O .rodata	00002000 L1_weights
20109e4a g     F .text	0000004c __metal_driver_led_enable
20103580 g     O .rodata	00000100 input_data_1
80000aa8 g     O .data	00000004 __metal_dt_prci_10008000
20108760 g     F .text	00000046 __metal_driver_cpu_timebase_get
20109290 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20100000 g       .init	00000000 _enter
201067f6 g     F .text	0000001a metal_cpu_get_current_hartid
2010b5a6 g     F .text	0000011e strcmp
20109522 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
2010b200 g       .text	00000000 __metal_vector_table
20104e00 g       *ABS*	00000000 metal_segment_itim_source_start
80000a84  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
20100296 g     F .init	00000002 _fini
20105404 g     F .text	0000003e iprintf
80000000 g       .text	00000000 metal_segment_lim_target_start
20108d44 g     F .text	00000036 __metal_driver_riscv_plic0_get_priority
20105050 g     F .text	0000010c display_banner
201002f0 g     F .ctors	0000002a use_hfxosc
201071ec g     F .text	00000018 __metal_interrupt_global_enable
2010b4ba g     F .text	0000000a atexit
20106254 g     F .text	0000002c _write_r
2010724c g     F .text	0000001a __metal_interrupt_timer_enable
2010518c g     F .text	0000007e wait_for_timer
2010abc2 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20106ea6 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
20106344 g     F .text	00000110 _printf_common
80000a80 g     O .data	00000004 _impure_ptr
2010880c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
2010579c g     F .text	00000138 __sflush_r
201091cc g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
201096c4 g     F .text	000000ac __metal_driver_sifive_fe310_g000_pll_init
80000084 g     O .data	0000000c __metal_dt_clock_5
80000b5c g     O .bss	00000004 cpu_intr
20109cee g     F .text	0000003a __metal_driver_sifive_fe310_g000_prci_set_reg
2010b2e2 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20103480 g     O .rodata	00000100 input_data_0
20106dee g     F .text	000000b8 __metal_driver_riscv_clint0_enable
2010b960 g       *ABS*	00000000 metal_segment_data_source_start
20100134 g       .init	00000000 early_trap_vector
80001770 g       .heap	00000000 metal_segment_heap_target_end
20108132 g     F .text	000000b2 __metal_controller_interrupt_vector
80000a64 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20105b5e g     F .text	0000005c __swhatbuf_r
2010a300 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20107512 g     F .text	0000006a __metal_default_timer_handler
2010b44c g     F .text	0000006e _write
20108e36 g     F .text	000000a8 __metal_plic0_handler
201078a6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20108044  w    F .text	00000096 metal_lc15_interrupt_vector_handler
201067a2 g     F .text	00000026 metal_cpu_interrupt_controller
20106810 g     F .text	00000024 metal_interrupt_init
201061ca g     F .text	0000004e __swrite
20106720 g     F .text	00000036 metal_cpu_set_mtimecmp
2010b4ce g     F .text	00000028 exit
20105ede g     F .text	00000294 _vfiprintf_r
20105af4 g     F .text	0000006a _fwalk_reent
20102b40 g     O .rodata	00000800 L3_weights
2010b302 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20104e00 g       *ABS*	00000000 metal_segment_lim_source_start
20103d54 g     O .rodata	00000020 __sf_fake_stdout
80000a98 g     O .data	00000004 __metal_dt_gpio_10012000
20107328 g     F .text	00000018 __metal_default_interrupt_handler
20106872 g     F .text	0000002e metal_interrupt_enable
2010b17e g     F .text	0000002e metal_uart_putc
2010b3b8 g     F .text	0000002a _read
2010b90c  w    F .text	00000016 metal_fini_run
2010a1e4 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20107580 g     F .text	00000180 __metal_exception_handler
2010777a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
2010b94a g     F .text	00000014 _exit
2010515c g     F .text	00000030 timer_isr
201087a6 g     F .text	00000066 __metal_driver_cpu_mtime_get
20105bba g     F .text	000000a2 __smakebuf_r
20106d56 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20106454 g     F .text	00000276 _printf_i
80000ab0 g     O .bss	00000004 __malloc_sbrk_start
80000b60 g     O .bss	00000004 timer_isr_flag
20107fae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20104de8 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20106bf4 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000ab4 g     O .bss	00000004 __malloc_free_list
201002c4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
80000b64 g     O .bss	00000004 tmr_id
20105ede g     F .text	00000294 _vfprintf_r
2010889c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20108d7a g     F .text	000000a4 __metal_plic0_enable
20100088  w      .init	00000000 __register_frame_info
201094a6 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
201088b0 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
201072e4 g     F .text	0000002c __metal_interrupt_local_disable
20107234 g     F .text	00000018 __metal_interrupt_software_disable
2010b152 g     F .text	0000002c metal_uart_init
80000a58 g     O .data	0000000c __metal_dt_clock_3
20108c5a g     F .text	00000048 __metal_plic0_set_threshold
80000a9c g     O .data	00000004 __metal_dt_led_0
201091f4 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2010b326 g     F .text	00000022 _close
20104df0 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
2010903a g     F .text	000000c2 __metal_driver_riscv_plic0_register
201068a0 g     F .text	0000002e metal_interrupt_disable



Disassembly of section .init:

20100000 <_enter>:
_enter():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:31
    auipc a0, %pcrel_hi(__global_pointer__)
    addi a0, a0, %pcrel_lo(1b)
    ld   gp, 0(a0)
    add  gp, gp, a0
#else
    la gp, __global_pointer$
20100000:	5ff01197          	auipc	gp,0x5ff01
20100004:	28018193          	add	gp,gp,640 # 80001280 <__global_pointer$>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:36
#endif
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20100008:	00000297          	auipc	t0,0x0
2010000c:	01828293          	add	t0,t0,24 # 20100020 <_enter+0x20>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:37
    csrw mtvec, t0
20100010:	30529073          	csrw	mtvec,t0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:39
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20100014:	00100293          	li	t0,1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:40
    beqz t0, 1f
20100018:	00028463          	beqz	t0,20100020 <_enter+0x20>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:42
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2010001c:	7c105073          	csrw	0x7c1,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:47
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20100020:	00000297          	auipc	t0,0x0
20100024:	11428293          	add	t0,t0,276 # 20100134 <early_trap_vector>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:48
    csrw mtvec, t0
20100028:	30529073          	csrw	mtvec,t0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:56
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2010002c:	00000113          	li	sp,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:63
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20100030:	00011463          	bnez	sp,20100038 <_enter+0x38>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:67
#ifdef __riscv_cmodel_compact
    lla.gprel sp, _sp
#else
    la sp, _sp
20100034:	cf018113          	add	sp,gp,-784 # 80000f70 <_sp>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:71
#endif
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20100038:	f1402573          	csrr	a0,mhartid
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:72
    li t0, 0
2010003c:	4281                	li	t0,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:73
    la t1, __stack_size
2010003e:	40000313          	li	t1,1024
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:75
1:
    andi sp, sp, -16
20100042:	ff017113          	and	sp,sp,-16
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:76
    beq t0, a0, 1f
20100046:	00a28563          	beq	t0,a0,20100050 <_enter+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:77
    add sp, sp, t1
2010004a:	911a                	add	sp,sp,t1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:78
    addi t0, t0, 1
2010004c:	0285                	add	t0,t0,1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:79
    j 1b
2010004e:	bfd5                	j	20100042 <_enter+0x42>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:88
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20100050:	00000097          	auipc	ra,0x0
20100054:	07c08093          	add	ra,ra,124 # 201000cc <__metal_before_start>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:89
    beqz ra, 1f
20100058:	00008363          	beqz	ra,2010005e <_enter+0x5e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:90
    jalr ra
2010005c:	9082                	jalr	ra
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:96
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2010005e:	f1402573          	csrr	a0,mhartid
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:97
    li a1, 0
20100062:	4581                	li	a1,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:98
    li a2, 0
20100064:	4601                	li	a2,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:99
    call _start
20100066:	20ed                	jal	20100150 <_start>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:104

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20100068:	00000093          	li	ra,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:105
    beqz ra, 1f
2010006c:	00008363          	beqz	ra,20100072 <_enter+0x72>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:106
    jalr ra
20100070:	9082                	jalr	ra
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:111
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20100072:	00000297          	auipc	t0,0x0
20100076:	00c28293          	add	t0,t0,12 # 2010007e <_enter+0x7e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:112
     csrw mtvec, t0
2010007a:	30529073          	csrw	mtvec,t0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:114
1:
     lw t1, 0(x0)
2010007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:115
     j 1b
20100082:	bff5                	j	2010007e <_enter+0x7e>
20100084:	0000                	unimp
	...

20100088 <__register_frame_info>:
__register_frame_info():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/entry.S:128
 * going to leave this in for now.  At least it's fairly cheap :) */
.weak __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20100088:	8082                	ret

2010008a <metal_mem_scrub>:
metal_mem_scrub():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2010008a:	46a1                	li	a3,8
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2010008c:	3006b373          	csrrc	t1,mstatus,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20100090:	4291                	li	t0,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20100092:	0055c563          	blt	a1,t0,2010009c <metal_mem_scrub+0x12>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20100096:	00357613          	and	a2,a0,3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2010009a:	ca11                	beqz	a2,201000ae <metal_mem_scrub+0x24>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2010009c:	00050023          	sb	zero,0(a0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
201000a0:	0505                	add	a0,a0,1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
201000a2:	15fd                	add	a1,a1,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
201000a4:	feb047e3          	bgtz	a1,20100092 <metal_mem_scrub+0x8>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
201000a8:	30031073          	csrw	mstatus,t1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:39
    ret
201000ac:	8082                	ret
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
201000ae:	00052023          	sw	zero,0(a0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
201000b2:	0511                	add	a0,a0,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
201000b4:	15f1                	add	a1,a1,-4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
201000b6:	fcb04ee3          	bgtz	a1,20100092 <metal_mem_scrub+0x8>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
201000ba:	30031073          	csrw	mstatus,t1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:46
    ret
201000be:	8082                	ret

201000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
201000c0:	00032023          	sw	zero,0(t1)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
201000c4:	0311                	add	t1,t1,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
201000c6:	fe734de3          	blt	t1,t2,201000c0 <__metal_memory_scrub>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
201000ca:	8082                	ret

201000cc <__metal_before_start>:
__metal_before_start():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:93
.weak __metal_eccscrub_bit
.weak __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
201000cc:	8406                	mv	s0,ra
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:95

    la      t0, __metal_eccscrub_bit
201000ce:	dff00297          	auipc	t0,0xdff00
201000d2:	f3228293          	add	t0,t0,-206 # 0 <__metal_boot_hart>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:96
    beqz    t0, skip_scrub
201000d6:	04028c63          	beqz	t0,2010012e <skip_scrub>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:98

    la      t0, __metal_boot_hart
201000da:	dff00297          	auipc	t0,0xdff00
201000de:	f2628293          	add	t0,t0,-218 # 0 <__metal_boot_hart>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:99
    csrr    a5, mhartid
201000e2:	f14027f3          	csrr	a5,mhartid
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:102

    /* Disable machine interrupts to be safe */
    li      a3, 8
201000e6:	46a1                	li	a3,8
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:103
    csrc    mstatus, a3
201000e8:	3006b073          	csrc	mstatus,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:106

    /* Zero out per hart stack */
    mv      t1, sp
201000ec:	830a                	mv	t1,sp
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:107
    la      t2, __stack_size
201000ee:	dff00397          	auipc	t2,0xdff00
201000f2:	31238393          	add	t2,t2,786 # 400 <__stack_size>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:108
    add     t2, t2, sp
201000f6:	938a                	add	t2,t2,sp
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:109
    beq     t1, t2, 1f
201000f8:	00730363          	beq	t1,t2,201000fe <__metal_before_start+0x32>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:110
    jal     __metal_memory_scrub
201000fc:	37d1                	jal	201000c0 <__metal_memory_scrub>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:112
1:
    bne     a5, t0, skip_scrub
201000fe:	02579863          	bne	a5,t0,2010012e <skip_scrub>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:119
    /* Zero out data segment */
#ifdef __riscv_cmodel_compact
    lla.gprel t1, metal_segment_data_target_start
    lla.gprel t2, metal_segment_data_target_end
#else
    la      t1, metal_segment_data_target_start
20100102:	5ff00317          	auipc	t1,0x5ff00
20100106:	efe30313          	add	t1,t1,-258 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:120
    la      t2, metal_segment_data_target_end
2010010a:	5ff01397          	auipc	t2,0x5ff01
2010010e:	9a638393          	add	t2,t2,-1626 # 80000ab0 <__malloc_sbrk_start>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:122
#endif
    beq     t1, t2, 1f
20100112:	00730363          	beq	t1,t2,20100118 <__metal_before_start+0x4c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:123
    jal     __metal_memory_scrub
20100116:	376d                	jal	201000c0 <__metal_memory_scrub>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:130
    /* Zero out itim memory */
#ifdef __riscv_cmodel_compact
    la.got.gprel t1, metal_segment_itim_target_start
    la.got.gprel t2, metal_segment_itim_target_end
#else
    la      t1, metal_segment_itim_target_start
20100118:	5ff00317          	auipc	t1,0x5ff00
2010011c:	ee830313          	add	t1,t1,-280 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:131
    la      t2, metal_segment_itim_target_end
20100120:	5ff00397          	auipc	t2,0x5ff00
20100124:	ee038393          	add	t2,t2,-288 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:133
#endif
    beq     t1, t2, skip_scrub
20100128:	00730363          	beq	t1,t2,2010012e <skip_scrub>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:134
    jal     __metal_memory_scrub
2010012c:	3f51                	jal	201000c0 <__metal_memory_scrub>

2010012e <skip_scrub>:
skip_scrub():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:138

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2010012e:	80a2                	mv	ra,s0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/scrub.S:139
    ret
20100130:	8082                	ret
	...

20100134 <early_trap_vector>:
early_trap_vector():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20100134:	342022f3          	csrr	t0,mcause
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/trap.S:65
    csrr t1, mepc
20100138:	34102373          	csrr	t1,mepc
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/trap.S:66
    csrr t2, mtval
2010013c:	343023f3          	csrr	t2,mtval
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/trap.S:67
    j early_trap_vector
20100140:	bfd5                	j	20100134 <early_trap_vector>

20100142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20100142:	1141                	add	sp,sp,-16
20100144:	c622                	sw	s0,12(sp)
20100146:	0800                	add	s0,sp,16
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20100148:	0001                	nop
2010014a:	4432                	lw	s0,12(sp)
2010014c:	0141                	add	sp,sp,16
2010014e:	8082                	ret

20100150 <_start>:
_start():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20100150:	8406                	mv	s0,ra
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:51
  auipc a0, %pcrel_hi(__global_pointer__)
  addi a0, a0, %pcrel_lo(1b)
  ld   gp, 0(a0)
  add  gp, gp, a0
#else
  la gp, __global_pointer$
20100152:	5ff01197          	auipc	gp,0x5ff01
20100156:	12e18193          	add	gp,gp,302 # 80001280 <__global_pointer$>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:58
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2010015a:	00000293          	li	t0,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:59
  bne a0, t0, _skip_init
2010015e:	0c551b63          	bne	a0,t0,20100234 <_skip_init>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:73
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_data_source_start
  lla.gprel t1, metal_segment_data_target_start
  lla.gprel t2, metal_segment_data_target_end
#else
  la t0, metal_segment_data_source_start
20100162:	0000b297          	auipc	t0,0xb
20100166:	7fe28293          	add	t0,t0,2046 # 2010b960 <metal_segment_data_source_start>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:74
  la t1, metal_segment_data_target_start
2010016a:	5ff00317          	auipc	t1,0x5ff00
2010016e:	e9630313          	add	t1,t1,-362 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:75
  la t2, metal_segment_data_target_end
20100172:	83018393          	add	t2,gp,-2000 # 80000ab0 <__malloc_sbrk_start>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:78
#endif

  beq t0, t1, 2f
20100176:	00628c63          	beq	t0,t1,2010018e <_start+0x3e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:79
  bge t1, t2, 2f
2010017a:	00735a63          	bge	t1,t2,2010018e <_start+0x3e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:83

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2010017e:	0002a503          	lw	a0,0(t0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:84
  addi t0, t0, 4
20100182:	0291                	add	t0,t0,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:85
  sw   a0, 0(t1)
20100184:	00a32023          	sw	a0,0(t1)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:86
  addi t1, t1, 4
20100188:	0311                	add	t1,t1,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:87
  blt  t1, t2, 1b
2010018a:	fe734ae3          	blt	t1,t2,2010017e <_start+0x2e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:103
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_itim_source_start
  la.got.gprel t1, metal_segment_itim_target_start
  la.got.gprel t2, metal_segment_itim_target_end
#else
  la t0, metal_segment_itim_source_start
2010018e:	00005297          	auipc	t0,0x5
20100192:	c7228293          	add	t0,t0,-910 # 20104e00 <ReLUNorm>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:104
  la t1, metal_segment_itim_target_start
20100196:	5ff00317          	auipc	t1,0x5ff00
2010019a:	e6a30313          	add	t1,t1,-406 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:105
  la t2, metal_segment_itim_target_end
2010019e:	5ff00397          	auipc	t2,0x5ff00
201001a2:	e6238393          	add	t2,t2,-414 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:108
#endif

  beq t0, t1, 2f
201001a6:	00628c63          	beq	t0,t1,201001be <_start+0x6e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:109
  bge t1, t2, 2f
201001aa:	00735a63          	bge	t1,t2,201001be <_start+0x6e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:113

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
201001ae:	0002a503          	lw	a0,0(t0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:114
  addi t0, t0, 4
201001b2:	0291                	add	t0,t0,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:115
  sw   a0, 0(t1)
201001b4:	00a32023          	sw	a0,0(t1)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:116
  addi t1, t1, 4
201001b8:	0311                	add	t1,t1,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:117
  blt  t1, t2, 1b
201001ba:	fe734ae3          	blt	t1,t2,201001ae <_start+0x5e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:129
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
201001be:	0000100f          	fence.i
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:139
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_lim_source_start
  lla.gprel t1, metal_segment_lim_target_start
  lla.gprel t2, metal_segment_lim_target_end
#else
  la t0, metal_segment_lim_source_start
201001c2:	00005297          	auipc	t0,0x5
201001c6:	c3e28293          	add	t0,t0,-962 # 20104e00 <ReLUNorm>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:140
  la t1, metal_segment_lim_target_start
201001ca:	5ff00317          	auipc	t1,0x5ff00
201001ce:	e3630313          	add	t1,t1,-458 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:141
  la t2, metal_segment_lim_target_end
201001d2:	5ff00397          	auipc	t2,0x5ff00
201001d6:	e2e38393          	add	t2,t2,-466 # 80000000 <impure_data>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:144
#endif

  beq t0, t1, 2f
201001da:	00628c63          	beq	t0,t1,201001f2 <_start+0xa2>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:145
  bge t1, t2, 2f
201001de:	00735a63          	bge	t1,t2,201001f2 <_start+0xa2>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
201001e2:	0002a503          	lw	a0,0(t0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:150
  addi t0, t0, 4
201001e6:	0291                	add	t0,t0,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:151
  sw   a0, 0(t1)
201001e8:	00a32023          	sw	a0,0(t1)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:152
  addi t1, t1, 4
201001ec:	0311                	add	t1,t1,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:153
  blt  t1, t2, 1b
201001ee:	fe734ae3          	blt	t1,t2,201001e2 <_start+0x92>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:165
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
201001f2:	0000100f          	fence.i
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:172
  /* Zero the BSS segment. */
#ifdef __riscv_cmodel_compact
  lla.gprel t1, metal_segment_bss_target_start
  lla.gprel t2, metal_segment_bss_target_end
#else
  la t1, metal_segment_bss_target_start
201001f6:	83018313          	add	t1,gp,-2000 # 80000ab0 <__malloc_sbrk_start>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:173
  la t2, metal_segment_bss_target_end
201001fa:	8e818393          	add	t2,gp,-1816 # 80000b68 <metal_segment_bss_target_end>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:176
#endif

  bge t1, t2, 2f
201001fe:	00735763          	bge	t1,t2,2010020c <_start+0xbc>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:180

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20100202:	00032023          	sw	zero,0(t1)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:181
  addi t1, t1, 4
20100206:	0311                	add	t1,t1,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:182
  blt  t1, t2, 1b
20100208:	fe734de3          	blt	t1,t2,20100202 <_start+0xb2>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:195
  /* Set TLS pointer */
  .weak __tls_base	
#ifdef __riscv_cmodel_compact
  lla.gprel tp, __tls_base
#else
  la tp, __tls_base
2010020c:	83018213          	add	tp,gp,-2000 # 80000ab0 <__malloc_sbrk_start>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:201
#endif

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20100210:	c211                	beqz	a2,20100214 <_start+0xc4>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:202
  jalr a2
20100212:	9602                	jalr	a2
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:206
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20100214:	0000b517          	auipc	a0,0xb
20100218:	2e250513          	add	a0,a0,738 # 2010b4f6 <__libc_fini_array>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:207
  call atexit
2010021c:	29e0b0ef          	jal	2010b4ba <atexit>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:208
  call __libc_init_array
20100220:	30c0b0ef          	jal	2010b52c <__libc_init_array>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:212

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20100224:	0000b517          	auipc	a0,0xb
20100228:	6e850513          	add	a0,a0,1768 # 2010b90c <metal_fini_run>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:213
  call atexit
2010022c:	28e0b0ef          	jal	2010b4ba <atexit>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:214
  call metal_init_run
20100230:	6c60b0ef          	jal	2010b8f6 <metal_init_run>

20100234 <_skip_init>:
_skip_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:220

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20100234:	3739                	jal	20100142 <__metal_synchronize_harts>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:223

  /* Disable and clear all interrupt sources */
  li   a3, -1
20100236:	56fd                	li	a3,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:224
  csrc mie, a3
20100238:	3046b073          	csrc	mie,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:225
  csrc mip, a3
2010023c:	3446b073          	csrc	mip,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:229

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20100240:	301027f3          	csrr	a5,misa
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:230
  lui  a4, 0x42
20100244:	00042737          	lui	a4,0x42
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:231
  and  a4, a4, a5
20100248:	8f7d                	and	a4,a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:232
  beqz a4, 1f
2010024a:	c709                	beqz	a4,20100254 <_skip_init+0x20>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:233
  csrc mideleg, a3
2010024c:	3036b073          	csrc	mideleg,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:234
  csrc medeleg, a3
20100250:	3026b073          	csrc	medeleg,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:238
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20100254:	00040737          	lui	a4,0x40
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:239
  and  a4, a4, a5
20100258:	8f7d                	and	a4,a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:240
  beqz a4, 1f
2010025a:	c319                	beqz	a4,20100260 <_skip_init+0x2c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:241
  csrc satp, a3
2010025c:	1806b073          	csrc	satp,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:245
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20100260:	6741                	lui	a4,0x10
20100262:	02870713          	add	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:246
  and  a5, a5, a4
20100266:	8ff9                	and	a5,a5,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:247
  beqz a5, 1f
20100268:	cb89                	beqz	a5,2010027a <_skip_init+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:248
  csrr a5, mstatus
2010026a:	300027f3          	csrr	a5,mstatus
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:249
  lui  a4, 0x2
2010026e:	6709                	lui	a4,0x2
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:250
  or   a5, a5, a4
20100270:	8fd9                	or	a5,a5,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:251
  csrw mstatus, a5
20100272:	30079073          	csrw	mstatus,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:252
  csrwi fcsr, 0
20100276:	00305073          	csrw	fcsr,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:273
#endif

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2010027a:	4505                	li	a0,1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:274
  la a1, argv  /* argv = {"libgloss", NULL} */
2010027c:	00004597          	auipc	a1,0x4
20100280:	71c58593          	add	a1,a1,1820 # 20104998 <argv>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:275
  la a2, envp  /* envp = {NULL} */
20100284:	00004617          	auipc	a2,0x4
20100288:	71860613          	add	a2,a2,1816 # 2010499c <envp>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:276
  call secondary_main
2010028c:	2031                	jal	20100298 <secondary_main>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:282

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2010028e:	2400b0ef          	jal	2010b4ce <exit>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:287

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
20100292:	80a2                	mv	ra,s0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:288
  ret
20100294:	8082                	ret

20100296 <_fini>:
_fini():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:300
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
20100296:	8082                	ret

20100298 <secondary_main>:
secondary_main():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:310
 * Users can redefine secondary_main themselves to run code on secondary harts */
.weak   secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
20100298:	1141                	add	sp,sp,-16
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:312
#if __riscv_xlen == 32
  sw ra, 4(sp)
2010029a:	c206                	sw	ra,4(sp)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:316
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
2010029c:	f14022f3          	csrr	t0,mhartid
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:317
  la t1, __metal_boot_hart
201002a0:	00000313          	li	t1,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:318
  beq t0, t1, 2f
201002a4:	00628563          	beq	t0,t1,201002ae <secondary_main+0x16>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:320
1:
  wfi
201002a8:	10500073          	wfi
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:321
  j 1b
201002ac:	bff5                	j	201002a8 <secondary_main+0x10>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:323
2:
  call main
201002ae:	75d040ef          	jal	2010520a <main>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:325
#if __riscv_xlen == 32
  lw ra, 4(sp)
201002b2:	4092                	lw	ra,4(sp)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:329
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
201002b4:	0141                	add	sp,sp,16
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/crt0.S:330
  ret
201002b6:	8082                	ret

Disassembly of section .ctors:

201002c4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
201002c4:	1101                	add	sp,sp,-32
201002c6:	ce06                	sw	ra,28(sp)
201002c8:	cc22                	sw	s0,24(sp)
201002ca:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
201002cc:	36c090ef          	jal	20109638 <__metal_driver_sifive_fe310_g000_pll_init_rate>
201002d0:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
201002d4:	fec42783          	lw	a5,-20(s0)
201002d8:	c799                	beqz	a5,201002e6 <__fini_array_end+0x1e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
201002da:	800017b7          	lui	a5,0x80001
201002de:	a7078513          	add	a0,a5,-1424 # 80000a70 <__metal_dt_clock_4>
201002e2:	3e2090ef          	jal	201096c4 <__metal_driver_sifive_fe310_g000_pll_init>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
201002e6:	0001                	nop
201002e8:	40f2                	lw	ra,28(sp)
201002ea:	4462                	lw	s0,24(sp)
201002ec:	6105                	add	sp,sp,32
201002ee:	8082                	ret

201002f0 <use_hfxosc>:
use_hfxosc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
201002f0:	1101                	add	sp,sp,-32
201002f2:	ce06                	sw	ra,28(sp)
201002f4:	cc22                	sw	s0,24(sp)
201002f6:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
201002f8:	340090ef          	jal	20109638 <__metal_driver_sifive_fe310_g000_pll_init_rate>
201002fc:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20100300:	fec42583          	lw	a1,-20(s0)
20100304:	800017b7          	lui	a5,0x80001
20100308:	a7078513          	add	a0,a5,-1424 # 80000a70 <__metal_dt_clock_4>
2010030c:	4610a0ef          	jal	2010af6c <metal_clock_set_rate_hz>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20100310:	0001                	nop
20100312:	40f2                	lw	ra,28(sp)
20100314:	4462                	lw	s0,24(sp)
20100316:	6105                	add	sp,sp,32
20100318:	8082                	ret

2010031a <metal_tty_init>:
metal_tty_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2010031a:	1141                	add	sp,sp,-16
2010031c:	c606                	sw	ra,12(sp)
2010031e:	c422                	sw	s0,8(sp)
20100320:	0800                	add	s0,sp,16
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20100322:	67f1                	lui	a5,0x1c
20100324:	20078593          	add	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20100328:	800017b7          	lui	a5,0x80001
2010032c:	a3878513          	add	a0,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
20100330:	6230a0ef          	jal	2010b152 <metal_uart_init>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/tty.c:30
}
20100334:	0001                	nop
20100336:	40b2                	lw	ra,12(sp)
20100338:	4422                	lw	s0,8(sp)
2010033a:	0141                	add	sp,sp,16
2010033c:	8082                	ret

Disassembly of section .rodata:

20100340 <L1_weights>:
20100340:	9999 ba9b 9aaa aa8a a888 9aa9 99ba 08aa     ................
20100350:	a811 bba9 aaaa a889 9019 bbaa a989 0a88     ................
20100360:	9000 a998 8a9a 009a 9888 9b80 8999 18a8     ................
20100370:	80b8 9801 9ab9 3080 01cc 800a 01bb 9011     .......0........
20100380:	448d 0133 8809 8a00 774c 0133 a80a c988     .D3.....Lw3.....
20100390:	6759 9082 8a89 aaab 4741 8211 0900 89aa     Yg......AG......
201003a0:	1322 0312 0121 1000 2111 8222 0230 0112     "...!....!".0...
201003b0:	0000 a804 2319 0002 8888 9990 2089 0213     .....#....... ..
201003c0:	1012 0080 1881 0900 1231 1110 1801 dd12     ........1.......
201003d0:	2668 0828 9a88 ff54 857b 808a cc81 fa51     h&(...T.{.....Q.
201003e0:	b57c 8809 d811 f44c a37c 118b b133 d69f     |.....L.|...3...
201003f0:	a079 08a9 1100 80cc cb01 0ccc 3000 1802     y............0..
20100400:	9808 8bca 1010 8812 2101 0903 0132 0919     .........!..2...
20100410:	8918 1123 0011 0980 8082 0010 8802 8088     ..#.............
20100420:	8901 108b 8881 1108 8092 1089 0008 8280     ................
20100430:	8188 8180 8890 9010 8991 8008 8088 88a8     ................
20100440:	4142 2342 3213 4243 1100 1211 1243 1001     BAB#.2CB....C...
20100450:	9212 2210 0212 0899 1012 1110 8912 99b8     ..."............
20100460:	1810 2080 8912 bb81 1888 0008 8000 8018     ... ............
20100470:	9a81 1899 8022 8009 a901 1989 1114 1199     ...."...........
20100480:	8019 10a9 1312 1208 0219 1989 0032 9010     ............2...
20100490:	3542 1880 8021 1131 8011 0bea 2888 2352     B5..!.1......(R#
201004a0:	ecb9 19de 09b8 9a89 ffff 08be dc80 ffff     ................
201004b0:	dfff 108b c801 ffff 89aa 3100 8112 bab8     ...........1....
201004c0:	9891 1110 0188 0000 9008 0801 0008 8808     ................
201004d0:	8818 8808 0200 0088 0801 8888 0111 8198     ................
201004e0:	8088 0088 8909 8000 1000 8010 8981 9000     ................
201004f0:	8808 1220 0011 8800 99a9 8823 0212 9900     .. .......#.....
20100500:	7761 8815 0808 0008 9036 9ceb 8900 1809     aw......6.......
20100510:	ffff acff 8888 b890 fffa 99cf 0198 0018     ................
20100520:	4443 0145 0800 0008 5430 0156 0098 0008     CDE.....0TV.....
20100530:	0890 1082 0000 8901 bb88 0009 8900 9998     ................
20100540:	2018 3111 8110 0888 9aaa 2108 b902 cffc     . .1.......!....
20100550:	fbdc 18ac 8011 fffa ffff 28cf 1981 ea90     ...........(....
20100560:	bcff 0abd 1081 f888 8ceb 09b0 09a0 3320     .............. 3
20100570:	1167 28b9 8ac9 7288 8122 280a 8888 2980     g..(...r"..(...)
20100580:	9089 2099 2548 8932 009a 1101 1443 8110     ... H%2.....C...
20100590:	0180 1001 1401 0800 0222 0200 0002 0121     ........".....!.
201005a0:	8188 1188 8822 8899 0811 1021 8343 888a     ....".....!.C...
201005b0:	3011 1344 5452 1012 2223 1221 6522 3144     .0D.RT..#"!."eD1
201005c0:	2423 1223 1001 1030 1109 2100 0001 8081     #$#...0....!....
201005d0:	a818 129a 8180 9110 9080 2099 8080 0808     ........... ....
201005e0:	0100 0981 0118 0008 9089 0080 0012 0080     ................
201005f0:	0888 1980 ac81 189a 0889 0001 8921 bab8     ............!...
20100600:	8223 0110 3533 2132 1246 0800 5463 7777     #...352!F...cTww
20100610:	9911 8988 3421 4676 8bde 8aa9 bdc8 feed     ....!4vF........
20100620:	089b 8cb8 ffd9 efff 0a00 99a9 bcb8 98ab     ................
20100630:	9990 188a 8901 1009 8110 0180 1000 0181     ................
20100640:	8802 0108 9001 429a 9a05 2000 d800 72ef     .......B... ...r
20100650:	a9b4 8899 f821 72ff 0ac4 1888 a542 70ff     ....!..r....B..p
20100660:	9ac3 1108 5553 7bff 10b1 8001 5323 7df4     ....SU.{....#S.}
20100670:	8081 1189 2089 3e84 8890 18a8 89a9 8911     ..... .>........
20100680:	0090 1800 9988 8100 0080 0021 8081 1008     ..........!.....
20100690:	8091 8909 1118 0091 8080 0090 9089 1009     ................
201006a0:	1800 0088 8988 8181 0800 1002 9a90 8800     ................
201006b0:	8808 1080 8801 0808 0090 1810 8181 0108     ................
201006c0:	9112 9a98 98a9 0098 2533 9800 989a 2200     ........3%....."
201006d0:	4545 8002 9988 3109 4313 9825 8808 4329     EE.....1.C%...)C
201006e0:	0354 9012 2112 5754 0018 8810 4534 2145     T....!TW....4EE!
201006f0:	aacf 99a9 0120 cd92 cccb aabd 8a00 b012     .... ...........
20100700:	b999 a9ba 889a 9880 9118 9aab 808a 8aa9     ................
20100710:	8888 a998 8889 9889 2001 0080 aa9a 89a9     ......... ......
20100720:	2002 0900 bca8 0809 9900 0902 8b98 8019     . ..............
20100730:	9aa8 9888 9a98 0880 89ac a8a8 8aa9 9a8a     ................
20100740:	2221 8891 9980 0898 3352 0910 1018 1000     !"......R3......
20100750:	9042 8888 0121 3212 9b02 8aa9 1332 2018     B...!..2....2.. 
20100760:	cdc2 adfe 2331 5102 ffff 9dff 8823 3389     ....1#.Q....#..3
20100770:	ffff 8cff 9001 2280 2bc9 8982 2890 1110     .......".+...(..
20100780:	5219 1477 9091 9089 2238 3672 9908 0809     .Rw.....8"r6....
20100790:	0210 0211 8808 8889 9122 1000 9888 b000     ........".......
201007a0:	0808 8808 1000 9998 898a 8009 1080 8091     ................
201007b0:	9809 008a 8018 8980 8989 080a 0000 8011     ................
201007c0:	0809 9008 8988 8980 1001 8100 0008 0810     ................
201007d0:	0024 0808 0000 4222 0376 9888 2128 6433     $....."Bv...(!3d
201007e0:	3648 0081 2100 9801 2aee 8223 6400 b926     H6...!...*#..d&.
201007f0:	ddb3 809b bba8 3431 ca22 88ae ffc9 19ce     ......14".......
20100800:	9181 9bba deba 1bfc 0190 9018 18b9 9b08     ................
20100810:	9ba9 1012 0099 a882 8908 1011 1288 0903     ................
20100820:	0909 8828 1808 0812 0881 0818 0008 1080     ..(.............
20100830:	2398 8989 0990 9310 a988 8819 8918 8a80     .#..............
20100840:	0021 1200 8000 0809 9818 0188 9812 0999     !...............
20100850:	a810 0089 a880 10cb 9128 219b 9900 28cc     ........(..!...(
20100860:	0888 2089 a801 23ab 098b 2300 bb81 27cf     ... ...#...#...'
20100870:	228c 1433 fa11 77bf 1080 3332 8120 77ff     ."3....w..23 ..w
20100880:	8882 2100 3118 7bfb 0083 0189 0001 2ca8     ...!.1.{.......,
20100890:	2183 0881 1a01 0a01 0100 0021 1801 0110     .!........!.....
201008a0:	800a 0010 0808 0009 0989 0088 2110 0820     .............! .
201008b0:	8900 2118 9888 8890 0811 2080 0002 0801     ...!....... ....
201008c0:	99aa 0088 0810 a990 aaba 0089 3201 9892     .............2..
201008d0:	aba9 009a 7631 1556 8815 0999 7621 6776     ....1vV.....!vvg
201008e0:	0246 8898 a088 49cb 118b 0811 fdc9 ffff     F......I........
201008f0:	319a 9911 9dcb c820 0a98 888b 4288 8998     .1.... ......B..
20100900:	8880 8998 8031 1081 9880 9909 0231 1241     ....1.......1.A.
20100910:	1899 89a0 1111 8100 1001 0000 1011 1001     ................
20100920:	8120 0808 0a80 1888 8988 8098 aa90 8980      ...............
20100930:	0908 8008 9981 8881 0100 1180 8800 08a9     ................
20100940:	0000 2218 1110 0812 0888 1200 0181 8000     ..."............
20100950:	8180 0118 1001 9001 0888 1101 9008 a809     ................
20100960:	0009 1280 1008 0009 8298 1009 1080 1899     ................
20100970:	8890 1019 8a90 1099 1018 0008 0a98 021a     ................
20100980:	120a 0800 8888 832a 089c 0988 1191 3609     ......*........6
20100990:	11ea 1012 0082 72ba 09f5 1211 9120 7399     .......r.... ..s
201009a0:	aed5 0800 b812 749b ed84 899c cb02 520a     .......t.......R
201009b0:	fc83 18ae 9911 7529 a804 008a 9822 5529     ......)u....".)U
201009c0:	8aaa 8898 1218 9880 8bdc 8010 4310 cca1     .............C..
201009d0:	09bb 0111 3421 dfe8 23bb 0111 1328 ffe8     ....!4...#..(...
201009e0:	311d 1201 0220 ffc0 245e 1222 2110 ffb2     .1.. ...^$"..!..
201009f0:	035a 1029 0889 fe10 9038 880a 0899 a343     Z.).....8.....C.
20100a00:	a80a 8999 9808 9011 8028 80a9 8900 a8ba     ........(.......
20100a10:	0111 09b9 0020 8009 8208 8002 1220 0121     .... ....... .!.
20100a20:	2380 0101 1180 0801 2000 9100 8099 0898     .#....... ......
20100a30:	1101 8010 8088 8288 0008 9891 1808 8100     ................
20100a40:	8809 0000 1100 0022 899a 8000 1011 8811     ......".........
20100a50:	110a 1010 0011 9821 21b9 1220 0901 0088     ......!..! .....
20100a60:	1890 2280 1991 8800 0122 1118 9090 9a8a     ..."....".......
20100a70:	6403 0245 9980 2a98 bef2 0240 2321 5901     .dE....*..@.!#.Y
20100a80:	ff17 80bf 0808 1a28 f376 9bff 9080 da89     ......(.v.......
20100a90:	8779 9cef 9218 c989 132a 9ac9 8100 8000     y.......*.......
20100aa0:	0011 98a1 1188 1980 9001 0081 8808 0980     ................
20100ab0:	8018 0000 1888 0808 8880 0088 9018 0018     ................
20100ac0:	cba9 aaaa 989b 0989 ad88 a9ab 08aa 1109     ................
20100ad0:	aa91 babb 2000 1181 bc83 abaa 2118 1233     ..... .......!3.
20100ae0:	0ba8 9b08 3000 8b80 018a a901 0188 dab8     .....0..........
20100af0:	2444 a823 0898 a810 0375 b922 1889 bba0     D$#.....u.".....
20100b00:	b913 bbac 8989 9bb9 ba15 a9ab 0988 1181     ................
20100b10:	3433 8988 8b99 1101 8223 8118 aa88 0988     34......#.......
20100b20:	1211 9020 8918 1081 4120 9120 0019 1222     .. ..... A ...".
20100b30:	3202 9801 0189 2634 0111 b800 199a 3521     .2....4&......!5
20100b40:	9aa8 99a9 899a 8990 9889 9a89 8808 89aa     ................
20100b50:	8911 a888 9119 8889 8122 9809 2211 0aa0     ........"...."..
20100b60:	0233 8000 1431 0002 1555 0110 3363 3233     3...1...U...c332
20100b70:	2463 1412 1232 0032 4898 9234 8018 8000     c$..2.2..H4.....
20100b80:	19a8 9112 8809 100a 0802 9819 88aa 0898     ................
20100b90:	8112 ba98 8089 8081 8880 aa99 089b 8001     ................
20100ba0:	998b b9a0 0aaa b889 9988 9900 99ba 899a     ................
20100bb0:	a988 ba80 baaa a899 889a baa8 898b 89a8     ................
20100bc0:	0008 8889 0908 8808 1880 0100 0a80 0888     ................
20100bd0:	9909 1898 1891 8889 0800 0089 9880 8800     ................
20100be0:	0098 0890 a898 8890 8908 1808 8890 9800     ................
20100bf0:	1109 0081 8899 0880 aa98 0089 8a9a 9a88     ................
20100c00:	bcca 110d 9898 8180 7774 0477 0188 0001     ........tww.....
20100c10:	7777 8016 1800 3111 fdbb 98bc 8020 8112     ww.....1.... ...
20100c20:	ffec 89df 0828 8099 8131 09b8 0108 0888     ....(...1.......
20100c30:	3308 1813 0080 8081 1001 0113 0811 0808     .3..............
20100c40:	0899 0089 9889 ab98 8890 9808 9880 880a     ................
20100c50:	8888 8080 1010 8898 8800 8900 8028 8988     ............(...
20100c60:	8888 0920 2821 8880 8918 0892 0110 0810     .. .!(..........
20100c70:	8990 9bb9 2200 0028 ffff 9cfe becc ffde     ....."(.........
20100c80:	aabc aaba fffd eeff 3531 0023 cffb 80bc     ........15#.....
20100c90:	5444 3454 2298 2223 2235 2342 5743 4664     DTT4."#"5"B#CWdF
20100ca0:	9181 2231 5651 8333 8221 1020 4311 0902     ..1"QV3.!. ..C..
20100cb0:	0890 0010 8008 3089 0011 0801 0080 0188     .......0........
20100cc0:	8180 9800 1080 1121 3241 0812 2110 2234     ......!.A2...!4"
20100cd0:	1211 8112 2111 0131 1211 0223 1081 1311     .....!1...#.....
20100ce0:	0101 8111 9888 0001 1021 1220 a990 1908     ........!. .....
20100cf0:	1984 8808 1008 5441 8822 8901 4089 4443     ......AT"....@CD
20100d00:	5643 8911 0a98 2323 0311 9ab9 a888 88aa     CV....##........
20100d10:	aefe 9acb 9988 ccda cbba 9819 9aa8 accc     ................
20100d20:	000a 0018 9ba8 bbba 0a9b 8898 aa99 9abb     ................
20100d30:	89ac 0980 99a9 98ab 89ab 8808 aa88 89ba     ................
20100d40:	1111 2112 8802 2011 8088 1318 0211 8981     ...!... ........
20100d50:	9180 108a 8100 8118 8880 0099 1900 0012     ................
20100d60:	9990 0089 1080 1811 0111 1881 8882 0000     ................
20100d70:	8220 0080 9b80 9a81 8209 2899 bea1 9808      ..........(....
20100d80:	8881 3189 ff91 122b 0014 1080 fd91 52af     ...1..+........R
20100d90:	2476 1018 a110 0bfe 102f 2922 1100 ffc9     v$....../.")....
20100da0:	1bff 0002 1201 fd22 8fff 0000 8000 9441     ......".......A.
20100db0:	aefa 0108 0110 1418 aaa2 0219 0022 4300     ............"..C
20100dc0:	9889 8800 8018 1980 098a 0899 8010 8890     ................
20100dd0:	8189 1898 9880 0888 8800 0888 9812 8000     ................
20100de0:	8808 0800 0081 10a0 0800 1108 1810 1008     ................
20100df0:	0898 1180 8889 8009 1090 0900 8088 8218     ................
20100e00:	8808 1189 a900 a210 a01a 8998 9a88 b330     ..............0.
20100e10:	843d 99a9 9da9 f440 249f 9982 2bb9 f452     =.....@..$...+R.
20100e20:	53cf 1021 609a f354 2cff 2343 7198 d434     .S!..`T..,C#.q4.
20100e30:	afff 0022 4308 c347 afff 1000 3211 8145     .."..CG......2E.
20100e40:	1200 1212 2132 8081 18a9 3132 2222 8091     ....2!....21""..
20100e50:	0a00 3211 2122 0338 999a 1210 2180 1211     ...2"!8......!..
20100e60:	9199 1310 9a98 2310 1099 2808 aba9 4418     .......#...(...D
20100e70:	9c82 0889 889b c073 8902 2001 18c9 ff54     ......s.... ..T.
20100e80:	0914 1901 6af9 cc25 0822 0a90 8fe9 c845     .....j%.".....E.
20100e90:	888c 1a98 efc8 b130 b9a8 098a ff80 8a9b     ......0.........
20100ea0:	9002 19a8 c991 0abb 8888 2888 8010 0a99     ...........(....
20100eb0:	1899 1808 0911 1000 808a 2200 8821 b889     ..........."!...
20100ec0:	0888 1010 0008 8881 0098 0110 8010 0808     ................
20100ed0:	1880 0110 9810 0280 0888 1001 a080 8098     ................
20100ee0:	8208 8081 8111 8111 18aa 0101 0110 8888     ................
20100ef0:	2210 9801 9808 a088 2777 9ab0 0980 3212     ."......w'.....2
20100f00:	fe85 8bff 1101 6121 ffff 109f 0108 a808     ......!a........
20100f10:	19de 2255 0108 c980 5762 8013 8008 0898     ..U"....bW......
20100f20:	9b98 898a 8801 0898 8988 89aa 0890 1888     ................
20100f30:	0110 0899 8000 8a88 9099 0001 8108 9089     ................
20100f40:	9244 9ab8 aaa9 6420 0113 baa8 20ab 4544     D..... d..... DE
20100f50:	08ba baa8 110a 8453 8a82 aaaa 7629 8046     ......S.....)vF.
20100f60:	8c99 ccbb 7738 ba57 0bba abba 7720 ff87     ....8wW..... w..
20100f70:	2889 a901 6658 bd93 1011 8232 2308 9d82     .(..Xf....2..#..
20100f80:	1808 8222 3088 ac13 0000 0020 9080 9913     .."..0.... .....
20100f90:	8010 8918 9109 0010 8000 9081 9008 9880     ................
20100fa0:	8888 9021 8818 9a99 0889 9a01 2898 a898     ..!..........(..
20100fb0:	9188 9a88 08ab 8898 8909 9a9a 99aa 9098     ................
20100fc0:	1882 2021 0001 3310 9890 0101 9a80 2339     ..! ...3......9#
20100fd0:	99a8 2189 aca8 2440 88ab 2188 8ee8 8373     ...!..@$...!..s.
20100fe0:	109a 2000 0ffc c675 098b 1800 8ff9 f574     ... ..u.......t.
20100ff0:	901b 8888 ceca f572 008a 8011 da81 947a     ......r.......z.
20101000:	0088 1100 9021 058a 8888 3089 1230 8298     ....!......00...
20101010:	0108 1088 1012 8801 0089 118a 1801 0080     ................
20101020:	8818 1128 8980 9800 9880 1280 0888 8008     ..(.............
20101030:	8080 1110 9982 1819 0008 2088 1002 0008     ........... ....
20101040:	0108 9880 a98a 9089 1300 8800 8189 1088     ................
20101050:	1899 8802 2018 8008 1098 a112 1010 1008     ..... ..........
20101060:	0199 8121 8911 0218 2288 a110 8100 8900     ..!......"......
20101070:	8981 9998 0182 9888 d953 9ced 0831 a801     ........S...1...
20101080:	166b bdf9 8880 a0a9 770f 8b02 0080 0089     k........w......
20101090:	77ff a057 8310 0089 41dd 8034 019a 8000     .wW......A4.....
201010a0:	2108 8013 28ba a989 389a 9833 0aca 99a0     .!...(...83.....
201010b0:	208a a880 89bb 9180 0018 a888 99ba 8011     . ..............
201010c0:	09a9 1089 0010 a8a0 0990 0800 8880 aa02     ................
201010d0:	8188 0181 1001 a981 88a8 0002 1318 0888     ................
201010e0:	1108 1081 9000 0232 2199 10a1 0022 8310     ......2..!.."...
201010f0:	1090 0090 1800 8a82 0220 9880 0818 0c98     ........ .......
20101100:	0121 9980 8999 2aa0 a856 08a9 8198 8cac     !......*V.......
20101110:	8257 888b 8118 efcb 1067 8221 9311 ffda     W.......g.!.....
20101120:	8236 1461 8231 cfdb 2422 1223 8321 9fdc     6.a.1..."$#.!...
20101130:	3311 8022 8128 afed 0901 8801 9000 bdbb     .3".(...........
20101140:	1020 1200 1221 8000 008c 0212 8001 ecaa      ...!...........
20101150:	9cff 2188 9801 ecc8 eeb0 100c 1800 8103     ...!............
20101160:	e057 00bf 0081 6411 2640 18eb 8a00 ae90     W......d@&......
20101170:	31ab 0884 8da0 a142 9883 0088 cdb8 762a     .1....B.......*v
20101180:	8823 18b9 aa81 0abc 0229 1818 1211 dca0     #.......).......
20101190:	198b 1218 0213 c980 9cd9 2010 9813 2100     ........... ...!
201011a0:	9980 1209 a911 2089 0111 3288 a883 9abb     ....... ...2....
201011b0:	1200 1210 0822 a101 8898 0212 1120 0120     ...."....... . .
201011c0:	1808 2120 8011 0000 08a8 2308 9822 aaa8     .. !.......#"...
201011d0:	acdd 1199 a881 efed efff 08ae 9a80 dfcb     ................
201011e0:	ffff 08bf aa18 ffcb ffff 0aac 9111 fc00     ................
201011f0:	0ac9 09a8 4344 2573 1344 3020 1435 2308     ....DCs%D. 05..#
20101200:	2311 4008 0913 20a8 0810 1188 8988 0a91     .#.@... ........
20101210:	9008 0119 aa01 9a88 8090 0018 9802 2088     ............... 
20101220:	0002 1890 8a12 1801 0000 2098 1132 8120     ........... 2. .
20101230:	0109 2018 3432 8108 2121 3221 4342 2233     ... 24..!!!2BC3"
20101240:	8888 1881 0800 8819 8988 0188 8881 8899     ................
20101250:	8a88 108a aa88 1088 0080 0009 80a8 9881     ................
20101260:	0118 088b 899a 0999 8010 1980 8000 0110     ................
20101270:	0ab9 8900 9800 9891 8900 0bb8 0089 0988     ................
20101280:	9110 0bdb 8808 8809 ddd9 2008 1880 8080     ........... ....
20101290:	20bc 3564 0898 0000 7777 3247 1281 5009     . d5....wwG2...P
201012a0:	7773 8135 0101 a001 acdc 09aa 1981 9188     sw5.............
201012b0:	ffd9 09ab 8001 808a aa98 1009 1111 8100     ................
201012c0:	2211 0001 1101 8bb8 2240 0103 4400 eff9     ."......@"...D..
201012d0:	1255 0011 5431 fff1 9067 808a 6508 efe7     U...1T..g....e..
201012e0:	ab57 089a 20a8 df36 9a27 8988 1dca df72     W.... 6.'.....r.
201012f0:	0a85 0900 bc91 d139 0881 8a01 8808 988a     ......9.........
20101300:	0080 9180 0110 1880 8081 1898 0000 1900     ................
20101310:	1808 0880 8008 1818 0808 0008 0880 0890     ................
20101320:	0000 8080 8898 0081 9988 1080 9891 0890     ................
20101330:	0888 1808 0980 a089 0888 1188 0880 8008     ................
20101340:	8080 2210 1102 0211 8908 1009 0111 0030     ..."..........0.
20101350:	a821 1289 8081 2801 9090 289c 0100 1980     !......(...(....
20101360:	0802 18a9 0211 1919 8322 10a0 1221 2caa     ........"...!..,
20101370:	8025 8900 0121 0fff 2980 1881 ba08 1cff     %...!....)......
20101380:	19a1 2010 ca88 43ff 8092 1088 ab89 60ef     ... ...C.......`
20101390:	89e8 0029 9980 59fc 40a0 0101 b900 29b9     ..)....Y.@.....)
201013a0:	8228 1088 b910 1928 8188 1080 8810 ba18     (.....(.........
201013b0:	8a80 0100 0110 8002 0818 2000 1100 8882     ........... ....
201013c0:	99ac 8aa9 9a8a aba9 bcbc 8899 aaa8 cdbb     ................
201013d0:	bbbc 8abb 0008 baa8 0139 88a8 808a 89a8     ........9.......
201013e0:	0121 9aa0 9a18 8890 8812 989a 9998 2118     !..............!
201013f0:	0982 9889 2289 1012 0010 0100 1190 8182     ....."..........
20101400:	8800 0228 a988 0991 1288 8124 b828 99ba     ..(.......$.(...
20101410:	1211 8988 8231 09a9 bbfe 99db 2330 dcb1     ....1.......0#..
20101420:	efff 89ac 2450 ca02 8a03 0001 4521 4533     ....P$......!E3E
20101430:	5777 8237 2289 7666 6676 9835 2888 6644     wW7.."fvvf5..(Df
20101440:	9881 1108 1101 3424 a924 0208 2088 2465     ......$4$.... e$
20101450:	0033 1000 bba0 4489 8812 0118 fff9 9fff     3......D........
20101460:	012c 0120 ffcd ffff 012a 8122 08b9 cc98     ,. .....*.".....
20101470:	1189 0108 3331 9265 1821 0100 1354 1122     ....13e.!...T.".
20101480:	aba1 8009 0982 0a99 9a88 8898 29b0 1920     .............) .
20101490:	0810 1889 89b8 921a 0021 8080 9998 1188     ........!.......
201014a0:	1208 8112 1ba8 9012 8008 0188 cba0 80aa     ................
201014b0:	889a 0001 0001 90aa 1098 1100 8000 aaa8     ................
201014c0:	9988 8988 aaa0 aa99 989b 9aaa aba9 822a     ..............*.
201014d0:	9aab 89ab 99ba 9009 9bdc 9aab 80ba 00a9     ................
201014e0:	9bbd 999a 8ac9 98a0 a89a 8888 cbb9 bce9     ................
201014f0:	8199 1010 eec8 cffb 4308 1222 bdba 0bba     .........C".....
20101500:	5311 1246 8a9a 3901 2000 0443 1442 0833     .SF....9. C.B.3.
20101510:	8884 8010 4661 0044 9924 9908 3641 2013     ....aFD.$...A6. 
20101520:	9a11 8ab9 8210 9090 0800 8999 0128 0308     ............(...
20101530:	1009 8908 1288 0189 1281 9888 0088 0020     .............. .
20101540:	8089 1800 1008 9080 8898 0088 8020 1089     ............ ...
20101550:	9188 0089 8980 8118 131a 8090 9992 0001     ................
20101560:	045b 80c9 aa00 0191 a570 8acc 0801 a8a9     [.......p.......
20101570:	877d 09dc 0122 d208 576f 0aa8 0033 c18a     }..."...oW..3...
20101580:	478f 198a 0211 0002 13ad 0009 9882 0891     .G..............
20101590:	828b 8088 8b10 aa18 0810 8198 a801 8909     ................
201015a0:	8118 1888 1110 1080 1090 1890 9000 0908     ................
201015b0:	0992 1108 8810 1a08 1080 0188 8880 0080     ................
201015c0:	0008 1210 8012 98a8 0981 1088 bb00 28ab     ...............(
201015d0:	8081 1108 a818 8cec 0819 1109 5653 9037     ............SV7.
201015e0:	0811 0108 6331 3777 899b 1888 ffea deff     ....1cw7........
201015f0:	0081 1808 fffd 9cff 8810 1810 29ab 3464     .............)d4
20101600:	0108 0088 2409 0113 9800 0098 0090 a908     .....$..........
20101610:	0080 0081 0808 1002 9808 8880 8a00 0888     ................
20101620:	0898 1010 8902 8188 8818 0808 8a02 8098     ................
20101630:	8081 2090 0011 0a08 0080 1100 1000 1110     ... ............
20101640:	099b 9990 98a8 bb89 2219 8003 9988 a989     ........."......
20101650:	5775 9136 889a 0808 6777 9134 0989 5118     uW6.....wg4....Q
20101660:	9edb 0889 9008 8100 ffff 9aff 8808 d988     ................
20101670:	0933 99ac 080a 2000 7752 8045 8180 8980     3...... RwE.....
20101680:	8aaa 1310 0000 0888 b889 199a 8020 8008     ............ ...
20101690:	1110 8888 1121 8888 8881 0008 8089 9808     ....!...........
201016a0:	1888 0008 9980 818a 1800 0800 8890 0908     ................
201016b0:	0000 8880 0899 8801 8008 9981 0998 0010     ................
201016c0:	3211 2113 3232 1110 1088 3222 1001 b888     .2.!22...."2....
201016d0:	0818 2112 9001 808a 3018 3123 18a1 1991     ...!.....0#1....
201016e0:	0100 1380 0410 8880 0089 2119 0908 1101     ...........!....
201016f0:	882b 2100 1020 9212 022f 0209 3108 1412     +..! .../....1..
20101700:	23bf 0010 3bb0 1318 28ea 8800 9cc8 6519     .#...;...(.....e
20101710:	abb3 0a08 9aa0 71b9 9936 8abb 9a81 afcb     .......q6.......
20101720:	1361 0ac9 8a88 ff90 431b 8aa2 0802 fda0     a........C......
20101730:	2239 0833 8001 fda9 1319 2022 1023 db99     9"3......." #...
20101740:	aa98 0088 0888 8120 99a0 00a9 0089 8042     ...... .......B.
20101750:	0298 8808 1899 9824 0899 8001 0988 1020     ......$....... .
20101760:	0899 0888 8998 b880 0981 0012 a89b 18a9     ................
20101770:	b918 0023 10ac 3652 8bbc 8111 4328 2445     ..#...R6....(CE$
20101780:	119f 8911 4348 9905 230f 9a80 5458 9b14     ....HC...#..XT..
20101790:	818b aa99 4320 bc16 8008 9ab9 0019 9036     .... C........6.
201017a0:	9898 9cdb 118a a845 88aa 0a98 20a9 9353     ......E...... S.
201017b0:	8bda 8989 1988 2552 9aaa 8808 8009 1230     ......R%......0.
201017c0:	1432 a988 a999 1898 4748 aa02 a9ab ba88     2.......HG......
201017d0:	751b b924 acaa b990 669f a035 8a99 a912     .u$......f5.....
201017e0:	64ff 9121 889a 0008 75ff 9403 8208 4918     .d!......u.....I
201017f0:	77fd 0434 1008 3808 378b 1442 8a98 9808     .w4....8.7B.....
20101800:	2429 8210 a9ba aa09 a030 8089 98a8 b890     )$......0.......
20101810:	9010 0009 8120 9880 0080 9901 1118 0880     .... ...........
20101820:	0818 9998 8008 1818 8080 aa98 8009 1009     ................
20101830:	0810 a9a8 089a 0088 9a88 99ab 88b9 9881     ................
20101840:	8898 8898 9008 0880 9980 0989 8008 9998     ................
20101850:	0108 0888 a098 0189 8a11 9900 9888 1888     ................
20101860:	9989 0888 8891 8080 0000 a989 0009 0988     ................
20101870:	9988 0988 88aa 0999 11a9 98a0 aaa9 880a     ................
20101880:	8998 9a90 aa80 08a9 8991 0899 1010 0908     ................
20101890:	189a 000a 1122 d982 08ce 0128 4422 c824     ....".....(."D$.
201018a0:	2347 0244 2312 7765 7677 8354 1880 6640     G#D..#ewwvT...@f
201018b0:	1221 8102 ba00 009b ddef 8989 9a99 feed     !...............
201018c0:	0098 2221 1321 0110 089b 1001 1113 9808     ..!"!...........
201018d0:	9a98 3190 9982 8910 0990 1190 9b81 8098     ...1............
201018e0:	8a99 0009 1122 9181 98a0 2011 3232 8113     ...."...... 22..
201018f0:	8a95 1188 9122 411a 0898 1020 d901 429c     ...."..A.. ....B
20101900:	0089 1080 ed92 8109 2118 0900 ff91 8330     .........!....0.
20101910:	112a 0800 ff81 247d 8089 1081 fe81 145f     *.....}$......_.
20101920:	1888 0891 fa80 20bf 9901 1019 d881 0adf     ....... ........
20101930:	1222 1002 a801 19dc 1810 3222 8012 88ab     "........."2....
20101940:	099a 0110 1018 8999 bbed 8019 8902 b999     ................
20101950:	cfff 118a aa88 e989 3429 1212 0990 bca0     ........)4......
20101960:	7777 2357 8990 3aa8 7431 3455 0880 1218     wwW#...:1tU4....
20101970:	fffa 10ab 0901 1011 c933 8cec 0000 0008     ........3.......
20101980:	3528 8981 8212 8919 0999 0821 1011 0001     (5........!.....
20101990:	8988 1219 1080 8112 1111 1189 0000 0881     ................
201019a0:	0988 2099 9800 0808 0000 1011 a800 88a9     ... ............
201019b0:	0110 0230 9a00 9088 8898 1200 8981 0888     ..0.............
201019c0:	99aa b9aa a99b 899a 8990 bba9 abb9 988a     ................
201019d0:	aa91 9980 8999 0080 8a80 9811 998a 0898     ................
201019e0:	2001 a002 8899 9999 3090 8223 9aa8 8999     . .......0#.....
201019f0:	61fa 8312 9899 1999 7afc 3424 2298 0888     .a.......z$4."..
20101a00:	7ef8 3567 0029 2918 7cf1 3677 110a 8988     .~g5)..).|w6....
20101a10:	39b9 2455 2099 9980 1098 2342 8899 9818     .9U$. ....B#....
20101a20:	1089 8331 809a 1988 0889 9132 119a aaa8     ..1.......2.....
20101a30:	0000 a011 98ab 808a 0810 aa90 99a9 09b9     ................
20101a40:	0111 0011 0181 1108 1032 1811 8818 3188     ........2......1
20101a50:	8212 0800 2119 1111 8202 1980 1000 0882     .....!..........
20101a60:	8808 8988 0888 a990 3242 9b91 0801 0113     ........B2......
20101a70:	9077 8cdb 2211 5431 fff1 9bef 0880 3199     w...."1T.......1
20101a80:	ffff aabf a900 f890 8bff 8332 9999 ca08     ..........2.....
20101a90:	4442 8022 b188 0a89 0891 0089 8008 0991     BD".............
20101aa0:	8101 9028 8880 8008 1881 1111 9900 9808     ..(.............
20101ab0:	9888 0081 9080 1800 0809 1081 0811 9a88     ................
20101ac0:	1918 0088 0801 0000 000b 0000 8990 a890     ................
20101ad0:	089b 1020 a990 8218 10ab 1221 a908 009a     .. .......!.....
20101ae0:	129a 0101 2453 8881 120b 0110 7773 0577     ....S$......sww.
20101af0:	802b 0319 fc99 dcdf 8012 0181 fffb bfff     +...............
20101b00:	0115 0121 ffec 2089 0094 1008 39cb 3224     ..!.... .....9$2
20101b10:	0801 8899 01a9 0203 8099 8099 199a 1002     ................
20101b20:	0019 0108 0989 0020 a800 0888 8818 1081     ...... .........
20101b30:	9ab0 1099 9080 2108 8010 0118 0010 1200     .......!........
20101b40:	109a 1020 1011 9a99 9bbe 1000 8011 ddca     .. .............
20101b50:	bccb 1009 9998 ca99 b8ad 080a aa88 ccba     ................
20101b60:	8014 1099 4320 6756 8155 1998 5462 7776     .... CVgU...bTvw
20101b70:	000b 0008 8800 fffa 08a9 1888 db80 9cac     ................
20101b80:	8801 0880 1900 0011 8019 10a8 0881 9998     ................
20101b90:	1098 1981 8080 1200 1091 1090 8212 9988     ................
20101ba0:	8181 1090 0033 8101 8981 8180 2212 0000     ....3........"..
20101bb0:	8880 1089 1212 a080 1090 2288 0000 0018     ..........."....
20101bc0:	3441 8812 0908 1218 4332 0013 a988 2210     A4......2C....."
20101bd0:	4331 0004 dda8 1320 3131 1133 bdba 0230     1C.... .113...0.
20101be0:	1211 2251 ffeb 322a 2104 0232 fed9 76af     ..Q"..*2.!2....v
20101bf0:	1157 0221 cba9 6dff 0144 0909 9010 bffb     W.!....mD.......
20101c00:	0880 9a99 3021 fea1 0809 8980 1118 fb00     ....!0..........
20101c10:	a989 8800 8100 fa00 a998 0098 88a9 b889     ................
20101c20:	9888 0009 9a98 9a9b 8188 8808 8988 9a89     ................
20101c30:	0880 0801 a999 abaa 8989 0880 8888 a9a8     ................
20101c40:	9890 89a8 0989 0288 9901 88a9 1008 3334     ..............43
20101c50:	8210 899a 2108 8211 808a 9899 1308 0811     .....!..........
20101c60:	099a 888b 8000 9000 908a 8998 0909 8201     ................
20101c70:	b911 9889 8891 1981 a801 0019 9b90 1898     ................
20101c80:	4330 9081 ab10 0899 2332 0321 1221 3001     0C......2#!.!..0
20101c90:	a903 8321 4322 3112 9993 0100 3443 2254     ..!."C.1....C4T"
20101ca0:	1023 9882 4731 0233 0088 a889 5488 a893     #...1G3......T..
20101cb0:	eeea a8ae 8109 aaa8 efff aaaa 8889 edbb     ................
20101cc0:	8880 0012 0101 0120 aaa3 1028 9800 4208     ...... ...(....B
20101cd0:	ee94 1089 9981 2088 ff16 109b 9180 4989     ....... .......I
20101ce0:	ff87 218b 0021 1d98 ff17 210c 8821 2b10     ...!!......!!..+
20101cf0:	fc47 008c 1124 9900 c074 0018 9111 f880     G...$...t.......
20101d00:	a141 2221 8088 f209 983a 112a 0889 b810     A.!"....:.*.....
20101d10:	aa89 1118 8198 9990 8a01 0101 0188 0981     ................
20101d20:	a988 009b 9022 8100 0018 1980 0123 8910     ....".......#...
20101d30:	9881 1109 8112 8888 8908 0108 1011 8081     ................
20101d40:	8089 8888 8998 b890 889b 8009 0888 ba89     ................
20101d50:	10a9 0081 0018 0888 209a 8990 9810 0822     ......... ....".
20101d60:	0188 99a9 0911 0202 8209 8ba8 2020 8813     ............  ..
20101d70:	8088 0ab8 2321 9a02 98a8 a812 4243 8ff1     ....!#......CB..
20101d80:	9892 0018 4553 2ff8 8084 800a 6322 9ff6     ....SE./...."c..
20101d90:	aa05 809b 6221 cf27 a000 888a 3080 a243     ....!b'......0C.
20101da0:	a180 0809 1088 8020 9898 8999 8819 8008     ...... .........
20101db0:	2188 9999 8089 0889 1198 9909 8099 9088     .!..............
20101dc0:	a88a 8a08 0089 8999 9abc a899 0989 b888     ................
20101dd0:	99db 8888 2a8a 8100 1998 9989 2909 9908     .....*.......)..
20101de0:	2898 9832 1188 9888 0880 9811 8111 1880     .(2.............
20101df0:	9800 9988 8031 2188 339f 0003 0132 da90     ....1..!.3..2...
20101e00:	0dff 9813 2121 89a9 fff0 acce 1111 38a9     ....!!.........8
20101e10:	fd05 adff 9b80 399a 9244 aced 9b00 21aa     .......9D......!
20101e20:	1351 8a82 2131 4321 1212 0022 5653 1457     Q...1!!C..".SVW.
20101e30:	1212 8802 5630 3356 1100 9080 1188 0001     ....0VV3........
20101e40:	2344 8002 1909 3313 1234 8882 2800 4000     D#.....34....(.@
20101e50:	0aa1 8008 1199 1898 a9a9 0090 8998 99b8     ................
20101e60:	9a9a 8899 999a 8a80 aabb 8108 1099 c900     ................
20101e70:	3318 0234 028a a800 4765 1454 1109 3312     .34.....eGT....3
20101e80:	2315 2544 2120 2122 1131 2531 8030 9899     .#D% !"!1.1%0...
20101e90:	1210 3321 999a c08a 8988 0089 bbdb 9209     ..!3............
20101ea0:	ca80 a8bc cfd9 099a eeea 8aac 8ba9 cdba     ................
20101eb0:	bb9a 88aa 19a8 fd92 0008 889b 2199 b900     .............!..
20101ec0:	0098 0099 0110 0120 109b 1081 0010 a233     ...... .......3.
20101ed0:	229a 0082 2111 1010 229a 1011 1101 8100     ."...!..."......
20101ee0:	8199 8899 1001 0011 039a 8002 2210 6320     ............." c
20101ef0:	8bff 8a21 3223 6643 ffff acce 0128 4211     ..!.#2Cf....(..B
20101f00:	fcb9 9bce 1009 2098 21a0 a009 1198 0001     ....... .!......
20101f10:	0a9b 0818 8889 9a02 089a 0030 9a88 8888     ..........0.....
20101f20:	1912 1008 8890 8998 1180 89a9 aa99 809a     ................
20101f30:	1088 8908 a989 180a 8828 8099 9890 8999     ........(.......
20101f40:	2120 3221 0002 acba 0211 3120 b801 bffc      !!2...... 1....
20101f50:	0012 2318 e902 8cff c882 128a fea1 21bf     ...#...........!
20101f60:	a8a9 109a ffd8 120b 110c 20a9 effb 0012     ........... ....
20101f70:	882a 1090 0ffb 9221 890a 2109 2afb 9132     *.....!....!.*2.
20101f80:	888a 3199 18a9 a243 9009 2088 8910 8241     ...1..C.... ..A.
20101f90:	1b12 0001 9122 2212 8a13 0809 0811 0083     ....".."........
20101fa0:	8010 219a 0013 88b1 0110 3099 1131 8908     ...!.......01...
20101fb0:	1888 3112 1332 8122 2110 2211 2243 0254     ...12."..!."C"T.
20101fc0:	9aaa aa88 ba89 baba 0998 9898 9998 b9ab     ................
20101fd0:	80b9 9909 9110 8a89 aa88 8998 8108 0a89     ................
20101fe0:	9088 9999 0080 9a90 8ab1 a19b 3280 0aa8     .............2..
20101ff0:	990a 9089 2399 ff92 88df 8898 4008 e555     .....#.......@U.
20102000:	a9c9 88a9 1002 7742 a986 a800 1011 7431     ......Bw......1t
20102010:	1234 8001 8230 1889 0209 0200 0522 0980     4...0......."...
20102020:	2010 0122 1201 8810 3088 8012 828a 8011     . "......0......
20102030:	1080 0012 818a 0080 2122 8a10 809a 2020     ........"!....  
20102040:	0888 1111 8880 8988 a988 8889 a088 8aa9     ................
20102050:	9900 8000 a880 9998 0018 0888 8988 9800     ................
20102060:	9809 8089 1099 8a98 888c 8801 2119 9983     .............!..
20102070:	00a8 8801 0339 9f95 9882 1018 3419 bf16     ....9........4..
20102080:	8000 8089 2209 ff76 118b 0999 0888 f875     ....."v.......u.
20102090:	09bf 8ab9 2890 c773 1aba 9a92 2413 1232     .....(s......$2.
201020a0:	aa21 0909 1442 0012 8208 88a0 0232 0080     !...B.......2...
201020b0:	0501 89a9 8810 0008 2181 0890 1110 1801     .........!......
201020c0:	1342 1102 0100 0888 2463 0122 b980 2280     B.......c$"...."
201020d0:	2342 1013 9b91 2888 0801 2009 0091 1109     B#.....(... ....
201020e0:	0821 0888 89a0 1188 8a81 8000 bcea 30ba     !..............0
201020f0:	8824 88b8 edeb 41bd 8018 10b0 aacc 9189     $......A........
20102100:	a80c 2108 02b9 c213 0189 4322 3109 a833     ...!......"C.13.
20102110:	2310 3324 1a11 2132 3466 4233 0a00 6320     .#$3..2!f43B.. c
20102120:	2112 3442 a990 1888 8189 1223 0a98 8910     .!B4......#.....
20102130:	8ab8 1111 8900 0818 9999 1108 8000 9918     ................
20102140:	aabd 9aaa aba9 dabc 908a a9a9 a89a a999     ................
20102150:	8880 9b80 99aa 018a 8888 a990 a999 9099     ................
20102160:	8a88 b900 9cb9 0880 abaa 980a aa89 9990     ................
20102170:	cefe b9ba 9232 ba81 ab90 b9a9 3764 1890     ....2.......d7..
20102180:	2576 0818 4564 4213 1454 8322 2121 2112     v%..dE.BT.".!!.!
20102190:	8121 8129 0810 1000 0021 a109 8808 3010     !.).....!......0
201021a0:	0002 98a8 8008 1000 1121 980a 0009 2321     ........!.....!#
201021b0:	1231 9980 0888 2222 8001 aa08 10aa 1030     1.....""......0.
201021c0:	2121 1118 1110 2801 2445 8889 1801 4010     !!.....(E$.....@
201021d0:	9c92 108b 2001 3420 ffff 09df 0800 fdaa     .....  4........
201021e0:	afff 09aa 98a9 feba 4777 1822 88a8 5108     ........wG"....Q
201021f0:	6777 1346 108a 4321 abcd 1318 8921 9980     wgF...!C....!...
20102200:	b900 88ba 8200 8100 1110 0988 8080 8880     ................
20102210:	9809 8020 0800 8808 0180 1810 8880 0808     .. .............
20102220:	8080 1100 8981 8080 9808 8021 8890 0089     ..........!.....
20102230:	8a90 1110 a881 0899 1198 2119 9010 aa9a     ...........!....
20102240:	008a 1211 0122 9811 8add 1101 0002 b120     ...."......... .
20102250:	99cb 2100 8a01 a140 99cd 1220 aa98 0328     ...!..@... ...(.
20102260:	89bd 188a 8889 34a9 89ab 0811 8aa8 22ba     .......4......."
20102270:	2218 2224 8180 8990 8211 1102 8108 0088     ."$"............
20102280:	abb8 00ac 8802 8008 9aa9 109a 0233 a002     ............3...
20102290:	3454 2031 4521 5651 1234 0011 6500 5476     T41 !EQV4....evT
201022a0:	8baa 089b 9bb8 8898 89ab 09aa feb0 ceff     ................
201022b0:	9a98 1008 ba80 9b9a 0088 1210 9802 9899     ................
201022c0:	a888 9a99 8099 0018 8356 a9a8 1088 5421     ........V.....!T
201022d0:	3575 9902 1088 4211 3777 a921 9008 3109     u5.....Bw7!....1
201022e0:	576a 9233 9b88 aa18 32df 0466 bbaa eb0b     jW3......2f.....
201022f0:	08cc 1555 ccb9 909c 8909 0521 aba9 9aa8     ..U.......!.....
20102300:	8018 8208 a09a 9898 9200 99a9 980a a081     ................
20102310:	b08a 8988 8229 9091 9088 99aa 8010 8310     ....)...........
20102320:	9108 a988 9108 0089 a898 a980 9809 0080     ................
20102330:	8008 aa98 9aaa 1802 8a98 8998 8aa9 8888     ................

20102340 <L2_weights>:
20102340:	1aa2 0123 9a90 29c0 6b50 20a1 8109 8c93     ..#....)Pk. ....
20102350:	2301 320a 0008 0281 4a9a 8911 c101 9fb1     .#.2.....J......
20102360:	9c90 0089 9329 0288 9bcc ab0b 9319 9a41     ....).........A.
20102370:	091a 8209 a0b9 2b8d 44a0 2821 8881 03fb     .......+.D!(....
20102380:	9019 0380 1519 209b a081 0014 a09a b801     ....... ........
20102390:	1249 b11a 2120 88cc f202 89a1 399e 98c1     I... !.......9..
201023a0:	28a2 38b0 b883 a288 a08b 0839 01da 1908     .(.8......9.....
201023b0:	900d a501 0008 c1ab c4e9 1b88 21d0 11b8     .............!..
201023c0:	3fa1 899a 1911 08b0 9129 8fab 829b aa38     .?......).....8.
201023d0:	2194 0300 1209 1112 30a8 1c03 81b1 0c20     .!.......0.... .
201023e0:	814c 1593 4228 8b1c a212 b120 c995 0412     L...(B.... .....
201023f0:	1bb0 89a3 b3d9 0390 0098 c812 1d0c b812     ................
20102400:	0282 0088 a931 c133 b8b8 2018 3c11 a120     ....1.3.... .< .
20102410:	e9bd aa99 1ea9 0898 c192 0b9d 9503 859a     ................
20102420:	1348 004a 1139 9142 100b ad9a 2313 0391     H.J.9.B......#..
20102430:	1ba1 1201 93bd aa3c 03c1 2893 d024 0018     ......<....($...
20102440:	3139 9aaa 8820 20b8 0010 b921 c289 b921     91.. .. ..!...!.
20102450:	23f8 89a0 cca2 3b02 9196 8001 1f2f c8b8     .#.....;..../...
20102460:	841a a092 19a8 d83c 1103 14a6 28b1 88a8     ......<......(..
20102470:	19e1 9199 c920 92a8 8a31 b390 8ba0 921f     .... ...1.......
20102480:	eba1 0819 8b20 850a a892 3ab2 2f0b 2038     .... ......:./8 
20102490:	ba00 a0a9 8959 2180 aa31 b01c 1aa8 949a     ....Y..!1.......
201024a0:	8a02 98b0 292a 0112 0290 2d81 8080 8012     ....*).....-....
201024b0:	11ca 2898 b310 039b 9221 03cb e101 a98f     ...(....!.......
201024c0:	2819 989a 001b 280a 9621 a893 a9d2 0941     .(.....(!.....A.
201024d0:	082c 3892 1020 28a1 4888 010b 888d 0889     ,..8 ..(.H......
201024e0:	1da0 383f 8993 8992 ca99 1eb9 899a 8810     ..?8............
201024f0:	908d 8a00 0000 0019 8288 0a58 2891 2081     ..........X..(. 
20102500:	0001 9213 948a 1282 2083 c20b 2540 9b09     ......... ..@%..
20102510:	04aa 1212 9043 1010 0833 12b2 9210 a0bb     ....C...3.......
20102520:	3008 8119 9890 82b4 8890 b029 0081 ccb2     .0........).....
20102530:	0719 29c2 8807 2801 a818 5b88 8982 98b2     ...)...(...[....
20102540:	42b8 08b9 8191 199a 918b 981f c120 9dc8     .B.......... ...
20102550:	8c31 0b32 6829 8a81 43c2 0bc0 8339 1100     1.2.)h...C..9...
20102560:	f092 082a 893b 4102 98a8 c032 0989 8039     ..*.;..A..2...9.
20102570:	a140 0088 49b0 baac 0a02 1109 45c1 9320     @....I.......E .
20102580:	8848 b11a 9018 8809 f0c3 1d90 9003 a81a     H...............
20102590:	928b f998 9211 2201 b214 9218 3019 a32c     .......".....0,.
201025a0:	b030 8b10 81c8 22a8 4902 b988 a901 21a1     0......".I.....!
201025b0:	9070 0090 7c01 2f01 9908 838b 230b 8cb1     p....|./.....#..
201025c0:	4990 b9ab a828 8048 20a9 0200 a028 802f     .I..(.H.. ..(./.
201025d0:	218c a302 9293 2929 c1a2 03b1 9a90 129a     .!....))........
201025e0:	a000 0b94 9800 0229 8a91 b330 392c 1208     ......)...0.,9..
201025f0:	f85a 90ca 4d80 1f98 9983 042f 160b 0192     Z....M..../.....
20102600:	2913 82cd 1189 0018 a21d 0a09 93b3 3123     .)............#1
20102610:	4021 8a88 13c8 80b0 1991 1196 a2b9 890b     !@..............
20102620:	9089 080a da28 8121 0cba 9848 1d20 911c     ....(.!...H. ...
20102630:	028a a032 81a4 c328 a918 0330 1c89 1398     ..2...(...0.....
20102640:	8278 9680 3400 0b1c 8290 1182 da97 a193     x....4..........
20102650:	0ba2 8c81 0190 84c8 1a80 cb82 0a2b 0831     ............+.1.
20102660:	a08f 000a 8881 9995 2b2a b882 1e8a fc9a     ........*+......
20102670:	0380 0850 c01a 3008 8818 8900 1822 a281     ..P....0...."...
20102680:	a951 80a1 8538 0df2 298a 8108 c816 dc28     Q...8....)....(.
20102690:	2188 0102 0083 898b 0a0a b5b8 8901 8bc1     .!..............
201026a0:	3189 2ad4 2ba0 a919 c490 2210 84a9 a8b2     .1.*.+....."....
201026b0:	8208 a882 1190 19f1 088a 1080 2301 081b     .............#..
201026c0:	a988 b005 bb00 1281 19c3 21c8 0949 b98f     ...........!I...
201026d0:	a188 241a 0b13 2025 b908 121b 8980 c1a1     ...$..% ........
201026e0:	01c8 1a29 aab8 2800 3100 a13b 283b 228c     ..)....(.1;.;(."
201026f0:	d049 19cc 8a29 8b38 8238 318e 9388 8228     I...).8.8..1..(.
20102700:	1a90 8a88 5cf9 cc82 2388 0088 810b 18b0     .....\...#......
20102710:	9138 8898 8009 8c00 85ab 1d18 8902 3360     8.............`3
20102720:	00ab 2001 0081 b122 1282 1108 2009 2128     ... .."...... (!
20102730:	3989 9090 b39a aa9b 4a9f 1b22 1092 2009     .9.......J".... 
20102740:	2ca8 8ea8 1888 2130 181b 80f8 211c 3383     .,....0!.....!.3
20102750:	8091 28ac 80ac ac84 3092 13a9 01a0 0220     ...(.....0.... .
20102760:	201a 391e 8120 292a 128e 914a 9112 1229     . .9 .*)..J...).
20102770:	0890 8d22 b2e9 90a1 0008 c110 9f18 2120     .."........... !
20102780:	8d2b 9183 1618 2129 8318 c898 8295 0382     +.....)!........
20102790:	3901 0232 10a8 9101 22b0 8112 8a91 9929     .92......"....).
201027a0:	2182 8028 981a 1800 8b1c 1aac 2108 599b     .!(..........!.Y
201027b0:	2890 038a 13d8 1121 3c01 0a80 9822 4918     .(....!..<.."..I
201027c0:	19a2 008e a834 2010 3d2d 8c99 8a9a 3129     ....4.. -=....)1
201027d0:	0a90 8908 a8a8 f888 2200 1102 8e83 3098     .........".....0
201027e0:	c02e 00a3 84b9 5f29 0994 0130 b013 53b9     ......)_..0....S
201027f0:	102a 88c1 c031 190a 9a4c a818 0a19 0b98     *...1...L.......
20102800:	1498 ab51 b09b 1891 4c18 20b1 8839 89aa     ..Q......L. 9...
20102810:	8389 1c88 8180 0919 0d21 8208 b269 89a8     ........!...i...
20102820:	1c29 1c1a 1888 8913 d199 ac1f 8041 031e     )...........A...
20102830:	1199 1ca0 91c8 3a20 90a9 3fa8 8812 aa81     ...... :...?....
20102840:	0880 a014 9903 9901 3887 052a 0948 88a0     .........8*.H...
20102850:	a180 101a 9e7d 8228 83c1 98b9 ab31 1801     ....}.(.....1...
20102860:	98cd 1981 1c90 1aa6 4818 a011 2b8d bd01     .........H...+..
20102870:	8041 8821 015a 1289 008b 8090 a893 ab28     A.!.Z.........(.
20102880:	a0a9 0138 103a 3a8b b20a 8910 1c10 bba0     ..8.:..:........
20102890:	8e60 42a2 78c8 8828 0220 d9a0 a600 1208     `..B.x(. .......
201028a0:	9193 282d 940e 79a8 0b2c 0100 0909 888b     ..-(...y,.......
201028b0:	b2e0 4898 ab59 3c13 28b4 b000 8aa9 9992     ...HY..<.(......
201028c0:	0898 89da 4938 1128 13b1 8204 00e8 b102     ....8I(.........
201028d0:	a181 1b13 8010 fbeb 0003 01a0 88a1 a8f9     ................
201028e0:	2390 3881 8cc2 0cd2 2810 1008 821b 9b90     .#.8.....(......
201028f0:	81a0 00a8 a0aa 9811 3a08 3e00 1011 8000     .........:.>....
20102900:	ab38 0081 a280 00f0 bb10 9888 9012 9b88     8...............
20102910:	3051 8188 4089 2914 0ba3 0a20 2310 99c1     Q0...@.).. ..#..
20102920:	0182 0834 99b0 8899 a181 125c 8648 aa91     ..4.......\.H...
20102930:	a99a 022a 9928 0330 b400 0801 b820 ed0a     ..*.(.0..... ...
20102940:	10d1 8b98 3ba9 9803 1310 2302 908b 11c8     .....;.....#....
20102950:	8222 1d18 0900 39e1 0e89 1aa9 0100 0120     "......9...... .
20102960:	8a39 989a 024a 8b82 2821 0bd1 9ab2 b93a     9...J...!(....:.
20102970:	3493 0141 0419 0a90 3a38 90a1 1988 9a20     .4A.....8:.... .
20102980:	2d00 2a9d b192 b92b 2919 80e8 99a8 229b     .-.*..+..)....."
20102990:	19ba 1081 0389 1b21 0c82 9810 1008 38a3     ......!........8
201029a0:	8bd2 1ab2 8098 c819 80b8 2128 0a09 1800     ..........(!....
201029b0:	0620 00c1 4291 109a b08e 018a 92b2 01b1      ....B..........
201029c0:	8212 80c0 188a 1901 1018 0423 b891 0080     ..........#.....
201029d0:	9251 2c38 3804 ba98 10a2 11b0 a38a 0908     Q.8,.8..........
201029e0:	cba0 8aa1 18a9 2008 3122 22b1 0f1a 30a0     ....... "1."...0
201029f0:	9b13 8009 114e a2a0 399a 83c1 aba1 0819     ....N....9......
20102a00:	3330 c8d0 8060 ef31 898a 2889 8091 9328     03..`.1....(..(.
20102a10:	1858 a821 8081 0029 8418 0999 e030 8000     X.!...).....0...
20102a20:	1581 2b28 f929 ba81 2f19 0921 9938 102b     ..(+)..../!.8.+.
20102a30:	1a11 2118 028a a959 0a18 99b9 9920 8992     ...!..Y..... ...
20102a40:	9121 3b92 a8b9 004d 0980 0090 1a10 05a9     !..;..M.........
20102a50:	af2b 02db 000c 8009 089a c209 0a80 3022     +............."0
20102a60:	bda0 188a 1a04 a0a8 90b0 1091 018b 9c04     ................
20102a70:	088d 4820 a882 8892 b029 8818 11a1 98f0     .. H....).......
20102a80:	9899 c9a7 9bc8 a190 0015 94a3 3a5a 09e2     ............Z:..
20102a90:	1199 148a 0cf1 0032 8a80 1011 13b0 8390     ......2.........
20102aa0:	8839 0aa9 12a3 ca11 a095 3c90 09c1 8292     9..........<....
20102ab0:	d998 8990 9a41 8299 a88c 821d 1982 002c     ....A.........,.
20102ac0:	9990 110e f022 12ba 8c98 2eb2 0088 ac48     ....".........H.
20102ad0:	328a 81ac 8380 8322 a920 8881 200a a2f0     .2....". .... ..
20102ae0:	d002 2138 89ba 9b8e 1b2b 18a8 ea30 8aa8     ..8!....+...0...
20102af0:	a8c3 bc6c a980 9420 3928 b100 081e 0819     ..l... .(9......
20102b00:	1898 a818 1412 1000 80b8 da80 a38c 3119     ...............1
20102b10:	b228 a845 da50 1008 ab49 f08b a59a 9888     (.E.P...I.......
20102b20:	8a18 b02f 8148 5208 a29c 2da1 a181 a038     ../.H..R...-..8.
20102b30:	8aba 3288 0b99 8a18 c394 0320 ca09 80b0     ...2...... .....

20102b40 <L3_weights>:
20102b40:	921c 2022 2100 9eaa a411 b822 00f9 9880     .." .!....".....
20102b50:	b008 0b3d b831 9389 988c 8102 002c 901c     ..=.1.......,...
20102b60:	1925 b881 80ad a898 b001 12c8 b138 ba1b     %...........8...
20102b70:	190c aa2a a003 3948 9a22 18b9 2fa1 0ada     ..*...H9"..../..
20102b80:	1b83 33a8 8902 22a1 8908 a2a0 2a9b 141f     ...3...".....*..
20102b90:	8030 88c8 2190 0092 2802 8a09 a1d3 a3ac     0....!...(......
20102ba0:	0881 218a 0908 1a30 4a1a 1190 1901 a813     ...!..0..J......
20102bb0:	aa92 1100 0988 2286 330b 1300 908a a008     .......".3......
20102bc0:	3809 2220 0212 8881 9cab 00ad 18d0 a9e1     .8 "............
20102bd0:	2b19 a9b1 9213 8138 1402 0913 0139 988a     .+....8.....9...
20102be0:	1809 0258 1049 a9b9 8901 14a9 a128 0910     ..X.I.......(...
20102bf0:	1089 9000 1909 1132 1b21 9098 0060 0898     ......2.!...`...
20102c00:	89a9 82ca a01a 1008 0aba 0a0b aa82 ab80     ................
20102c10:	8a01 1082 108a 0a38 12a2 2930 8a43 5822     ......8...0)C."X
20102c20:	2919 ab0f 1ba3 d803 b12a 41a0 c808 9133     .)......*..A..3.
20102c30:	9bf2 1a99 49a1 8188 421c 3881 0283 a190     .....I...B.8....
20102c40:	abbe 2099 1803 281c 8bba 1c9a 0980 b1f2     ... ...(........
20102c50:	dc90 80b0 0229 3331 92b9 1802 a02e 0b4a     ....).13......J.
20102c60:	81b2 9902 52a0 3290 9289 ac0a 0000 3208     .....R.2.......2
20102c70:	a023 102a 1993 0399 018b 184d bac2 2318     #.*.......M....#
20102c80:	2988 809e 2923 6182 a80b 4228 b980 88f2     .)..#).a..(B....
20102c90:	29d0 81b0 911a 8219 110a 5199 993d 8d88     .).........Q=...
20102ca0:	c10e 09ac 1c00 2200 9ada 0809 9c09 1b32     ......."......2.
20102cb0:	0088 9302 021b 010b a208 2001 0aa8 1200     ........... ....
20102cc0:	98a9 caa9 0911 8829 899b 898a a810 0aa2     ......).........
20102cd0:	9cb9 20a8 40d8 8103 10ca 1a18 2993 2300     ... .@.......).#
20102ce0:	b289 bca2 8306 29a1 0a21 31a9 01b1 8399     .......)!..1....
20102cf0:	19a9 889a b4a0 0286 a088 8a84 98ea 888a     ................
20102d00:	20d0 12c1 8201 4ba9 3188 ae8c ea91 220d     . .....K.1....."
20102d10:	3910 1211 9018 f80d 8ba1 823a 0199 a2f9     .9........:.....
20102d20:	2892 a8ac 001c 0280 c1c3 0198 2003 0c1a     .(........... ..
20102d30:	982a c328 a190 2849 8088 9b80 fe01 310a     *.(...I(.......1
20102d40:	992d 1a92 d8ab 1c1b 9a11 5928 2d91 a912     -.........(Y.-..
20102d50:	110d 9a99 b20a a083 8099 d081 4100 0282     .............A..
20102d60:	aa46 a040 2998 c312 b100 0204 930a 8a38     F.@..)........8.
20102d70:	a390 a999 19b1 a0ab 3a28 30a9 1020 b898     ........(:.0 ...
20102d80:	911d 11e1 8880 b939 11a9 db01 2191 8028     ......9......!(.
20102d90:	901b 0c02 9a1d 1292 8120 b490 89b9 0b24     ........ .....$.
20102da0:	911a 2aa9 1890 29bc 81e1 1925 b139 831d     ...*...)..%.9...
20102db0:	a11a c020 ca10 f03d 8c11 030d 1010 a0cd     .. ...=.........
20102dc0:	9a1e 0a32 1889 da8c 9508 4804 922d 2909     ..2........H-..)
20102dd0:	9819 0999 281a 0839 2118 938a 109a 831d     .....(9..!......
20102de0:	0312 c0b2 0822 01aa d291 23a2 b10d 3129     ...."......#..)1
20102df0:	899b 0009 9ac4 19a9 0c22 028b 2a21 98d1     ........"...!*..
20102e00:	1928 8142 a2be 8380 82a1 8189 9088 db98     (.B.............
20102e10:	038a 8888 910b 8a29 8013 a111 0a08 2c9b     ......)........,
20102e20:	2912 ce08 22c8 9b29 a129 8300 894b 11c0     .)...").)...K...
20102e30:	398b 8a11 a988 0e21 8a2d 1aa0 1002 9090     .9....!.-.......
20102e40:	a00b bfa1 12a1 891a 0080 a880 1b0a 8033     ..............3.
20102e50:	8909 1a1d 0a81 1b29 000a 2041 ab31 1382     ......)...A 1...
20102e60:	b211 e900 0290 ac21 88a3 0420 a910 802c     ......!... ...,.
20102e70:	1c18 a822 8918 da4c aa30 019b a918 aa9b     .."...L.0.......
20102e80:	21ab af1b 4abf 9321 990a d10b b189 8000     .!...J!.........
20102e90:	80ce 8f09 29a5 4815 0808 94a9 3883 1991     .....).H.....8..
20102ea0:	c6b0 8820 08be 90b2 00a9 8cb8 88b2 19b0     .. .............
20102eb0:	9304 b338 a9bb 89b8 0a80 888c 098e 8908     ..8.............
20102ec0:	028b 9ba2 83a8 3f09 00b2 ab1d 1b31 9481     .......?....1...
20102ed0:	01a8 8e19 c99a aa91 b9aa 9280 28a4 9084     .............(..
20102ee0:	a088 0d49 88ca a938 a1a3 c918 0848 9c31     ..I...8.....H.1.
20102ef0:	9431 c8ab 0d98 b8c8 0882 00b1 0a02 9201     1...............
20102f00:	11b0 800d 1a81 9803 808a cd81 a290 8a31     ..............1.
20102f10:	a2ae 1b90 2d10 59b3 2019 818c 0990 8980     .....-.Y. ......
20102f20:	aa29 8892 8933 1821 5091 1831 3028 8322     )...3.!..P1.(0".
20102f30:	da98 88a8 8a09 8398 904a 9411 9008 bc09     ........J.......
20102f40:	0221 131a 18aa 8092 9010 9908 9aa1 39d4     !..............9
20102f50:	a9c3 c3a8 9080 3180 283a 0310 1c1b a8b1     .......1:(......
20102f60:	a1aa 83a9 3828 2382 9888 3a1c 0911 3108     ....(8.#...:...1
20102f70:	2c9a 221a 1b9e b408 98b9 010b 02b2 9081     .,."............
20102f80:	821c c92c 10aa 18a4 9190 2313 c1a1 2908     ..,........#...)
20102f90:	9089 b0a9 1038 0080 2938 12aa 8a10 9b81     ....8...8)......
20102fa0:	98db 1011 8199 a881 0181 ed23 1098 805b     ..........#...[.
20102fb0:	805c aa29 ec18 a991 1093 8001 8119 1081     \.).............
20102fc0:	1c08 3a19 80a3 9981 aa38 0139 2009 9311     ...:....8.9.. ..
20102fd0:	080b 2a0b 0092 81b1 008b 20e8 3323 a293     ...*....... #3..
20102fe0:	9331 1b80 4a11 dd89 138a 9004 008a 2b11     1....J.........+
20102ff0:	c982 0b21 2d83 1999 8a3a 13ac cb22 9819     ..!..-..:..."...
20103000:	90ba 129d 2100 9380 91cd ad81 12d9 308a     .....!.........0
20103010:	2110 a192 1221 80d2 30a5 0202 03dc 8208     .!..!....0......
20103020:	8b10 1901 0b9b a210 0131 0102 1a19 8918     ........1.......
20103030:	1bce 0900 088a 918e 033d 13c9 a308 884b     ........=.....K.
20103040:	af92 0829 8014 0b90 1128 b801 800b 910a     ..).....(.......
20103050:	1002 3a1d 0000 02ea 89cc bbba 9222 b218     ...:........"...
20103060:	8890 2031 808a 28b9 1803 ca5a 1a09 83c0     ..1 ...(..Z.....
20103070:	9119 a028 fb02 88f0 1b90 188f 25a0 b280     ..(..........%..
20103080:	0890 6298 a11b 89b9 108b 9820 12aa 19ba     ...b...... .....
20103090:	0840 4021 a948 a3c1 1102 1a28 2b08 13a8     @.!@H.....(..+..
201030a0:	9201 0091 8098 4400 1802 1d2a d289 3180     .......D..*....1
201030b0:	ab00 d21a 1000 9898 91a1 d90b 34c9 aaa1     .............4..
201030c0:	3992 0289 0929 8195 a810 92fa 9480 9aca     .9..)...........
201030d0:	3098 2011 1102 181f 9192 a8a1 9a19 1fa8     .0. ............
201030e0:	81b0 1088 4922 2bab ba48 8a9c 1009 2a09     ...."I.+H......*
201030f0:	3e80 1029 1eb9 f81a 0ca3 02ab 1081 c1d9     .>).............
20103100:	0182 0902 802c a998 2898 d001 219b 991a     ....,....(...!..
20103110:	a329 0811 8100 3b13 1018 808a b18d 805b     )......;......[.
20103120:	1b10 2080 00aa 192a 589a 5c10 8b89 1c1a     ... ..*..X.\....
20103130:	381c 2a90 b92e c922 99a9 b119 2cf4 20c0     .8.*.."......,. 
20103140:	9a91 90b9 80a1 843a 0cb0 09ae a901 04a8     ......:.........
20103150:	8904 1292 32a1 c94f 90b2 1811 a2ac 3118     .....2O........1
20103160:	39c8 2283 8115 4298 8980 a938 8cb0 84b9     .9."...B..8.....
20103170:	880a 9912 0913 9200 2080 9820 02aa b18b     .........  .....
20103180:	0c21 99c0 949b 9229 1191 3810 1132 cab2     !.....)....82...
20103190:	840c 00a0 9309 8910 bb8e ac08 9859 1109     ............Y...
201031a0:	b048 0c13 c98b b82c 0192 01a1 29a0 0a29     H.....,......)).
201031b0:	111c 108c a90b 9923 9933 8824 3002 0392     ......#.3.$..0..
201031c0:	1881 24a9 a3ab 1112 99c8 8481 aa80 0c18     ...$............
201031d0:	412b 0981 8020 ca3c 8322 0800 8b33 0cb2     +A.. .<."...3...
201031e0:	0a8a a822 80c3 5019 9998 198b 1821 b8f2     .."....P....!...
201031f0:	0aaa 0099 03b2 24a3 a8f1 1aa1 0db1 0802     .......$........
20103200:	90b2 1980 1813 8ac1 3229 f993 11ca 000a     ........)2......
20103210:	a393 1b10 3913 33b3 1118 09a0 9a99 a810     .....9.3........
20103220:	080a 2900 80d2 4140 9981 c94b 8a49 84aa     ...)..@A..K.I...
20103230:	b230 b0c8 8a09 80c0 8988 1098 23c1 c4c1     0............#..
20103240:	19bc 3100 1a13 28c1 2c00 901b 1bf1 a2c0     ...1...(.,......
20103250:	a819 b100 1220 1402 90ab 82a0 992a a229     .... .......*.).
20103260:	88bb 01b0 bc31 2910 10bd 9be0 89a0 a112     ....1..)........
20103270:	9ab0 1a80 4082 6114 1299 8880 a801 1138     .....@.a......8.
20103280:	9210 aa22 089c 8a00 cd29 411a 9c94 09f1     ..".....)..A....
20103290:	09a0 c109 a302 848d 0890 b991 3d1c 8922     .............=".
201032a0:	0802 0a38 1810 08e0 a100 812b 1910 8002     ..8.......+.....
201032b0:	8120 205b 0903 10ca ad19 cb8b 2281 9008      .[ ........."..
201032c0:	c013 993e 3c48 82ad 8080 1181 002d 181c     ..>.H<......-...
201032d0:	0a31 8320 0cc0 0088 0c82 28bf 1382 b9b9     1. ........(....
201032e0:	63c1 048c 1c49 1ac3 8959 c008 a9a0 b8c0     .c..I...Y.......
201032f0:	998a 2a22 1928 0b48 818e 9309 b83b bb92     .."*(.H.....;...
20103300:	c28e 838a 3d31 0310 1baa 2b0d 1b92 0921     ....1=.....+..!.
20103310:	c0bb ba99 1384 1092 981e 8108 09c2 a481     ................
20103320:	299c 2c20 a182 0203 1ab2 91ba 01c8 c088     .) ,............
20103330:	000c c1aa 9102 1400 8181 b092 141c a12c     ..............,.

20103340 <L4_weights>:
20103340:	302b 09ab 9c39 09a8 9a18 98d8 18d0 0ba0     +0..9...........
20103350:	aa1a a99b 4bb3 b928 209b 11aa b8ba 8ba8     .....K(.. ......
20103360:	f008 8209 2a00 b29b a2c0 81bb 1a8b 0b8b     .....*..........
20103370:	83ba b491 9422 9c89 9d2b da98 3880 9ba2     ...."...+....8..
20103380:	819c b4c8 b1b3 0888 8221 b2b2 929a a289     ........!.......
20103390:	9a89 ab11 0989 c998 10b9 b922 0280 91a8     ..........".....
201033a0:	a189 3801 baba baa9 3900 9a19 aa23 10b8     ...8.....9..#...
201033b0:	a223 9ab2 b92c 8b09 a91a aa31 9919 a189     #...,.....1.....
201033c0:	ca99 a088 1881 9102 aaa9 0108 a129 9023     ............).#.
201033d0:	8809 202a 8ca8 c992 8ac0 89a9 b92b 8828     ..* ........+.(.
201033e0:	20b9 1a11 c2bb 18ca aa8b 8900 0ba2 90b2     . ..............
201033f0:	1a08 890b a80a 2119 882a b1aa 8d12 3111     .......!*......1
20103400:	8bcc 001b b139 a0b9 909b 10c3 2a98 a38b     ....9........*..
20103410:	b818 b000 bac9 a282 a8b3 33ba 99c3 8b98     ...........3....
20103420:	a113 90b1 8ab8 8928 32c2 b3ba a0b9 0a9a     ......(..2......
20103430:	12a1 2b09 2098 09aa 0b9b 98a8 b49b 2a99     ...+. .........*
20103440:	8a8b 9c18 81ca 990a 8902 3b2a 31b0 1aa2     ..........*;.1..
20103450:	299c 9a82 8ab1 0108 82b1 aa02 0a90 ca30     .)............0.
20103460:	8822 bb91 2902 4021 ac9b 8a1b b919 2a2b     "....)!@......+*
20103470:	8bc0 88c2 9a1a 98ab 0298 2a88 9a0b 030a     ...........*....

20103480 <input_data_0>:
20103480:	eaea eaea eaea eaea eaea eaea eaea eaea     ................
20103490:	eaea eaea eaea eaea eaea eaea eaea eaea     ................
201034a0:	eaea eaea eaea eaea eaea eaea eaea eaea     ................
201034b0:	eaea eaea 400b 061e eaf2 eaea eaea eaea     .....@..........
201034c0:	eaea eaea 7c1c 737f fd42 eaea eaea eaea     .....|.sB.......
201034d0:	eaea eaea 12f4 613a 467c eaea eaea eaea     ......:a|F......
201034e0:	eaea eaea eaea f0ea 642f eaf5 eaea eaea     ......../d......
201034f0:	eaea eaea eaea ebea 682c eaf5 eaea eaea     ........,h......
20103500:	eaea eaea eaea f0ea 6a44 eaf4 eaea eaea     ........Dj......
20103510:	eaea eaea eaea f3ea 634d eaee eaea eaea     ........Mc......
20103520:	eaea eaea eaea f3ea 604d eaea eaea eaea     ........M`......
20103530:	eaea eaea eaea f3ea 604d eaea eaea eaea     ........M`......
20103540:	eaea eaea eaea f3ea 604d eaea eaea eaea     ........M`......
20103550:	eaea eaea eaea efea 613e eaec eaea eaea     ........>a......
20103560:	eaea eaea eaea eaea 4712 eaf2 eaea eaea     .........G......
20103570:	eaea eaea eaea eaea f0ec eaeb eaea eaea     ................

20103580 <input_data_1>:
20103580:	ecec ecec ecec ecec ecec ecec ecec ecec     ................
20103590:	ecec ecec ecec ecec ecec ecec ecec ecec     ................
201035a0:	ecec ecec ecec ecec 45fc ec06 ecec ecec     .........E......
201035b0:	ecec ecec ecec ecec 6a05 ee2a ecec ecec     .........j*.....
201035c0:	ecec ecec ecec ecec 771c ef32 ecec ecec     .........w2.....
201035d0:	ecec ecec ecec f2ec 7d40 ec13 ecec ecec     ........@}......
201035e0:	ecec ecec ecec 03ec 7963 ec0d ecec ecec     ........cy......
201035f0:	ecec ecec ecec 21ed 6478 ecf9 ecec ecec     .......!xd......
20103600:	ecec ecec ecec 47f0 417e ecef ecec ecec     .......G~A......
20103610:	ecec ecec ecec 6a06 0d70 ecec ecec ecec     .......jp.......
20103620:	ecec ecec ecec 7d2f fd64 ecec ecec ecec     ....../}d.......
20103630:	ecec ecec ecec 7f36 ed44 ecec ecec ecec     ......6.D.......
20103640:	ecec ecec ecec 7735 ec2b ecec ecec ecec     ......5w+.......
20103650:	ecec ecec ecec 3b10 ecfd ecec ecec ecec     .......;........
20103660:	ecec ecec ecec ecec ecec ecec ecec ecec     ................
20103670:	ecec ecec ecec ecec ecec ecec ecec ecec     ................

20103680 <input_data_2>:
20103680:	ebeb ebeb ebeb ebeb ebeb ebeb ebeb ebeb     ................
20103690:	ebeb ebeb ebeb ebeb ebeb ebeb ebeb ebeb     ................
201036a0:	ebeb ebeb ebeb ebeb ebeb ebeb ebeb ebeb     ................
201036b0:	ebeb ebeb ebeb f0eb 310b 0030 ebec ebeb     .........10.....
201036c0:	ebeb ebeb eceb 29fb 3e50 4638 eb00 ebeb     .......)P>8F....
201036d0:	ebeb ebeb 0aee 3a4c ee03 46f2 eb18 ebeb     ......L:...F....
201036e0:	ebeb edeb 5e1c f11d ebeb 6301 ec2f ebeb     .....^.....c/...
201036f0:	ebeb 07eb 1d57 ebed f7ec 5a41 eb07 ebeb     ....W.....AZ....
20103700:	ebeb 37ed f243 eceb 4dfc 1e76 ebed ebeb     ...7C....Mv.....
20103710:	ebeb 44ef f421 1d00 7f45 f448 ebeb ebeb     ...D!...E.H.....
20103720:	ebeb 37ee 545b 264b 6f33 eb08 ebeb ebeb     ...7[TK&3o......
20103730:	ebeb f5eb 0e10 f3f8 413e ebee ebeb ebeb     ........>A......
20103740:	ebeb ebeb ebeb fdeb 1254 ebeb ebeb ebeb     ........T.......
20103750:	ebeb ebeb ebeb 0eeb f344 ebeb ebeb ebeb     ........D.......
20103760:	ebeb ebeb ebeb 08eb ef27 ebeb ebeb ebeb     ........'.......
20103770:	ebeb ebeb ebeb eceb ebee ebeb ebeb ebeb     ................

20103780 <input_data_3>:
20103780:	ecec ecec ecec ecec ecec ecec ecec ecec     ................
20103790:	ecec ecec ecec ecec ecec ecec ecec ecec     ................
201037a0:	ecec ecec f3ec ecf1 ecec ecec ecec ecec     ................
201037b0:	ecec faec 4e29 ee26 ecec ecec efef ecec     ....)N&.........
201037c0:	ecec 43f5 3f6d ec06 ecec f8ec 3230 ecf8     ...Cm?......02..
201037d0:	ecec 6c02 f241 ecec ecec 3bf4 5972 ec04     ...lA......;rY..
201037e0:	ecec 720a ec1b ecec ecec 7a24 f241 ecec     ...r......$zA...
201037f0:	ecec 60fe f337 ecec f4ec 7259 ec10 ecec     ...`7.....Yr....
20103800:	ecec 2bef 2e64 f1fb 06ee 5473 ecf7 ecec     ...+d.....sT....
20103810:	ecec f2ec 732d 4e64 4232 357f ecef ecec     ....-sdN2B.5....
20103820:	ecec ecec 1cf3 5b4c 7f68 1c7a ecee ecec     ......L[h.z.....
20103830:	ecec ecec edec f2f0 47ff 0872 ecec ecec     .........Gr.....
20103840:	ecec ecec ecec ecec 13ec 2770 ecf3 ecec     ..........p'....
20103850:	ecec ecec ecec ecec f5ec 5946 ec13 ecec     ..........FY....
20103860:	ecec ecec ecec ecec ecec faee ecee ecec     ................
20103870:	ecec ecec ecec ecec ecec ecec ecec ecec     ................
20103880:	6e49 6566 6572 636e 2065 666f 5320 6d61     Inference of Sam
20103890:	6c70 2065 6425 5009 6572 6964 7463 6f69     ple %d.Predictio
201038a0:	3a6e 2520 646c 4c09 6261 6c65 203a 6425     n: %ld.Label: %d
201038b0:	0a09 0000 2020 2020 2020 2020 2020 2020     ....            
201038c0:	2020 2020 2020 4953 4946 4556 202c 4e49           SIFIVE, IN
201038d0:	2e43 0000 2020 2020 2020 2020 2020 3520     C...           5
201038e0:	3535 3535 3535 3535 3535 3535 3535 3535     5555555555555555
201038f0:	3535 3535 3535 3535 0000 0000 2020 2020     55555555....    
20103900:	2020 2020 2020 3535 3535 2020 2020 2020           5555      
20103910:	2020 2020 2020 2020 2020 2020 3520 3535                  555
20103920:	0035 0000 2020 2020 2020 2020 3520 3535     5...         555
20103930:	2035 2020 2020 2020 2020 2020 2020 2020     5               
20103940:	2020 2020 2020 3535 3535 0000 2020 2020           5555..    
20103950:	2020 2020 3535 3535 2020 2020 2020 2020         5555        
20103960:	2020 2020 2020 2020 2020 2020 2020 3520                    5
20103970:	3535 0035 2020 2020 2020 3520 3535 2035     555.       5555 
20103980:	2020 2020 2020 3535 3535 3535 3535 3535           5555555555
20103990:	3535 3535 3535 3535 3535 3535 0000 0000     555555555555....
201039a0:	2020 2020 2020 3535 3535 2020 2020 2020           5555      
201039b0:	3520 3535 3535 3535 3535 3535 3535 3535      555555555555555
201039c0:	3535 3535 3535 3535 0035 0000 2020 2020     555555555...    
201039d0:	3520 3535 2035 2020 2020 2020 2020 2020      5555           
201039e0:	2020 2020 2020 2020 2020 2020 2020 2020                     
201039f0:	2020 3535 3535 0000 2020 2020 3535 3535       5555..    5555
20103a00:	2020 2020 2020 2020 2020 2020 2020 2020                     
20103a10:	2020 2020 2020 2020 2020 2020 2020 3520                    5
20103a20:	3535 0035 2020 3520 3535 2035 2020 2020     555.   5555     
20103a30:	2020 2020 2020 2020 2020 2020 2020 2020                     
20103a40:	2020 2020 2020 2020 2020 2020 3535 3535                 5555
20103a50:	0000 0000 2020 3535 3535 3535 3535 3535     ....  5555555555
20103a60:	3535 3535 3535 3535 3535 3535 3535 3535     5555555555555555
20103a70:	3535 2020 2020 2020 2020 2020 3535 3535     55          5555
20103a80:	0035 0000 2020 3520 3535 3535 2020 2020     5...   55555    
20103a90:	2020 2020 2020 3520 3535 3535 3535 3535            555555555
20103aa0:	2020 2020 2020 2020 2020 3520 3535 3535                55555
20103ab0:	0000 0000 2020 2020 3520 3535 3535 2020     ....     55555  
20103ac0:	2020 2020 2020 2020 3520 3535 3535 2020              55555  
20103ad0:	2020 2020 2020 2020 3520 3535 3535 0000              55555..
20103ae0:	2020 2020 2020 3520 3535 3535 2020 2020            55555    
20103af0:	2020 2020 2020 3520 2020 2020 2020 2020            5        
20103b00:	2020 3520 3535 3535 0000 0000 2020 2020        55555....    
20103b10:	2020 2020 3520 3535 3535 2020 2020 2020          55555      
20103b20:	2020 2020 2020 2020 2020 2020 3520 3535                  555
20103b30:	3535 0000 2020 2020 2020 2020 2020 3520     55..           5
20103b40:	3535 3535 2020 2020 2020 2020 2020 2020     5555            
20103b50:	2020 3520 3535 3535 0000 0000 2020 2020        55555....    
20103b60:	2020 2020 2020 2020 3520 3535 3535 2020              55555  
20103b70:	2020 2020 2020 2020 3520 3535 3535 0000              55555..
20103b80:	2020 2020 2020 2020 2020 2020 2020 3520                    5
20103b90:	3535 3535 2020 2020 2020 3520 3535 3535     5555       55555
20103ba0:	0000 0000 2020 2020 2020 2020 2020 2020     ....            
20103bb0:	2020 2020 3520 3535 3535 2020 3520 3535          55555   555
20103bc0:	3535 0000 2020 2020 2020 2020 2020 2020     55..            
20103bd0:	2020 2020 2020 3520 3535 3535 3535 3535            555555555
20103be0:	0000 0000 2020 2020 2020 2020 2020 2020     ....            
20103bf0:	2020 2020 2020 2020 3520 3535 3535 0000              55555..
20103c00:	2020 2020 2020 2020 2020 2020 2020 2020                     
20103c10:	2020 2020 2020 3520 0000 0000 2020 2020            5....    
20103c20:	2020 2020 2020 2020 2020 5720 6c65 6f63                Welco
20103c30:	656d 7420 206f 6953 6946 6576 0021 0000     me to SiFive!...
20103c40:	6572 0064 444c 0030 7267 6565 006e 0000     red.LD0.green...
20103c50:	6c62 6575 0000 0000 7441 6c20 6165 7473     blue....At least
20103c60:	6f20 656e 6f20 2066 454c 7344 6920 2073      one of LEDs is 
20103c70:	756e 6c6c 002e 0000 5043 2055 756e 6c6c     null....CPU null
20103c80:	002e 0000 5043 2055 6e69 6574 7272 7075     ....CPU interrup
20103c90:	2074 6f63 746e 6f72 6c6c 7265 6920 2073     t controller is 
20103ca0:	756e 6c6c 002e 0000 7453 7261 6974 676e     null....Starting
20103cb0:	4d20 494e 5453 6920 666e 7265 6e65 6563      MNIST inference
20103cc0:	2e2e 002e 4954 454d 2052 6e69 6574 7272     ....TIMER interr
20103cd0:	7075 2074 6f63 746e 6f72 6c6c 7265 6920     upt controller i
20103ce0:	2073 6e20 6c75 2e6c 0000 0000 4954 454d     s  null.....TIME
20103cf0:	2052 6e69 6574 7272 7075 2074 6168 646e     R interrupt hand
20103d00:	656c 2072 6572 6967 7473 6172 6974 6e6f     ler registration
20103d10:	6620 6961 656c 0064 5043 2055 6e69 6574      failed.CPU inte
20103d20:	7272 7075 2074 6e65 6261 656c 6620 6961     rrupt enable fai
20103d30:	656c 0064                                   led.

20103d34 <__sf_fake_stderr>:
	...

20103d54 <__sf_fake_stdout>:
	...

20103d74 <__sf_fake_stdin>:
	...
20103d94:	2d23 2b30 0020 0000 6c68 004c 6665 4567     #-0+ ...hlL.efgE
20103da4:	4746 0000 3130 3332 3534 3736 3938 4241     FG..0123456789AB
20103db4:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
20103dc4:	3938 6261 6463 6665 0000 0000 26f4 0000     89abcdef.....&..
20103dd4:	270a 0000 26ca 0000 26ca 0000 26ca 0000     .'...&...&...&..
20103de4:	26ca 0000 270a 0000 26ca 0000 26ca 0000     .&...'...&...&..
20103df4:	26ca 0000 26ca 0000 2862 0000 2772 0000     .&...&..b(..r'..
20103e04:	2800 0000 26ca 0000 26ca 0000 2892 0000     .(...&...&...(..
20103e14:	26ca 0000 2772 0000 26ca 0000 26ca 0000     .&..r'...&...&..
20103e24:	2808 0000                                   .(..

20103e28 <__metal_driver_vtable_riscv_clint0>:
20103e28:	6bf4 2010 6d9a 2010 6d7e 2010 0000 0000     .k. .m. ~m. ....
20103e38:	0000 0000 709e 2010 70d2 2010 6c7c 2010     .....p. .p. |l. 
20103e48:	6d56 2010 6dee 2010 6ea6 2010 0000 0000     Vm. .m. .n. ....
	...
20103e74:	6f5e 2010 6b28 2010 0000 0000 0000 0000     ^o. (k. ........
	...
20103e8c:	827c 2010 82e2 2010 82e2 2010 828e 2010     |.. ... ... ... 
20103e9c:	82e2 2010 82e2 2010 82e2 2010 82a0 2010     ... ... ... ... 
20103eac:	82e2 2010 82e2 2010 82e2 2010 82b2 2010     ... ... ... ... 
20103ebc:	82e2 2010 82e2 2010 82e2 2010 82e2 2010     ... ... ... ... 
20103ecc:	82c4 2010 82c4 2010 82c4 2010 82c4 2010     ... ... ... ... 
20103edc:	82c4 2010 82c4 2010 82c4 2010 82c4 2010     ... ... ... ... 
20103eec:	82c4 2010 82c4 2010 82c4 2010 82c4 2010     ... ... ... ... 
20103efc:	82c4 2010 82c4 2010 82c4 2010 82c4 2010     ... ... ... ... 

20103f0c <__metal_driver_vtable_riscv_cpu_intc>:
20103f0c:	8344 2010 8680 2010 8664 2010 0000 0000     D.. ... d.. ....
	...
20103f28:	8428 2010 0000 0000 860c 2010 8638 2010     (.. ....... 8.. 
	...
20103f58:	86d4 2010 0000 0000 0000 0000 0000 0000     ... ............
	...

20103f70 <__metal_driver_vtable_cpu>:
20103f70:	86f0 2010 8760 2010 87a6 2010 880c 2010     ... `.. ... ... 
20103f80:	8882 2010 889c 2010 88b0 2010 88ca 2010     ... ... ... ... 
20103f90:	88de 2010 8940 2010 89a2 2010 8a02 2010     ... @.. ... ... 
20103fa0:	8a22 2010 8a68 2010 8a96 2010 8ab4 2010     ".. h.. ... ... 
20103fb0:	8ad4 2010                                   ... 

20103fb4 <__metal_driver_vtable_riscv_plic0>:
20103fb4:	8ede 2010 0000 0000 0000 0000 0000 0000     ... ............
	...
20103fd0:	903a 2010 0000 0000 90fc 2010 914c 2010     :.. ....... L.. 
	...
20103fe8:	91cc 2010 919c 2010 8d44 2010 8cde 2010     ... ... D.. ... 
	...
20104008:	91f4 2010 9290 2010 932c 2010 93a0 2010     ... ... ,.. ... 

20104018 <pll_configs>:
20104018:	0001 0000 0020 0000 1b00 00b7 3600 016e     .... ........6n.
20104028:	0001 0000 001f 0000 0003 0000 003f 0000     ............?...
20104038:	0001 0000 0020 0000 3600 016e 6c00 02dc     .... ....6n..l..
20104048:	0003 0000 001f 0000 0002 0000 003f 0000     ............?...
20104058:	0001 0000 0010 0000 8d80 005b 1b00 00b7     ..........[.....
20104068:	0000 0000 001f 0000 0003 0000 003f 0000     ............?...
20104078:	0001 0000 0010 0000 1b00 00b7 3600 016e     .............6n.
20104088:	0001 0000 001f 0000 0002 0000 003f 0000     ............?...
20104098:	0001 0000 0010 0000 3600 016e 6c00 02dc     .........6n..l..
201040a8:	0003 0000 001f 0000 0002 0000 001f 0000     ................
201040b8:	0001 0000 0008 0000 8d80 005b 1b00 00b7     ..........[.....
201040c8:	0000 0000 001f 0000 0003 0000 001f 0000     ................
201040d8:	0001 0000 0008 0000 1b00 00b7 3600 016e     .............6n.
201040e8:	0001 0000 001f 0000 0002 0000 001f 0000     ................
201040f8:	0001 0000 0008 0000 3600 016e 6c00 02dc     .........6n..l..
20104108:	0003 0000 001f 0000 0002 0000 000f 0000     ................
20104118:	0001 0000 0004 0000 8d80 005b 1b00 00b7     ..........[.....
20104128:	0000 0000 001f 0000 0003 0000 000f 0000     ................
20104138:	0001 0000 0004 0000 1b00 00b7 3600 016e     .............6n.
20104148:	0001 0000 001f 0000 0002 0000 000f 0000     ................
20104158:	0001 0000 0004 0000 3600 016e 6c00 02dc     .........6n..l..
20104168:	0003 0000 001f 0000 0002 0000 0007 0000     ................
20104178:	0001 0000 0002 0000 8d80 005b 1b00 00b7     ..........[.....
20104188:	0000 0000 001f 0000 0002 0000 000f 0000     ................
20104198:	0001 0000 0002 0000 1b00 00b7 3600 016e     .............6n.
201041a8:	0001 0000 001f 0000 0001 0000 000f 0000     ................
201041b8:	0001 0000 0002 0000 3600 016e 6c00 02dc     .........6n..l..
201041c8:	0003 0000 001f 0000 0001 0000 0007 0000     ................
201041d8:	0002 0000 0001 0000 8d80 005b 1b00 00b7     ..........[.....
201041e8:	0000 0000 001f 0000 0001 0000 0007 0000     ................
201041f8:	0002 0000 0001 0000 1b00 00b7 3600 016e     .............6n.
20104208:	0001 0000 001f 0000 0001 0000 0003 0000     ................
20104218:	0002 0000 0001 0000 3600 016e 6c00 02dc     .........6n..l..
20104228:	0003 0000 001f 0000 0003 0000 ffff ffff     ................
20104238:	0004 0000 0001 0000 8d80 005b 1b00 00b7     ..........[.....
20104248:	0000 0000 001f 0000 0003 0000 0000 0000     ................
20104258:	0004 0000 0001 0000 1b00 00b7 3600 016e     .............6n.
20104268:	0001 0000 001f 0000 0003 0000 ffff ffff     ................
20104278:	0004 0000 0001 0000 3600 016e 6c00 02dc     .........6n..l..
20104288:	0003 0000 001f 0000 0002 0000 ffff ffff     ................
20104298:	0006 0000 0001 0000 8d80 005b c2aa 00a2     ..........[.....
201042a8:	0000 0000 0023 0000 0001 0000 0002 0000     ....#...........
201042b8:	0006 0000 0001 0000 c2aa 00a2 1b00 00b7     ................
201042c8:	0000 0000 0017 0000 0003 0000 ffff ffff     ................
201042d8:	0006 0000 0001 0000 1b00 00b7 2400 00f4     .............$..
201042e8:	0001 0000 002f 0000 0003 0000 ffff ffff     ..../...........
201042f8:	0006 0000 0001 0000 2400 00f4 a880 0112     .........$......
20104308:	0001 0000 0017 0000 0002 0000 ffff ffff     ................
20104318:	0006 0000 0001 0000 a880 0112 8555 0145     ............U.E.
20104328:	0002 0000 0023 0000 0002 0000 ffff ffff     ....#...........
20104338:	0008 0000 0001 0000 8d80 005b 1b00 00b7     ..........[.....
20104348:	0000 0000 001f 0000 0003 0000 ffff ffff     ................
20104358:	0008 0000 0001 0000 1b00 00b7 3600 016e     .............6n.
20104368:	0001 0000 001f 0000 0002 0000 ffff ffff     ................
20104378:	0008 0000 0001 0000 3600 016e 6c00 02dc     .........6n..l..
20104388:	0003 0000 001f 0000 0001 0000 ffff ffff     ................
20104398:	000a 0000 0001 0000 8d80 005b 7c00 0092     ..........[..|..
201043a8:	0000 0000 0027 0000 0003 0000 ffff ffff     ....'...........
201043b8:	000a 0000 0001 0000 7c00 0092 1b00 00b7     .........|......
201043c8:	0000 0000 0013 0000 0002 0000 ffff ffff     ................
201043d8:	000a 0000 0001 0000 1b00 00b7 f800 0124     ..............$.
201043e8:	0001 0000 0027 0000 0002 0000 ffff ffff     ....'...........
201043f8:	000a 0000 0001 0000 f800 0124 3600 016e     ..........$..6n.
20104408:	0001 0000 0013 0000 0001 0000 ffff ffff     ................
20104418:	000a 0000 0001 0000 3600 016e f000 0249     .........6n...I.
20104428:	0003 0000 0027 0000 0001 0000 ffff ffff     ....'...........
20104438:	000c 0000 0001 0000 8d80 005b 1200 007a     ..........[...z.
20104448:	0000 0000 002f 0000 0003 0000 ffff ffff     ..../...........
20104458:	000c 0000 0001 0000 1200 007a 1b00 00b7     ..........z.....
20104468:	0000 0000 0017 0000 0002 0000 ffff ffff     ................
20104478:	000c 0000 0001 0000 1b00 00b7 2400 00f4     .............$..
20104488:	0001 0000 002f 0000 0002 0000 ffff ffff     ..../...........
20104498:	000c 0000 0001 0000 2400 00f4 3600 016e     .........$...6n.
201044a8:	0001 0000 0017 0000 0001 0000 ffff ffff     ................
201044b8:	000c 0000 0001 0000 3600 016e c380 01c9     .........6n.....
201044c8:	0003 0000 002f 0000 0001 0000 ffff ffff     ..../...........
201044d8:	000c 0000 0001 0000 c380 01c9 4800 01e8     .............H..
201044e8:	0003 0000 002f 0000 0001 0000 ffff ffff     ..../...........
201044f8:	000e 0000 0001 0000 8d80 005b a1b6 0068     ..........[...h.
20104508:	0000 0000 0037 0000 0003 0000 ffff ffff     ....7...........
20104518:	000e 0000 0001 0000 a1b7 0068 1b00 00b7     ..........h.....
20104528:	0000 0000 001b 0000 0002 0000 ffff ffff     ................
20104538:	000e 0000 0001 0000 1b00 00b7 436d 00d1     ............mC..
20104548:	0001 0000 0037 0000 0002 0000 ffff ffff     ....7...........
20104558:	000e 0000 0001 0000 436e 00d1 3600 016e     ........nC...6n.
20104568:	0001 0000 001b 0000 0001 0000 ffff ffff     ................
20104578:	000e 0000 0001 0000 3600 016e 86db 01a2     .........6n.....
20104588:	0003 0000 0037 0000 0001 0000 ffff ffff     ....7...........
20104598:	0010 0000 0001 0000 8d80 005b 1b00 00b7     ..........[.....
201045a8:	0000 0000 001f 0000 0002 0000 ffff ffff     ................
201045b8:	0010 0000 0001 0000 1b00 00b7 3600 016e     .............6n.
201045c8:	0001 0000 001f 0000 0001 0000 ffff ffff     ................
201045d8:	0012 0000 0001 0000 8d80 005b c2aa 00a2     ..........[.....
201045e8:	0000 0000 0023 0000 0002 0000 ffff ffff     ....#...........
201045f8:	0012 0000 0001 0000 c2ab 00a2 1b00 00b7     ................
20104608:	0000 0000 0011 0000 0001 0000 ffff ffff     ................
20104618:	0012 0000 0001 0000 1b00 00b7 8555 0145     ............U.E.
20104628:	0001 0000 0023 0000 0001 0000 ffff ffff     ....#...........
20104638:	0014 0000 0001 0000 8d80 005b 7c00 0092     ..........[..|..
20104648:	0000 0000 0027 0000 0002 0000 ffff ffff     ....'...........
20104658:	0014 0000 0001 0000 7c00 0092 1b00 00b7     .........|......
20104668:	0000 0000 0013 0000 0001 0000 ffff ffff     ................
20104678:	0014 0000 0001 0000 1b00 00b7 f800 0124     ..............$.
20104688:	0001 0000 0027 0000 0001 0000 ffff ffff     ....'...........
20104698:	0016 0000 0001 0000 8d80 005b 2ae8 0085     ..........[..*..
201046a8:	0000 0000 002b 0000 0002 0000 ffff ffff     ....+...........
201046b8:	0016 0000 0001 0000 2ae9 0085 1b00 00b7     .........*......
201046c8:	0000 0000 0015 0000 0001 0000 ffff ffff     ................
201046d8:	0016 0000 0001 0000 1b00 00b7 55d1 010a     .............U..
201046e8:	0001 0000 002b 0000 0001 0000 ffff ffff     ....+...........
201046f8:	0018 0000 0001 0000 8d80 005b 1200 007a     ..........[...z.
20104708:	0000 0000 002f 0000 0002 0000 ffff ffff     ..../...........
20104718:	0018 0000 0001 0000 1200 007a 1b00 00b7     ..........z.....
20104728:	0000 0000 0017 0000 0001 0000 ffff ffff     ................
20104738:	0018 0000 0001 0000 1b00 00b7 2400 00f4     .............$..
20104748:	0001 0000 002f 0000 0001 0000 ffff ffff     ..../...........
20104758:	001a 0000 0001 0000 8d80 005b ae27 0070     ..........[.'.p.
20104768:	0000 0000 0033 0000 0002 0000 ffff ffff     ....3...........
20104778:	001a 0000 0001 0000 ae28 0070 1b00 00b7     ........(.p.....
20104788:	0000 0000 0019 0000 0001 0000 ffff ffff     ................
20104798:	001a 0000 0001 0000 1b00 00b7 5866 00e1     ............fX..
201047a8:	0001 0000 0033 0000 0001 0000 ffff ffff     ....3...........
201047b8:	001c 0000 0001 0000 8d80 005b a1b6 0068     ..........[...h.
201047c8:	0000 0000 0037 0000 0002 0000 ffff ffff     ....7...........
201047d8:	001c 0000 0001 0000 a1b7 0068 1b00 00b7     ..........h.....
201047e8:	0000 0000 001b 0000 0001 0000 ffff ffff     ................
201047f8:	001c 0000 0001 0000 1b00 00b7 436d 00d1     ............mC..
20104808:	0001 0000 0037 0000 0001 0000 ffff ffff     ....7...........
20104818:	001e 0000 0001 0000 8d80 005b a800 0061     ..........[...a.
20104828:	0000 0000 003b 0000 0002 0000 ffff ffff     ....;...........
20104838:	001e 0000 0001 0000 a800 0061 1b00 00b7     ..........a.....
20104848:	0000 0000 001d 0000 0001 0000 ffff ffff     ................
20104858:	001e 0000 0001 0000 1b00 00b7 5000 00c3     .............P..
20104868:	0001 0000 003b 0000 0001 0000 ffff ffff     ....;...........
20104878:	0020 0000 0001 0000 8d80 005b 1b00 00b7      .........[.....
20104888:	0000 0000 001f 0000 0001 0000 ffff ffff     ................

20104898 <__metal_driver_vtable_sifive_fe310_g000_pll>:
20104898:	96c4 2010 9770 2010 9b48 2010 444c 7230     ... p.. H.. LD0r
201048a8:	6465 0000 444c 6730 6572 6e65 0000 0000     ed..LD0green....
201048b8:	444c 6230 756c 0065 0000 0000               LD0blue.....

201048c4 <__metal_driver_vtable_sifive_led>:
201048c4:	9e12 2010 9e4a 2010 9e96 2010 9ed8 2010     ... J.. ... ... 
201048d4:	9f1a 2010 a474 2010 a4f2 2010 a50a 2010     ... t.. ... ... 
201048e4:	a526 2010 a574 2010 a558 2010 a590 2010     &.. t.. X.. ... 
201048f4:	a5c6 2010 a7b4 2010 a67a 2010 a692 2010     ... ... z.. ... 
20104904:	a6ae 2010 a6fc 2010 a6e0 2010 a718 2010     ... ... ... ... 
20104914:	a74e 2010                                   N.. 

20104918 <__metal_driver_vtable_sifive_gpio0>:
20104918:	a19e 2010 a15e 2010 a1e4 2010 a20e 2010     ... ^.. ... ... 
20104928:	a23a 2010 a280 2010 a2c0 2010 a300 2010     :.. ... ... ... 
20104938:	a346 2010 a386 2010 a3e8 2010 a432 2010     F.. ... ... 2.. 
20104948:	a638 2010 a7c0 2010 a7e0 2010               8.. ... ... 

20104954 <__metal_driver_vtable_sifive_uart0>:
20104954:	ade0 2010 ab80 2010 aa5c 2010 abc2 2010     ... ... \.. ... 
20104964:	ac18 2010 ac38 2010 a938 2010 a958 2010     ... 8.. 8.. X.. 
20104974:	a978 2010 a9b2 2010 a9ea 2010 aa24 2010     x.. ... ... $.. 
20104984:	aa8c 2010 aad6 2010 ab06 2010 ab50 2010     ... ... ... P.. 
20104994:	0000 0000                                   ....

20104998 <argv>:
argv():
20104998:	49a0                	lw	s0,80(a1)
2010499a:	2010                	.insn	2, 0x2010

2010499c <envp>:
envp():
2010499c:	0000                	unimp
	...

201049a0 <name>:
name():
201049a0:	696c                	.insn	2, 0x696c
201049a2:	6762                	.insn	2, 0x6762
201049a4:	6f6c                	.insn	2, 0x6f6c
201049a6:	00007373          	csrrc	t1,ustatus,0
201049aa:	0000                	unimp
201049ac:	0000                	unimp
	...

201049b0 <processfclayer>:
processfclayer():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:90
 * @param n_output The number of output neurons.
 * @param output Pointer to the output array where the result of the layer is stored.
 */

void processfclayer( int8_t *activations,  const uint32_t *weights, int32_t bits_per_weight, uint32_t n_input, uint32_t n_output, int32_t *output)
{
201049b0:	7131                	add	sp,sp,-192
201049b2:	df22                	sw	s0,188(sp)
201049b4:	0180                	add	s0,sp,192
201049b6:	f4a42e23          	sw	a0,-164(s0)
201049ba:	f4b42c23          	sw	a1,-168(s0)
201049be:	f4c42a23          	sw	a2,-172(s0)
201049c2:	f4d42823          	sw	a3,-176(s0)
201049c6:	f4e42623          	sw	a4,-180(s0)
201049ca:	f4f42423          	sw	a5,-184(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:91
   const uint32_t *weightidx = weights;
201049ce:	f5842783          	lw	a5,-168(s0)
201049d2:	fef42623          	sw	a5,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:93

    for (uint32_t i = 0; i < n_output; i++) {
201049d6:	fe042423          	sw	zero,-24(s0)
201049da:	a6ed                	j	20104dc4 <processfclayer+0x414>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:94
        int8_t *activations_idx = activations;
201049dc:	f5c42783          	lw	a5,-164(s0)
201049e0:	fef42223          	sw	a5,-28(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:95
        int32_t sum = 0;
201049e4:	fe042023          	sw	zero,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:97

        if (bits_per_weight == 1) {
201049e8:	f5442703          	lw	a4,-172(s0)
201049ec:	4785                	li	a5,1
201049ee:	08f71763          	bne	a4,a5,20104a7c <processfclayer+0xcc>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:98
            for (uint32_t k = 0; k < n_input; k+=32) {
201049f2:	fc042e23          	sw	zero,-36(s0)
201049f6:	a8a5                	j	20104a6e <processfclayer+0xbe>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:99
                uint32_t weightChunk = *weightidx++;
201049f8:	fec42783          	lw	a5,-20(s0)
201049fc:	00478713          	add	a4,a5,4
20104a00:	fee42623          	sw	a4,-20(s0)
20104a04:	439c                	lw	a5,0(a5)
20104a06:	fcf42c23          	sw	a5,-40(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:100
                for (uint32_t j = 0; j < 32; j++) {
20104a0a:	fc042a23          	sw	zero,-44(s0)
20104a0e:	a0a9                	j	20104a58 <processfclayer+0xa8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:101
                    int32_t in=*activations_idx++;
20104a10:	fe442783          	lw	a5,-28(s0)
20104a14:	00178713          	add	a4,a5,1
20104a18:	fee42223          	sw	a4,-28(s0)
20104a1c:	00078783          	lb	a5,0(a5)
20104a20:	f6f42623          	sw	a5,-148(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:102
                    sum += (weightChunk & 0x80000000) ? in : -in;  // Note that sign is flipped for Binary quant (bit set equals positive)
20104a24:	fd842783          	lw	a5,-40(s0)
20104a28:	0007c763          	bltz	a5,20104a36 <processfclayer+0x86>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:102 (discriminator 1)
20104a2c:	f6c42783          	lw	a5,-148(s0)
20104a30:	40f007b3          	neg	a5,a5
20104a34:	a019                	j	20104a3a <processfclayer+0x8a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:102 (discriminator 2)
20104a36:	f6c42783          	lw	a5,-148(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:102 (discriminator 4)
20104a3a:	fe042703          	lw	a4,-32(s0)
20104a3e:	97ba                	add	a5,a5,a4
20104a40:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:103 (discriminator 4)
                    weightChunk <<= 1;
20104a44:	fd842783          	lw	a5,-40(s0)
20104a48:	0786                	sll	a5,a5,0x1
20104a4a:	fcf42c23          	sw	a5,-40(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:100 (discriminator 4)
                for (uint32_t j = 0; j < 32; j++) {
20104a4e:	fd442783          	lw	a5,-44(s0)
20104a52:	0785                	add	a5,a5,1
20104a54:	fcf42a23          	sw	a5,-44(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:100 (discriminator 2)
20104a58:	fd442703          	lw	a4,-44(s0)
20104a5c:	47fd                	li	a5,31
20104a5e:	fae7f9e3          	bgeu	a5,a4,20104a10 <processfclayer+0x60>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:98 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=32) {
20104a62:	fdc42783          	lw	a5,-36(s0)
20104a66:	02078793          	add	a5,a5,32
20104a6a:	fcf42e23          	sw	a5,-36(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:98 (discriminator 1)
20104a6e:	fdc42703          	lw	a4,-36(s0)
20104a72:	f5042783          	lw	a5,-176(s0)
20104a76:	f8f761e3          	bltu	a4,a5,201049f8 <processfclayer+0x48>
20104a7a:	a63d                	j	20104da8 <processfclayer+0x3f8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:106
                }
            }
        } else if (bits_per_weight == 2 ) {
20104a7c:	f5442703          	lw	a4,-172(s0)
20104a80:	4789                	li	a5,2
20104a82:	0af71863          	bne	a4,a5,20104b32 <processfclayer+0x182>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:107
            for (uint32_t k = 0; k < n_input; k+=16) {
20104a86:	fc042823          	sw	zero,-48(s0)
20104a8a:	a869                	j	20104b24 <processfclayer+0x174>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:108
                uint32_t weightChunk = *weightidx++;
20104a8c:	fec42783          	lw	a5,-20(s0)
20104a90:	00478713          	add	a4,a5,4
20104a94:	fee42623          	sw	a4,-20(s0)
20104a98:	439c                	lw	a5,0(a5)
20104a9a:	fcf42623          	sw	a5,-52(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:109
                for (uint32_t j = 0; j < 16; j++) {
20104a9e:	fc042423          	sw	zero,-56(s0)
20104aa2:	a0bd                	j	20104b10 <processfclayer+0x160>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:110
                    int32_t in=*activations_idx++;
20104aa4:	fe442783          	lw	a5,-28(s0)
20104aa8:	00178713          	add	a4,a5,1
20104aac:	fee42223          	sw	a4,-28(s0)
20104ab0:	00078783          	lb	a5,0(a5)
20104ab4:	f6f42a23          	sw	a5,-140(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:111
                    int32_t tmpsum = (weightChunk & 0x80000000) ? -in : in; // one complements sign (bit set equals negative)
20104ab8:	fcc42783          	lw	a5,-52(s0)
20104abc:	0007d763          	bgez	a5,20104aca <processfclayer+0x11a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:111 (discriminator 1)
20104ac0:	f7442783          	lw	a5,-140(s0)
20104ac4:	40f007b3          	neg	a5,a5
20104ac8:	a019                	j	20104ace <processfclayer+0x11e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:111 (discriminator 2)
20104aca:	f7442783          	lw	a5,-140(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:111 (discriminator 4)
20104ace:	f6f42823          	sw	a5,-144(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:112 (discriminator 4)
                    sum += tmpsum;                                  // sign*in*1
20104ad2:	fe042703          	lw	a4,-32(s0)
20104ad6:	f7042783          	lw	a5,-144(s0)
20104ada:	97ba                	add	a5,a5,a4
20104adc:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:113 (discriminator 4)
                    if (weightChunk & 0x40000000) sum += tmpsum<<1; // sign*in*2
20104ae0:	fcc42703          	lw	a4,-52(s0)
20104ae4:	400007b7          	lui	a5,0x40000
20104ae8:	8ff9                	and	a5,a5,a4
20104aea:	cb89                	beqz	a5,20104afc <processfclayer+0x14c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:113 (discriminator 1)
20104aec:	f7042783          	lw	a5,-144(s0)
20104af0:	0786                	sll	a5,a5,0x1
20104af2:	fe042703          	lw	a4,-32(s0)
20104af6:	97ba                	add	a5,a5,a4
20104af8:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:114 (discriminator 2)
                    weightChunk <<= 2;
20104afc:	fcc42783          	lw	a5,-52(s0)
20104b00:	078a                	sll	a5,a5,0x2
20104b02:	fcf42623          	sw	a5,-52(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:109 (discriminator 2)
                for (uint32_t j = 0; j < 16; j++) {
20104b06:	fc842783          	lw	a5,-56(s0)
20104b0a:	0785                	add	a5,a5,1 # 40000001 <metal_segment_data_source_start+0x1fef46a1>
20104b0c:	fcf42423          	sw	a5,-56(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:109 (discriminator 1)
20104b10:	fc842703          	lw	a4,-56(s0)
20104b14:	47bd                	li	a5,15
20104b16:	f8e7f7e3          	bgeu	a5,a4,20104aa4 <processfclayer+0xf4>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:107 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=16) {
20104b1a:	fd042783          	lw	a5,-48(s0)
20104b1e:	07c1                	add	a5,a5,16
20104b20:	fcf42823          	sw	a5,-48(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:107 (discriminator 1)
20104b24:	fd042703          	lw	a4,-48(s0)
20104b28:	f5042783          	lw	a5,-176(s0)
20104b2c:	f6f760e3          	bltu	a4,a5,20104a8c <processfclayer+0xdc>
20104b30:	aca5                	j	20104da8 <processfclayer+0x3f8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:135
                    }
                    weightChunk <<= 4;
                }
            }
#else
        } else if (bits_per_weight == 4 ) {
20104b32:	f5442703          	lw	a4,-172(s0)
20104b36:	4791                	li	a5,4
20104b38:	0af71463          	bne	a4,a5,20104be0 <processfclayer+0x230>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:136
            for (uint32_t k = 0; k < n_input; k+=8) {
20104b3c:	fc042223          	sw	zero,-60(s0)
20104b40:	a849                	j	20104bd2 <processfclayer+0x222>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:137
                uint32_t weightChunk = *weightidx++;
20104b42:	fec42783          	lw	a5,-20(s0)
20104b46:	00478713          	add	a4,a5,4
20104b4a:	fee42623          	sw	a4,-20(s0)
20104b4e:	439c                	lw	a5,0(a5)
20104b50:	fcf42023          	sw	a5,-64(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:138
                for (uint32_t j = 0; j < 8; j++) {
20104b54:	fa042e23          	sw	zero,-68(s0)
20104b58:	a09d                	j	20104bbe <processfclayer+0x20e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:139
                    int32_t in=*activations_idx++;
20104b5a:	fe442783          	lw	a5,-28(s0)
20104b5e:	00178713          	add	a4,a5,1
20104b62:	fee42223          	sw	a4,-28(s0)
20104b66:	00078783          	lb	a5,0(a5)
20104b6a:	f6f42e23          	sw	a5,-132(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:140
                    if (in != 0) { // Skip zero activations to speed up inference in layers after first layer
20104b6e:	f7c42783          	lw	a5,-132(s0)
20104b72:	cf85                	beqz	a5,20104baa <processfclayer+0x1fa>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:141
                        int32_t tmpsum = (weightChunk & 0x80000000) ? -in : in; // one complements sign (bit set equals negative)
20104b74:	fc042783          	lw	a5,-64(s0)
20104b78:	0007d763          	bgez	a5,20104b86 <processfclayer+0x1d6>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:141 (discriminator 1)
20104b7c:	f7c42783          	lw	a5,-132(s0)
20104b80:	40f007b3          	neg	a5,a5
20104b84:	a019                	j	20104b8a <processfclayer+0x1da>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:141 (discriminator 2)
20104b86:	f7c42783          	lw	a5,-132(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:141 (discriminator 4)
20104b8a:	f6f42c23          	sw	a5,-136(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:142 (discriminator 4)
                        sum += tmpsum * ((weightChunk>>(32-4))&7);                                  // sign*in*1
20104b8e:	fc042783          	lw	a5,-64(s0)
20104b92:	83f1                	srl	a5,a5,0x1c
20104b94:	0077f713          	and	a4,a5,7
20104b98:	f7842783          	lw	a5,-136(s0)
20104b9c:	02f70733          	mul	a4,a4,a5
20104ba0:	fe042783          	lw	a5,-32(s0)
20104ba4:	97ba                	add	a5,a5,a4
20104ba6:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:144 (discriminator 2)
                    }
                    weightChunk <<= 4;
20104baa:	fc042783          	lw	a5,-64(s0)
20104bae:	0792                	sll	a5,a5,0x4
20104bb0:	fcf42023          	sw	a5,-64(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:138 (discriminator 2)
                for (uint32_t j = 0; j < 8; j++) {
20104bb4:	fbc42783          	lw	a5,-68(s0)
20104bb8:	0785                	add	a5,a5,1
20104bba:	faf42e23          	sw	a5,-68(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:138 (discriminator 1)
20104bbe:	fbc42703          	lw	a4,-68(s0)
20104bc2:	479d                	li	a5,7
20104bc4:	f8e7fbe3          	bgeu	a5,a4,20104b5a <processfclayer+0x1aa>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:136 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=8) {
20104bc8:	fc442783          	lw	a5,-60(s0)
20104bcc:	07a1                	add	a5,a5,8
20104bce:	fcf42223          	sw	a5,-60(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:136 (discriminator 1)
20104bd2:	fc442703          	lw	a4,-60(s0)
20104bd6:	f5042783          	lw	a5,-176(s0)
20104bda:	f6f764e3          	bltu	a4,a5,20104b42 <processfclayer+0x192>
20104bde:	a2e9                	j	20104da8 <processfclayer+0x3f8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:147
                }
            }
        } else if (bits_per_weight == 8 + 4 ) {   // 4 bit twos-complement
20104be0:	f5442703          	lw	a4,-172(s0)
20104be4:	47b1                	li	a5,12
20104be6:	08f71663          	bne	a4,a5,20104c72 <processfclayer+0x2c2>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:148
            for (uint32_t k = 0; k < n_input; k+=8) {
20104bea:	fa042c23          	sw	zero,-72(s0)
20104bee:	a89d                	j	20104c64 <processfclayer+0x2b4>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:149
                int32_t weightChunk = *weightidx++;
20104bf0:	fec42783          	lw	a5,-20(s0)
20104bf4:	00478713          	add	a4,a5,4
20104bf8:	fee42623          	sw	a4,-20(s0)
20104bfc:	439c                	lw	a5,0(a5)
20104bfe:	faf42a23          	sw	a5,-76(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:150
                for (uint32_t j = 0; j < 8; j++) {
20104c02:	fa042823          	sw	zero,-80(s0)
20104c06:	a0a9                	j	20104c50 <processfclayer+0x2a0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:151 (discriminator 3)
                    int32_t in=*activations_idx++;
20104c08:	fe442783          	lw	a5,-28(s0)
20104c0c:	00178713          	add	a4,a5,1
20104c10:	fee42223          	sw	a4,-28(s0)
20104c14:	00078783          	lb	a5,0(a5)
20104c18:	f8f42223          	sw	a5,-124(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:152 (discriminator 3)
                    int32_t weight = (weightChunk) >> (32-4); // extend sign, cut off lower bits
20104c1c:	fb442783          	lw	a5,-76(s0)
20104c20:	87f1                	sra	a5,a5,0x1c
20104c22:	f8f42023          	sw	a5,-128(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:153 (discriminator 3)
                    sum += in*weight;
20104c26:	f8442703          	lw	a4,-124(s0)
20104c2a:	f8042783          	lw	a5,-128(s0)
20104c2e:	02f707b3          	mul	a5,a4,a5
20104c32:	fe042703          	lw	a4,-32(s0)
20104c36:	97ba                	add	a5,a5,a4
20104c38:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:154 (discriminator 3)
                    weightChunk <<= 4;
20104c3c:	fb442783          	lw	a5,-76(s0)
20104c40:	0792                	sll	a5,a5,0x4
20104c42:	faf42a23          	sw	a5,-76(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:150 (discriminator 3)
                for (uint32_t j = 0; j < 8; j++) {
20104c46:	fb042783          	lw	a5,-80(s0)
20104c4a:	0785                	add	a5,a5,1
20104c4c:	faf42823          	sw	a5,-80(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:150 (discriminator 1)
20104c50:	fb042703          	lw	a4,-80(s0)
20104c54:	479d                	li	a5,7
20104c56:	fae7f9e3          	bgeu	a5,a4,20104c08 <processfclayer+0x258>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:148 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=8) {
20104c5a:	fb842783          	lw	a5,-72(s0)
20104c5e:	07a1                	add	a5,a5,8
20104c60:	faf42c23          	sw	a5,-72(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:148 (discriminator 1)
20104c64:	fb842703          	lw	a4,-72(s0)
20104c68:	f5042783          	lw	a5,-176(s0)
20104c6c:	f8f762e3          	bltu	a4,a5,20104bf0 <processfclayer+0x240>
20104c70:	aa25                	j	20104da8 <processfclayer+0x3f8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:157
                }
            }
        } else if (bits_per_weight == 8 + 8 ) {   // 8 bit twos-complement
20104c72:	f5442703          	lw	a4,-172(s0)
20104c76:	47c1                	li	a5,16
20104c78:	08f71663          	bne	a4,a5,20104d04 <processfclayer+0x354>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:158
            for (uint32_t k = 0; k < n_input; k+=4) {
20104c7c:	fa042623          	sw	zero,-84(s0)
20104c80:	a89d                	j	20104cf6 <processfclayer+0x346>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:159
                int32_t weightChunk = *weightidx++;
20104c82:	fec42783          	lw	a5,-20(s0)
20104c86:	00478713          	add	a4,a5,4
20104c8a:	fee42623          	sw	a4,-20(s0)
20104c8e:	439c                	lw	a5,0(a5)
20104c90:	faf42423          	sw	a5,-88(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:160
                for (uint32_t j = 0; j < 4; j++) {
20104c94:	fa042223          	sw	zero,-92(s0)
20104c98:	a0a9                	j	20104ce2 <processfclayer+0x332>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:161 (discriminator 3)
                    int32_t in=*activations_idx++;
20104c9a:	fe442783          	lw	a5,-28(s0)
20104c9e:	00178713          	add	a4,a5,1
20104ca2:	fee42223          	sw	a4,-28(s0)
20104ca6:	00078783          	lb	a5,0(a5)
20104caa:	f8f42623          	sw	a5,-116(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:162 (discriminator 3)
                    int32_t weight = (weightChunk) >> (32-8); // extend sign, cut off lower bits
20104cae:	fa842783          	lw	a5,-88(s0)
20104cb2:	87e1                	sra	a5,a5,0x18
20104cb4:	f8f42423          	sw	a5,-120(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:163 (discriminator 3)
                    sum += in*weight;
20104cb8:	f8c42703          	lw	a4,-116(s0)
20104cbc:	f8842783          	lw	a5,-120(s0)
20104cc0:	02f707b3          	mul	a5,a4,a5
20104cc4:	fe042703          	lw	a4,-32(s0)
20104cc8:	97ba                	add	a5,a5,a4
20104cca:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:164 (discriminator 3)
                    weightChunk <<= 8;
20104cce:	fa842783          	lw	a5,-88(s0)
20104cd2:	07a2                	sll	a5,a5,0x8
20104cd4:	faf42423          	sw	a5,-88(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:160 (discriminator 3)
                for (uint32_t j = 0; j < 4; j++) {
20104cd8:	fa442783          	lw	a5,-92(s0)
20104cdc:	0785                	add	a5,a5,1
20104cde:	faf42223          	sw	a5,-92(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:160 (discriminator 1)
20104ce2:	fa442703          	lw	a4,-92(s0)
20104ce6:	478d                	li	a5,3
20104ce8:	fae7f9e3          	bgeu	a5,a4,20104c9a <processfclayer+0x2ea>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:158 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=4) {
20104cec:	fac42783          	lw	a5,-84(s0)
20104cf0:	0791                	add	a5,a5,4
20104cf2:	faf42623          	sw	a5,-84(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:158 (discriminator 1)
20104cf6:	fac42703          	lw	a4,-84(s0)
20104cfa:	f5042783          	lw	a5,-176(s0)
20104cfe:	f8f762e3          	bltu	a4,a5,20104c82 <processfclayer+0x2d2>
20104d02:	a05d                	j	20104da8 <processfclayer+0x3f8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:168
                }
            }
#endif
        }  else if (bits_per_weight == 16 + 4 ) {  // 4 bit shift
20104d04:	f5442703          	lw	a4,-172(s0)
20104d08:	47d1                	li	a5,20
20104d0a:	08f71f63          	bne	a4,a5,20104da8 <processfclayer+0x3f8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:169
            for (uint32_t k = 0; k < n_input; k+=8) {
20104d0e:	fa042023          	sw	zero,-96(s0)
20104d12:	a069                	j	20104d9c <processfclayer+0x3ec>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:170
                uint32_t weightChunk = *weightidx++;
20104d14:	fec42783          	lw	a5,-20(s0)
20104d18:	00478713          	add	a4,a5,4
20104d1c:	fee42623          	sw	a4,-20(s0)
20104d20:	439c                	lw	a5,0(a5)
20104d22:	f8f42e23          	sw	a5,-100(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:171
                for (uint32_t j = 0; j < 8; j++) {
20104d26:	f8042c23          	sw	zero,-104(s0)
20104d2a:	a8b9                	j	20104d88 <processfclayer+0x3d8>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:172
                    int32_t in=*activations_idx++;
20104d2c:	fe442783          	lw	a5,-28(s0)
20104d30:	00178713          	add	a4,a5,1
20104d34:	fee42223          	sw	a4,-28(s0)
20104d38:	00078783          	lb	a5,0(a5)
20104d3c:	f8f42a23          	sw	a5,-108(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:175
                    int32_t tmpsum;

                    tmpsum = (weightChunk & 0x80000000) ? -in : in; // one complements sign (bit set equals negative)
20104d40:	f9c42783          	lw	a5,-100(s0)
20104d44:	0007d763          	bgez	a5,20104d52 <processfclayer+0x3a2>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:175 (discriminator 1)
20104d48:	f9442783          	lw	a5,-108(s0)
20104d4c:	40f007b3          	neg	a5,a5
20104d50:	a019                	j	20104d56 <processfclayer+0x3a6>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:175 (discriminator 2)
20104d52:	f9442783          	lw	a5,-108(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:175 (discriminator 4)
20104d56:	f8f42823          	sw	a5,-112(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:176 (discriminator 4)
                    sum += tmpsum << ((weightChunk >> 28) & 7); // sign*in*2^log
20104d5a:	f9c42783          	lw	a5,-100(s0)
20104d5e:	83f1                	srl	a5,a5,0x1c
20104d60:	8b9d                	and	a5,a5,7
20104d62:	f9042703          	lw	a4,-112(s0)
20104d66:	00f717b3          	sll	a5,a4,a5
20104d6a:	fe042703          	lw	a4,-32(s0)
20104d6e:	97ba                	add	a5,a5,a4
20104d70:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:177 (discriminator 4)
                    weightChunk <<= 4;
20104d74:	f9c42783          	lw	a5,-100(s0)
20104d78:	0792                	sll	a5,a5,0x4
20104d7a:	f8f42e23          	sw	a5,-100(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:171 (discriminator 4)
                for (uint32_t j = 0; j < 8; j++) {
20104d7e:	f9842783          	lw	a5,-104(s0)
20104d82:	0785                	add	a5,a5,1
20104d84:	f8f42c23          	sw	a5,-104(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:171 (discriminator 2)
20104d88:	f9842703          	lw	a4,-104(s0)
20104d8c:	479d                	li	a5,7
20104d8e:	f8e7ffe3          	bgeu	a5,a4,20104d2c <processfclayer+0x37c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:169 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=8) {
20104d92:	fa042783          	lw	a5,-96(s0)
20104d96:	07a1                	add	a5,a5,8
20104d98:	faf42023          	sw	a5,-96(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:169 (discriminator 1)
20104d9c:	fa042703          	lw	a4,-96(s0)
20104da0:	f5042783          	lw	a5,-176(s0)
20104da4:	f6f768e3          	bltu	a4,a5,20104d14 <processfclayer+0x364>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:182 (discriminator 2)
                }
            }
        }   // else printf("Error: unsupported weight bit width %d\n", bits_per_weight);

        output[i] = sum;
20104da8:	fe842783          	lw	a5,-24(s0)
20104dac:	078a                	sll	a5,a5,0x2
20104dae:	f4842703          	lw	a4,-184(s0)
20104db2:	97ba                	add	a5,a5,a4
20104db4:	fe042703          	lw	a4,-32(s0)
20104db8:	c398                	sw	a4,0(a5)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:93 (discriminator 2)
    for (uint32_t i = 0; i < n_output; i++) {
20104dba:	fe842783          	lw	a5,-24(s0)
20104dbe:	0785                	add	a5,a5,1
20104dc0:	fef42423          	sw	a5,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:93 (discriminator 1)
20104dc4:	fe842703          	lw	a4,-24(s0)
20104dc8:	f4c42783          	lw	a5,-180(s0)
20104dcc:	c0f768e3          	bltu	a4,a5,201049dc <processfclayer+0x2c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:185
        // printf("%d,", output[i]);
    }
}
20104dd0:	0001                	nop
20104dd2:	0001                	nop
20104dd4:	547a                	lw	s0,188(sp)
20104dd6:	6129                	add	sp,sp,192
20104dd8:	8082                	ret
	...

20104ddc <_global_impure_ptr>:
20104ddc:	0000 8000                                   ....

20104de0 <__metal_driver_vtable_sifive_fe310_g000_hfrosc>:
20104de0:	9422 2010 94a6 2010                         ".. ... 

20104de8 <__metal_driver_vtable_sifive_fe310_g000_hfxosc>:
20104de8:	9522 2010 9596 2010                         ".. ... 

20104df0 <__metal_driver_vtable_sifive_fe310_g000_prci>:
20104df0:	9cc0 2010 9cee 2010                         ... ... 

20104df8 <__metal_driver_vtable_fixed_clock>:
20104df8:	b2e2 2010 b302 2010                         ... ... 

Disassembly of section .text:

20104e00 <ReLUNorm>:
ReLUNorm():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:26
uint32_t ReLUNorm(int32_t *input, int8_t *output, uint32_t n_input) {
20104e00:	7139                	add	sp,sp,-64
20104e02:	de22                	sw	s0,60(sp)
20104e04:	0080                	add	s0,sp,64
20104e06:	fca42623          	sw	a0,-52(s0)
20104e0a:	fcb42423          	sw	a1,-56(s0)
20104e0e:	fcc42223          	sw	a2,-60(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:27
    int32_t max_val = -INT32_MAX;
20104e12:	800007b7          	lui	a5,0x80000
20104e16:	0785                	add	a5,a5,1 # 80000001 <metal_segment_itim_target_end+0x1>
20104e18:	fef42623          	sw	a5,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:28
    int32_t max_pos = 255;
20104e1c:	0ff00793          	li	a5,255
20104e20:	fef42423          	sw	a5,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:35
    for (uint32_t i = 0; i < n_input; i++) {
20104e24:	fc042e23          	sw	zero,-36(s0)
20104e28:	a835                	j	20104e64 <ReLUNorm+0x64>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:36
        if (input[i] > max_val) {
20104e2a:	fdc42783          	lw	a5,-36(s0)
20104e2e:	078a                	sll	a5,a5,0x2
20104e30:	fcc42703          	lw	a4,-52(s0)
20104e34:	97ba                	add	a5,a5,a4
20104e36:	439c                	lw	a5,0(a5)
20104e38:	fec42703          	lw	a4,-20(s0)
20104e3c:	00f75f63          	bge	a4,a5,20104e5a <ReLUNorm+0x5a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:37
            max_val = input[i];
20104e40:	fdc42783          	lw	a5,-36(s0)
20104e44:	078a                	sll	a5,a5,0x2
20104e46:	fcc42703          	lw	a4,-52(s0)
20104e4a:	97ba                	add	a5,a5,a4
20104e4c:	439c                	lw	a5,0(a5)
20104e4e:	fef42623          	sw	a5,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:38
            max_pos = i;
20104e52:	fdc42783          	lw	a5,-36(s0)
20104e56:	fef42423          	sw	a5,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:35 (discriminator 2)
    for (uint32_t i = 0; i < n_input; i++) {
20104e5a:	fdc42783          	lw	a5,-36(s0)
20104e5e:	0785                	add	a5,a5,1
20104e60:	fcf42e23          	sw	a5,-36(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:35 (discriminator 1)
20104e64:	fdc42703          	lw	a4,-36(s0)
20104e68:	fc442783          	lw	a5,-60(s0)
20104e6c:	faf76fe3          	bltu	a4,a5,20104e2a <ReLUNorm+0x2a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:44
    scale=max_val>>7;  // define max range, all bits above 7 will be shifted down
20104e70:	fec42783          	lw	a5,-20(s0)
20104e74:	879d                	sra	a5,a5,0x7
20104e76:	fef42223          	sw	a5,-28(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:45
    shift=0;
20104e7a:	fe042023          	sw	zero,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:47
    while (scale>0) {
20104e7e:	a819                	j	20104e94 <ReLUNorm+0x94>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:48
        shift++;
20104e80:	fe042783          	lw	a5,-32(s0)
20104e84:	0785                	add	a5,a5,1
20104e86:	fef42023          	sw	a5,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:49
        scale>>=1;
20104e8a:	fe442783          	lw	a5,-28(s0)
20104e8e:	8385                	srl	a5,a5,0x1
20104e90:	fef42223          	sw	a5,-28(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:47
    while (scale>0) {
20104e94:	fe442783          	lw	a5,-28(s0)
20104e98:	f7e5                	bnez	a5,20104e80 <ReLUNorm+0x80>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:54
    rounding   = (1 << (shift))>>1;
20104e9a:	fe042783          	lw	a5,-32(s0)
20104e9e:	4705                	li	a4,1
20104ea0:	00f717b3          	sll	a5,a4,a5
20104ea4:	8785                	sra	a5,a5,0x1
20104ea6:	fcf42a23          	sw	a5,-44(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:57
    for (uint32_t i = 0; i < n_input; i++) {
20104eaa:	fc042c23          	sw	zero,-40(s0)
20104eae:	a051                	j	20104f32 <ReLUNorm+0x132>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:59
        if (input[i] < 0) {
20104eb0:	fd842783          	lw	a5,-40(s0)
20104eb4:	078a                	sll	a5,a5,0x2
20104eb6:	fcc42703          	lw	a4,-52(s0)
20104eba:	97ba                	add	a5,a5,a4
20104ebc:	439c                	lw	a5,0(a5)
20104ebe:	0007da63          	bgez	a5,20104ed2 <ReLUNorm+0xd2>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:60
            output[i] = 0;
20104ec2:	fc842703          	lw	a4,-56(s0)
20104ec6:	fd842783          	lw	a5,-40(s0)
20104eca:	97ba                	add	a5,a5,a4
20104ecc:	00078023          	sb	zero,0(a5)
20104ed0:	a8a1                	j	20104f28 <ReLUNorm+0x128>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:62
            tmp=(input[i] + rounding) >> shift;
20104ed2:	fd842783          	lw	a5,-40(s0)
20104ed6:	078a                	sll	a5,a5,0x2
20104ed8:	fcc42703          	lw	a4,-52(s0)
20104edc:	97ba                	add	a5,a5,a4
20104ede:	4398                	lw	a4,0(a5)
20104ee0:	fd442783          	lw	a5,-44(s0)
20104ee4:	973e                	add	a4,a4,a5
20104ee6:	fe042783          	lw	a5,-32(s0)
20104eea:	40f757b3          	sra	a5,a4,a5
20104eee:	fcf42823          	sw	a5,-48(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:65
            if (tmp > 127) {
20104ef2:	fd042703          	lw	a4,-48(s0)
20104ef6:	07f00793          	li	a5,127
20104efa:	00e7dc63          	bge	a5,a4,20104f12 <ReLUNorm+0x112>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:66
                output[i] = 127;
20104efe:	fc842703          	lw	a4,-56(s0)
20104f02:	fd842783          	lw	a5,-40(s0)
20104f06:	97ba                	add	a5,a5,a4
20104f08:	07f00713          	li	a4,127
20104f0c:	00e78023          	sb	a4,0(a5)
20104f10:	a821                	j	20104f28 <ReLUNorm+0x128>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:68
            output[i] = tmp;
20104f12:	fc842703          	lw	a4,-56(s0)
20104f16:	fd842783          	lw	a5,-40(s0)
20104f1a:	97ba                	add	a5,a5,a4
20104f1c:	fd042703          	lw	a4,-48(s0)
20104f20:	0762                	sll	a4,a4,0x18
20104f22:	8761                	sra	a4,a4,0x18
20104f24:	00e78023          	sb	a4,0(a5)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:57 (discriminator 2)
    for (uint32_t i = 0; i < n_input; i++) {
20104f28:	fd842783          	lw	a5,-40(s0)
20104f2c:	0785                	add	a5,a5,1
20104f2e:	fcf42c23          	sw	a5,-40(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:57 (discriminator 1)
20104f32:	fd842703          	lw	a4,-40(s0)
20104f36:	fc442783          	lw	a5,-60(s0)
20104f3a:	f6f76be3          	bltu	a4,a5,20104eb0 <ReLUNorm+0xb0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:72
    return max_pos;
20104f3e:	fe842783          	lw	a5,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/BitNetMCU_inference.h:73
}
20104f42:	853e                	mv	a0,a5
20104f44:	5472                	lw	s0,60(sp)
20104f46:	6121                	add	sp,sp,64
20104f48:	8082                	ret

20104f4a <BitMnistInference>:
BitMnistInference():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:30
struct metal_cpu *cpu;
struct metal_interrupt *cpu_intr, *tmr_intr;
int tmr_id;
volatile uint32_t timer_isr_flag;

void BitMnistInference(const int8_t *input, const uint8_t label, const uint8_t sample) {
20104f4a:	7149                	add	sp,sp,-368
20104f4c:	16112623          	sw	ra,364(sp)
20104f50:	16812423          	sw	s0,360(sp)
20104f54:	1a80                	add	s0,sp,368
20104f56:	e8a42e23          	sw	a0,-356(s0)
20104f5a:	87ae                	mv	a5,a1
20104f5c:	8732                	mv	a4,a2
20104f5e:	e8f40da3          	sb	a5,-357(s0)
20104f62:	87ba                	mv	a5,a4
20104f64:	e8f40d23          	sb	a5,-358(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:37
    int8_t layer_in[MAX_N_ACTIVATIONS];
	int32_t prediction;
	uint32_t startticks, endticks;

//	startticks = SysTick->CNT;
    processfclayer((int8_t*)input, L1_weights, L1_bitperweight, L1_incoming_weights, L1_outgoing_weights, layer_out);
20104f68:	eec40793          	add	a5,s0,-276
20104f6c:	04000713          	li	a4,64
20104f70:	10000693          	li	a3,256
20104f74:	4611                	li	a2,4
20104f76:	201005b7          	lui	a1,0x20100
20104f7a:	34058593          	add	a1,a1,832 # 20100340 <L1_weights>
20104f7e:	e9c42503          	lw	a0,-356(s0)
20104f82:	343d                	jal	201049b0 <processfclayer>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:38
    ReLUNorm(layer_out, layer_in, L1_outgoing_weights);
20104f84:	eac40713          	add	a4,s0,-340
20104f88:	eec40793          	add	a5,s0,-276
20104f8c:	04000613          	li	a2,64
20104f90:	85ba                	mv	a1,a4
20104f92:	853e                	mv	a0,a5
20104f94:	35b5                	jal	20104e00 <ReLUNorm>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:40

    processfclayer(layer_in, L2_weights, L2_bitperweight, L2_incoming_weights,  L2_outgoing_weights, layer_out);
20104f96:	eec40793          	add	a5,s0,-276
20104f9a:	eac40513          	add	a0,s0,-340
20104f9e:	04000713          	li	a4,64
20104fa2:	04000693          	li	a3,64
20104fa6:	4611                	li	a2,4
20104fa8:	201025b7          	lui	a1,0x20102
20104fac:	34058593          	add	a1,a1,832 # 20102340 <L2_weights>
20104fb0:	3401                	jal	201049b0 <processfclayer>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:41
    ReLUNorm(layer_out, layer_in, L2_outgoing_weights);
20104fb2:	eac40713          	add	a4,s0,-340
20104fb6:	eec40793          	add	a5,s0,-276
20104fba:	04000613          	li	a2,64
20104fbe:	85ba                	mv	a1,a4
20104fc0:	853e                	mv	a0,a5
20104fc2:	3d3d                	jal	20104e00 <ReLUNorm>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:43

    processfclayer(layer_in, L3_weights, L3_bitperweight, L3_incoming_weights,  L3_outgoing_weights, layer_out);
20104fc4:	eec40793          	add	a5,s0,-276
20104fc8:	eac40513          	add	a0,s0,-340
20104fcc:	04000713          	li	a4,64
20104fd0:	04000693          	li	a3,64
20104fd4:	4611                	li	a2,4
20104fd6:	201035b7          	lui	a1,0x20103
20104fda:	b4058593          	add	a1,a1,-1216 # 20102b40 <L3_weights>
20104fde:	3ac9                	jal	201049b0 <processfclayer>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:44
    prediction=ReLUNorm(layer_out, layer_in, L3_outgoing_weights);
20104fe0:	eac40713          	add	a4,s0,-340
20104fe4:	eec40793          	add	a5,s0,-276
20104fe8:	04000613          	li	a2,64
20104fec:	85ba                	mv	a1,a4
20104fee:	853e                	mv	a0,a5
20104ff0:	3d01                	jal	20104e00 <ReLUNorm>
20104ff2:	87aa                	mv	a5,a0
20104ff4:	fef42623          	sw	a5,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:47

#if NUM_LAYERS == 4
    processfclayer(layer_in, L4_weights, L4_bitperweight, L4_incoming_weights,  L4_outgoing_weights, layer_out);
20104ff8:	eec40793          	add	a5,s0,-276
20104ffc:	eac40513          	add	a0,s0,-340
20105000:	4729                	li	a4,10
20105002:	04000693          	li	a3,64
20105006:	4611                	li	a2,4
20105008:	201035b7          	lui	a1,0x20103
2010500c:	34058593          	add	a1,a1,832 # 20103340 <L4_weights>
20105010:	3245                	jal	201049b0 <processfclayer>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:48
    prediction=ReLUNorm(layer_out, layer_in, L4_outgoing_weights);
20105012:	eac40713          	add	a4,s0,-340
20105016:	eec40793          	add	a5,s0,-276
2010501a:	4629                	li	a2,10
2010501c:	85ba                	mv	a1,a4
2010501e:	853e                	mv	a0,a5
20105020:	33c5                	jal	20104e00 <ReLUNorm>
20105022:	87aa                	mv	a5,a0
20105024:	fef42623          	sw	a5,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:53
#endif

//	endticks = SysTick->CNT;

	printf( "Inference of Sample %d\tPrediction: %ld\tLabel: %d\t\n", sample, prediction, label);
20105028:	e9a44783          	lbu	a5,-358(s0)
2010502c:	e9b44703          	lbu	a4,-357(s0)
20105030:	86ba                	mv	a3,a4
20105032:	fec42603          	lw	a2,-20(s0)
20105036:	85be                	mv	a1,a5
20105038:	201047b7          	lui	a5,0x20104
2010503c:	88078513          	add	a0,a5,-1920 # 20103880 <input_data_3+0x100>
20105040:	26d1                	jal	20105404 <iprintf>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:54
}
20105042:	0001                	nop
20105044:	16c12083          	lw	ra,364(sp)
20105048:	16812403          	lw	s0,360(sp)
2010504c:	6175                	add	sp,sp,368
2010504e:	8082                	ret

20105050 <display_banner>:
display_banner():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:57


void display_banner (void) {
20105050:	1141                	add	sp,sp,-16
20105052:	c606                	sw	ra,12(sp)
20105054:	c422                	sw	s0,8(sp)
20105056:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:59

    printf("\n");
20105058:	4529                	li	a0,10
2010505a:	26e5                	jal	20105442 <putchar>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:60
    printf("\n");
2010505c:	4529                	li	a0,10
2010505e:	26d5                	jal	20105442 <putchar>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:61
    printf("                  SIFIVE, INC.\n");
20105060:	201047b7          	lui	a5,0x20104
20105064:	8b478513          	add	a0,a5,-1868 # 201038b4 <input_data_3+0x134>
20105068:	23ad                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:62
    printf("\n");
2010506a:	4529                	li	a0,10
2010506c:	2ed9                	jal	20105442 <putchar>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:63
    printf("           5555555555555555555555555\n");
2010506e:	201047b7          	lui	a5,0x20104
20105072:	8d478513          	add	a0,a5,-1836 # 201038d4 <input_data_3+0x154>
20105076:	2bb1                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:64
    printf("          5555                   5555\n");
20105078:	201047b7          	lui	a5,0x20104
2010507c:	8fc78513          	add	a0,a5,-1796 # 201038fc <input_data_3+0x17c>
20105080:	2b89                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:65
    printf("         5555                     5555\n");
20105082:	201047b7          	lui	a5,0x20104
20105086:	92478513          	add	a0,a5,-1756 # 20103924 <input_data_3+0x1a4>
2010508a:	23a1                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:66
    printf("        5555                       5555\n");
2010508c:	201047b7          	lui	a5,0x20104
20105090:	94c78513          	add	a0,a5,-1716 # 2010394c <input_data_3+0x1cc>
20105094:	2b3d                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:67
    printf("       5555       5555555555555555555555\n");
20105096:	201047b7          	lui	a5,0x20104
2010509a:	97478513          	add	a0,a5,-1676 # 20103974 <input_data_3+0x1f4>
2010509e:	2b15                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:68
    printf("      5555       555555555555555555555555\n");
201050a0:	201047b7          	lui	a5,0x20104
201050a4:	9a078513          	add	a0,a5,-1632 # 201039a0 <input_data_3+0x220>
201050a8:	232d                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:69
    printf("     5555                             5555\n");
201050aa:	201047b7          	lui	a5,0x20104
201050ae:	9cc78513          	add	a0,a5,-1588 # 201039cc <input_data_3+0x24c>
201050b2:	2305                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:70
    printf("    5555                               5555\n");
201050b4:	201047b7          	lui	a5,0x20104
201050b8:	9f878513          	add	a0,a5,-1544 # 201039f8 <input_data_3+0x278>
201050bc:	2b19                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:71
    printf("   5555                                 5555\n");
201050be:	201047b7          	lui	a5,0x20104
201050c2:	a2478513          	add	a0,a5,-1500 # 20103a24 <input_data_3+0x2a4>
201050c6:	2331                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:72
    printf("  5555555555555555555555555555          55555\n");
201050c8:	201047b7          	lui	a5,0x20104
201050cc:	a5478513          	add	a0,a5,-1452 # 20103a54 <input_data_3+0x2d4>
201050d0:	2309                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:73
    printf("   55555           555555555           55555\n");
201050d2:	201047b7          	lui	a5,0x20104
201050d6:	a8478513          	add	a0,a5,-1404 # 20103a84 <input_data_3+0x304>
201050da:	29e5                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:74
    printf("     55555           55555           55555\n");
201050dc:	201047b7          	lui	a5,0x20104
201050e0:	ab478513          	add	a0,a5,-1356 # 20103ab4 <input_data_3+0x334>
201050e4:	21fd                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:75
    printf("       55555           5           55555\n");
201050e6:	201047b7          	lui	a5,0x20104
201050ea:	ae078513          	add	a0,a5,-1312 # 20103ae0 <input_data_3+0x360>
201050ee:	21d5                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:76
    printf("         55555                   55555\n");
201050f0:	201047b7          	lui	a5,0x20104
201050f4:	b0c78513          	add	a0,a5,-1268 # 20103b0c <input_data_3+0x38c>
201050f8:	29e9                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:77
    printf("           55555               55555\n");
201050fa:	201047b7          	lui	a5,0x20104
201050fe:	b3478513          	add	a0,a5,-1228 # 20103b34 <input_data_3+0x3b4>
20105102:	29c1                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:78
    printf("             55555           55555\n");
20105104:	201047b7          	lui	a5,0x20104
20105108:	b5c78513          	add	a0,a5,-1188 # 20103b5c <input_data_3+0x3dc>
2010510c:	21d9                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:79
    printf("               55555       55555\n");
2010510e:	201047b7          	lui	a5,0x20104
20105112:	b8078513          	add	a0,a5,-1152 # 20103b80 <input_data_3+0x400>
20105116:	2975                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:80
    printf("                 55555   55555\n");
20105118:	201047b7          	lui	a5,0x20104
2010511c:	ba478513          	add	a0,a5,-1116 # 20103ba4 <input_data_3+0x424>
20105120:	294d                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:81
    printf("                   555555555\n");
20105122:	201047b7          	lui	a5,0x20104
20105126:	bc478513          	add	a0,a5,-1084 # 20103bc4 <input_data_3+0x444>
2010512a:	2165                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:82
    printf("                     55555\n");
2010512c:	201047b7          	lui	a5,0x20104
20105130:	be478513          	add	a0,a5,-1052 # 20103be4 <input_data_3+0x464>
20105134:	2979                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:83
    printf("                       5\n");
20105136:	201047b7          	lui	a5,0x20104
2010513a:	c0078513          	add	a0,a5,-1024 # 20103c00 <input_data_3+0x480>
2010513e:	2951                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:84
    printf("\n");
20105140:	4529                	li	a0,10
20105142:	2601                	jal	20105442 <putchar>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:86

    printf("\n");
20105144:	4529                	li	a0,10
20105146:	2cf5                	jal	20105442 <putchar>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:87
    printf("               Welcome to SiFive!\n");
20105148:	201047b7          	lui	a5,0x20104
2010514c:	c1c78513          	add	a0,a5,-996 # 20103c1c <input_data_3+0x49c>
20105150:	2149                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:89

}
20105152:	0001                	nop
20105154:	40b2                	lw	ra,12(sp)
20105156:	4422                	lw	s0,8(sp)
20105158:	0141                	add	sp,sp,16
2010515a:	8082                	ret

2010515c <timer_isr>:
timer_isr():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:91

void timer_isr (int id, void *data) {
2010515c:	1101                	add	sp,sp,-32
2010515e:	ce06                	sw	ra,28(sp)
20105160:	cc22                	sw	s0,24(sp)
20105162:	1000                	add	s0,sp,32
20105164:	fea42623          	sw	a0,-20(s0)
20105168:	feb42423          	sw	a1,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:94

    // Disable Timer interrupt
    metal_interrupt_disable(tmr_intr, tmr_id);
2010516c:	8d81a703          	lw	a4,-1832(gp) # 80000b58 <tmr_intr>
20105170:	8e41a783          	lw	a5,-1820(gp) # 80000b64 <tmr_id>
20105174:	85be                	mv	a1,a5
20105176:	853a                	mv	a0,a4
20105178:	728010ef          	jal	201068a0 <metal_interrupt_disable>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:97

    // Flag showing we hit timer isr
    timer_isr_flag = 1;
2010517c:	4705                	li	a4,1
2010517e:	8ee1a023          	sw	a4,-1824(gp) # 80000b60 <timer_isr_flag>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:98
}
20105182:	0001                	nop
20105184:	40f2                	lw	ra,28(sp)
20105186:	4462                	lw	s0,24(sp)
20105188:	6105                	add	sp,sp,32
2010518a:	8082                	ret

2010518c <wait_for_timer>:
wait_for_timer():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:100

void wait_for_timer(struct metal_led *which_led) {
2010518c:	1101                	add	sp,sp,-32
2010518e:	ce06                	sw	ra,28(sp)
20105190:	cc22                	sw	s0,24(sp)
20105192:	ca26                	sw	s1,20(sp)
20105194:	1000                	add	s0,sp,32
20105196:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:103

    // clear global timer isr flag
    timer_isr_flag = 0;
2010519a:	8e01a023          	sw	zero,-1824(gp) # 80000b60 <timer_isr_flag>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:106

    // Turn on desired LED
    metal_led_on(which_led);
2010519e:	fec42503          	lw	a0,-20(s0)
201051a2:	750010ef          	jal	201068f2 <metal_led_on>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:109

    // Set timer
    metal_cpu_set_mtimecmp(cpu, metal_cpu_get_mtime(cpu) + RTC_FREQ);
201051a6:	8d41a483          	lw	s1,-1836(gp) # 80000b54 <cpu>
201051aa:	8d41a783          	lw	a5,-1836(gp) # 80000b54 <cpu>
201051ae:	853e                	mv	a0,a5
201051b0:	546010ef          	jal	201066f6 <metal_cpu_get_mtime>
201051b4:	862a                	mv	a2,a0
201051b6:	86ae                	mv	a3,a1
201051b8:	6521                	lui	a0,0x8
201051ba:	4581                	li	a1,0
201051bc:	00a60733          	add	a4,a2,a0
201051c0:	883a                	mv	a6,a4
201051c2:	00c83833          	sltu	a6,a6,a2
201051c6:	00b687b3          	add	a5,a3,a1
201051ca:	00f806b3          	add	a3,a6,a5
201051ce:	87b6                	mv	a5,a3
201051d0:	85ba                	mv	a1,a4
201051d2:	863e                	mv	a2,a5
201051d4:	8526                	mv	a0,s1
201051d6:	54a010ef          	jal	20106720 <metal_cpu_set_mtimecmp>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:112

    // Enable Timer interrupt
    metal_interrupt_enable(tmr_intr, tmr_id);
201051da:	8d81a703          	lw	a4,-1832(gp) # 80000b58 <tmr_intr>
201051de:	8e41a783          	lw	a5,-1820(gp) # 80000b64 <tmr_id>
201051e2:	85be                	mv	a1,a5
201051e4:	853a                	mv	a0,a4
201051e6:	68c010ef          	jal	20106872 <metal_interrupt_enable>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:115

    // wait till timer triggers and isr is hit
    while (timer_isr_flag == 0){};
201051ea:	0001                	nop
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:115 (discriminator 1)
201051ec:	8e01a783          	lw	a5,-1824(gp) # 80000b60 <timer_isr_flag>
201051f0:	dff5                	beqz	a5,201051ec <wait_for_timer+0x60>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:117

    timer_isr_flag = 0;
201051f2:	8e01a023          	sw	zero,-1824(gp) # 80000b60 <timer_isr_flag>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:120

    // Turn off this LED
    metal_led_off(which_led);
201051f6:	fec42503          	lw	a0,-20(s0)
201051fa:	71c010ef          	jal	20106916 <metal_led_off>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:121
}
201051fe:	0001                	nop
20105200:	40f2                	lw	ra,28(sp)
20105202:	4462                	lw	s0,24(sp)
20105204:	44d2                	lw	s1,20(sp)
20105206:	6105                	add	sp,sp,32
20105208:	8082                	ret

2010520a <main>:
main():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:124

int main (void)
{
2010520a:	1101                	add	sp,sp,-32
2010520c:	ce06                	sw	ra,28(sp)
2010520e:	cc22                	sw	s0,24(sp)
20105210:	1000                	add	s0,sp,32
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:129
    int rc;
    struct metal_led *led0_red, *led0_green, *led0_blue;

    // This demo will toggle LEDs colors so we define them here
    led0_red = metal_led_get_rgb("LD0", "red");
20105212:	201047b7          	lui	a5,0x20104
20105216:	c4078593          	add	a1,a5,-960 # 20103c40 <input_data_3+0x4c0>
2010521a:	201047b7          	lui	a5,0x20104
2010521e:	c4478513          	add	a0,a5,-956 # 20103c44 <input_data_3+0x4c4>
20105222:	718010ef          	jal	2010693a <metal_led_get_rgb>
20105226:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:130
    led0_green = metal_led_get_rgb("LD0", "green");
2010522a:	201047b7          	lui	a5,0x20104
2010522e:	c4878593          	add	a1,a5,-952 # 20103c48 <input_data_3+0x4c8>
20105232:	201047b7          	lui	a5,0x20104
20105236:	c4478513          	add	a0,a5,-956 # 20103c44 <input_data_3+0x4c4>
2010523a:	700010ef          	jal	2010693a <metal_led_get_rgb>
2010523e:	fea42423          	sw	a0,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:131
    led0_blue = metal_led_get_rgb("LD0", "blue");
20105242:	201047b7          	lui	a5,0x20104
20105246:	c5078593          	add	a1,a5,-944 # 20103c50 <input_data_3+0x4d0>
2010524a:	201047b7          	lui	a5,0x20104
2010524e:	c4478513          	add	a0,a5,-956 # 20103c44 <input_data_3+0x4c4>
20105252:	6e8010ef          	jal	2010693a <metal_led_get_rgb>
20105256:	fea42223          	sw	a0,-28(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:132
    if ((led0_red == NULL) || (led0_green == NULL) || (led0_blue == NULL)) {
2010525a:	fec42783          	lw	a5,-20(s0)
2010525e:	c799                	beqz	a5,2010526c <main+0x62>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:132 (discriminator 1)
20105260:	fe842783          	lw	a5,-24(s0)
20105264:	c781                	beqz	a5,2010526c <main+0x62>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:132 (discriminator 2)
20105266:	fe442783          	lw	a5,-28(s0)
2010526a:	eb81                	bnez	a5,2010527a <main+0x70>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:133
        printf("At least one of LEDs is null.\n");
2010526c:	201047b7          	lui	a5,0x20104
20105270:	c5878513          	add	a0,a5,-936 # 20103c58 <input_data_3+0x4d8>
20105274:	2eb9                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:134
        return 1;
20105276:	4785                	li	a5,1
20105278:	a249                	j	201053fa <main+0x1f0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:138
    }

    // Enable each LED
    metal_led_enable(led0_red);
2010527a:	fec42503          	lw	a0,-20(s0)
2010527e:	650010ef          	jal	201068ce <metal_led_enable>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:139
    metal_led_enable(led0_green);
20105282:	fe842503          	lw	a0,-24(s0)
20105286:	648010ef          	jal	201068ce <metal_led_enable>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:140
    metal_led_enable(led0_blue);
2010528a:	fe442503          	lw	a0,-28(s0)
2010528e:	640010ef          	jal	201068ce <metal_led_enable>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:143

    // All Off
    metal_led_off(led0_red);
20105292:	fec42503          	lw	a0,-20(s0)
20105296:	680010ef          	jal	20106916 <metal_led_off>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:144
    metal_led_off(led0_green);
2010529a:	fe842503          	lw	a0,-24(s0)
2010529e:	678010ef          	jal	20106916 <metal_led_off>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:145
    metal_led_off(led0_blue);
201052a2:	fe442503          	lw	a0,-28(s0)
201052a6:	670010ef          	jal	20106916 <metal_led_off>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:148

    // Lets get the CPU and its interrupt
    cpu = metal_cpu_get(metal_cpu_get_current_hartid());
201052aa:	54c010ef          	jal	201067f6 <metal_cpu_get_current_hartid>
201052ae:	87aa                	mv	a5,a0
201052b0:	853e                	mv	a0,a5
201052b2:	516010ef          	jal	201067c8 <metal_cpu_get>
201052b6:	872a                	mv	a4,a0
201052b8:	8ce1aa23          	sw	a4,-1836(gp) # 80000b54 <cpu>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:149
    if (cpu == NULL) {
201052bc:	8d41a783          	lw	a5,-1836(gp) # 80000b54 <cpu>
201052c0:	eb81                	bnez	a5,201052d0 <main+0xc6>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:150
        printf("CPU null.\n");
201052c2:	201047b7          	lui	a5,0x20104
201052c6:	c7878513          	add	a0,a5,-904 # 20103c78 <input_data_3+0x4f8>
201052ca:	2621                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:151
        return 2;
201052cc:	4789                	li	a5,2
201052ce:	a235                	j	201053fa <main+0x1f0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:153
    }
    cpu_intr = metal_cpu_interrupt_controller(cpu);
201052d0:	8d41a783          	lw	a5,-1836(gp) # 80000b54 <cpu>
201052d4:	853e                	mv	a0,a5
201052d6:	4cc010ef          	jal	201067a2 <metal_cpu_interrupt_controller>
201052da:	872a                	mv	a4,a0
201052dc:	8ce1ae23          	sw	a4,-1828(gp) # 80000b5c <cpu_intr>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:154
    if (cpu_intr == NULL) {
201052e0:	8dc1a783          	lw	a5,-1828(gp) # 80000b5c <cpu_intr>
201052e4:	eb81                	bnez	a5,201052f4 <main+0xea>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:155
        printf("CPU interrupt controller is null.\n");
201052e6:	201047b7          	lui	a5,0x20104
201052ea:	c8478513          	add	a0,a5,-892 # 20103c84 <input_data_3+0x504>
201052ee:	24d5                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:156
        return 3;
201052f0:	478d                	li	a5,3
201052f2:	a221                	j	201053fa <main+0x1f0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:158
    }
    metal_interrupt_init(cpu_intr);
201052f4:	8dc1a783          	lw	a5,-1828(gp) # 80000b5c <cpu_intr>
201052f8:	853e                	mv	a0,a5
201052fa:	516010ef          	jal	20106810 <metal_interrupt_init>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:161

    // display welcome banner
    display_banner();
201052fe:	3b89                	jal	20105050 <display_banner>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:163

	printf("Starting MNIST inference...\n");
20105300:	201047b7          	lui	a5,0x20104
20105304:	ca878513          	add	a0,a5,-856 # 20103ca8 <input_data_3+0x528>
20105308:	24e9                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:164
	BitMnistInference(input_data_0, label_0,1);
2010530a:	479d                	li	a5,7
2010530c:	4605                	li	a2,1
2010530e:	85be                	mv	a1,a5
20105310:	201037b7          	lui	a5,0x20103
20105314:	48078513          	add	a0,a5,1152 # 20103480 <input_data_0>
20105318:	390d                	jal	20104f4a <BitMnistInference>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:165
	BitMnistInference(input_data_1, label_1,2);
2010531a:	4785                	li	a5,1
2010531c:	4609                	li	a2,2
2010531e:	85be                	mv	a1,a5
20105320:	201037b7          	lui	a5,0x20103
20105324:	58078513          	add	a0,a5,1408 # 20103580 <input_data_1>
20105328:	310d                	jal	20104f4a <BitMnistInference>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:166
	BitMnistInference(input_data_2, label_2,3);
2010532a:	47a5                	li	a5,9
2010532c:	460d                	li	a2,3
2010532e:	85be                	mv	a1,a5
20105330:	201037b7          	lui	a5,0x20103
20105334:	68078513          	add	a0,a5,1664 # 20103680 <input_data_2>
20105338:	3909                	jal	20104f4a <BitMnistInference>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:167
	BitMnistInference(input_data_3, label_3,4);
2010533a:	4791                	li	a5,4
2010533c:	4611                	li	a2,4
2010533e:	85be                	mv	a1,a5
20105340:	201037b7          	lui	a5,0x20103
20105344:	78078513          	add	a0,a5,1920 # 20103780 <input_data_3>
20105348:	3109                	jal	20104f4a <BitMnistInference>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:170

    // Setup Timer and its interrupt so we can toggle LEDs on 1s cadence
    tmr_intr = metal_cpu_timer_interrupt_controller(cpu);
2010534a:	8d41a783          	lw	a5,-1836(gp) # 80000b54 <cpu>
2010534e:	853e                	mv	a0,a5
20105350:	406010ef          	jal	20106756 <metal_cpu_timer_interrupt_controller>
20105354:	872a                	mv	a4,a0
20105356:	8ce1ac23          	sw	a4,-1832(gp) # 80000b58 <tmr_intr>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:171
    if (tmr_intr == NULL) {
2010535a:	8d81a783          	lw	a5,-1832(gp) # 80000b58 <tmr_intr>
2010535e:	eb81                	bnez	a5,2010536e <main+0x164>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:172
        printf("TIMER interrupt controller is  null.\n");
20105360:	201047b7          	lui	a5,0x20104
20105364:	cc478513          	add	a0,a5,-828 # 20103cc4 <input_data_3+0x544>
20105368:	24ad                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:173
        return 4;
2010536a:	4791                	li	a5,4
2010536c:	a079                	j	201053fa <main+0x1f0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:175
    }
    metal_interrupt_init(tmr_intr);
2010536e:	8d81a783          	lw	a5,-1832(gp) # 80000b58 <tmr_intr>
20105372:	853e                	mv	a0,a5
20105374:	49c010ef          	jal	20106810 <metal_interrupt_init>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:176
    tmr_id = metal_cpu_timer_get_interrupt_id(cpu);
20105378:	8d41a783          	lw	a5,-1836(gp) # 80000b54 <cpu>
2010537c:	853e                	mv	a0,a5
2010537e:	3fe010ef          	jal	2010677c <metal_cpu_timer_get_interrupt_id>
20105382:	872a                	mv	a4,a0
20105384:	8ee1a223          	sw	a4,-1820(gp) # 80000b64 <tmr_id>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:177
    rc = metal_interrupt_register_handler(tmr_intr, tmr_id, timer_isr, cpu);
20105388:	8d81a703          	lw	a4,-1832(gp) # 80000b58 <tmr_intr>
2010538c:	8e41a583          	lw	a1,-1820(gp) # 80000b64 <tmr_id>
20105390:	8d41a783          	lw	a5,-1836(gp) # 80000b54 <cpu>
20105394:	86be                	mv	a3,a5
20105396:	201057b7          	lui	a5,0x20105
2010539a:	15c78613          	add	a2,a5,348 # 2010515c <timer_isr>
2010539e:	853a                	mv	a0,a4
201053a0:	494010ef          	jal	20106834 <metal_interrupt_register_handler>
201053a4:	fea42023          	sw	a0,-32(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:178
    if (rc < 0) {
201053a8:	fe042783          	lw	a5,-32(s0)
201053ac:	0007dc63          	bgez	a5,201053c4 <main+0x1ba>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:179
        printf("TIMER interrupt handler registration failed\n");
201053b0:	201047b7          	lui	a5,0x20104
201053b4:	cec78513          	add	a0,a5,-788 # 20103cec <input_data_3+0x56c>
201053b8:	2c29                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:180
        return (rc * -1);
201053ba:	fe042783          	lw	a5,-32(s0)
201053be:	40f007b3          	neg	a5,a5
201053c2:	a825                	j	201053fa <main+0x1f0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:184
    }

    // Lastly CPU interrupt
    if (metal_interrupt_enable(cpu_intr, 0) == -1) {
201053c4:	8dc1a783          	lw	a5,-1828(gp) # 80000b5c <cpu_intr>
201053c8:	4581                	li	a1,0
201053ca:	853e                	mv	a0,a5
201053cc:	4a6010ef          	jal	20106872 <metal_interrupt_enable>
201053d0:	872a                	mv	a4,a0
201053d2:	57fd                	li	a5,-1
201053d4:	00f71963          	bne	a4,a5,201053e6 <main+0x1dc>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:185
        printf("CPU interrupt enable failed\n");
201053d8:	201047b7          	lui	a5,0x20104
201053dc:	d1878513          	add	a0,a5,-744 # 20103d18 <input_data_3+0x598>
201053e0:	2acd                	jal	201055d2 <puts>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:186
        return 6;
201053e2:	4799                	li	a5,6
201053e4:	a819                	j	201053fa <main+0x1f0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:193 (discriminator 1)

    // Red -> Green -> Blue, repeat
    while (1) {

        // Turn on RED
        wait_for_timer(led0_red);
201053e6:	fec42503          	lw	a0,-20(s0)
201053ea:	334d                	jal	2010518c <wait_for_timer>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:196 (discriminator 1)

        // Turn on Green
        wait_for_timer(led0_green);
201053ec:	fe842503          	lw	a0,-24(s0)
201053f0:	3b71                	jal	2010518c <wait_for_timer>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:199 (discriminator 1)

        // Turn on Blue
        wait_for_timer(led0_blue);
201053f2:	fe442503          	lw	a0,-28(s0)
201053f6:	3b59                	jal	2010518c <wait_for_timer>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:193 (discriminator 1)
        wait_for_timer(led0_red);
201053f8:	b7fd                	j	201053e6 <main+0x1dc>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\src/SiFive_BitNET_MCU.c:205

    }

    // return
    return 0;
}
201053fa:	853e                	mv	a0,a5
201053fc:	40f2                	lw	ra,28(sp)
201053fe:	4462                	lw	s0,24(sp)
20105400:	6105                	add	sp,sp,32
20105402:	8082                	ret

20105404 <iprintf>:
printf():
20105404:	715d                	add	sp,sp,-80
20105406:	d422                	sw	s0,40(sp)
20105408:	d606                	sw	ra,44(sp)
2010540a:	842a                	mv	s0,a0
2010540c:	da2e                	sw	a1,52(sp)
2010540e:	dc32                	sw	a2,56(sp)
20105410:	de36                	sw	a3,60(sp)
20105412:	c0ba                	sw	a4,64(sp)
20105414:	c2be                	sw	a5,68(sp)
20105416:	c4c2                	sw	a6,72(sp)
20105418:	c6c6                	sw	a7,76(sp)
2010541a:	5fefb517          	auipc	a0,0x5fefb
2010541e:	66652503          	lw	a0,1638(a0) # 80000a80 <_impure_ptr>
20105422:	c511                	beqz	a0,2010542e <iprintf+0x2a>
20105424:	4d1c                	lw	a5,24(a0)
20105426:	e781                	bnez	a5,2010542e <iprintf+0x2a>
20105428:	c62a                	sw	a0,12(sp)
2010542a:	23d1                	jal	201059ee <__sinit>
2010542c:	4532                	lw	a0,12(sp)
2010542e:	450c                	lw	a1,8(a0)
20105430:	1854                	add	a3,sp,52
20105432:	8622                	mv	a2,s0
20105434:	ce36                	sw	a3,28(sp)
20105436:	2a9000ef          	jal	20105ede <_vfiprintf_r>
2010543a:	50b2                	lw	ra,44(sp)
2010543c:	5422                	lw	s0,40(sp)
2010543e:	6161                	add	sp,sp,80
20105440:	8082                	ret

20105442 <putchar>:
putchar():
20105442:	85aa                	mv	a1,a0
20105444:	5fefb517          	auipc	a0,0x5fefb
20105448:	63c52503          	lw	a0,1596(a0) # 80000a80 <_impure_ptr>
2010544c:	cd11                	beqz	a0,20105468 <putchar+0x26>
2010544e:	4d1c                	lw	a5,24(a0)
20105450:	ef81                	bnez	a5,20105468 <putchar+0x26>
20105452:	1101                	add	sp,sp,-32
20105454:	ce06                	sw	ra,28(sp)
20105456:	c62e                	sw	a1,12(sp)
20105458:	c42a                	sw	a0,8(sp)
2010545a:	2b51                	jal	201059ee <__sinit>
2010545c:	4522                	lw	a0,8(sp)
2010545e:	45b2                	lw	a1,12(sp)
20105460:	40f2                	lw	ra,28(sp)
20105462:	4510                	lw	a2,8(a0)
20105464:	6105                	add	sp,sp,32
20105466:	a019                	j	2010546c <_putc_r>
20105468:	4510                	lw	a2,8(a0)
2010546a:	bff5                	j	20105466 <putchar+0x24>

2010546c <_putc_r>:
_putc_r():
2010546c:	1101                	add	sp,sp,-32
2010546e:	cc22                	sw	s0,24(sp)
20105470:	ce06                	sw	ra,28(sp)
20105472:	842a                	mv	s0,a0
20105474:	c901                	beqz	a0,20105484 <_putc_r+0x18>
20105476:	4d1c                	lw	a5,24(a0)
20105478:	e791                	bnez	a5,20105484 <_putc_r+0x18>
2010547a:	c632                	sw	a2,12(sp)
2010547c:	c42e                	sw	a1,8(sp)
2010547e:	2b85                	jal	201059ee <__sinit>
20105480:	4632                	lw	a2,12(sp)
20105482:	45a2                	lw	a1,8(sp)
20105484:	fffff797          	auipc	a5,0xfffff
20105488:	8f078793          	add	a5,a5,-1808 # 20103d74 <__sf_fake_stdin>
2010548c:	02f61563          	bne	a2,a5,201054b6 <_putc_r+0x4a>
20105490:	4050                	lw	a2,4(s0)
20105492:	461c                	lw	a5,8(a2)
20105494:	17fd                	add	a5,a5,-1
20105496:	c61c                	sw	a5,8(a2)
20105498:	0207df63          	bgez	a5,201054d6 <_putc_r+0x6a>
2010549c:	4e18                	lw	a4,24(a2)
2010549e:	00e7c763          	blt	a5,a4,201054ac <_putc_r+0x40>
201054a2:	0ff5f793          	zext.b	a5,a1
201054a6:	4729                	li	a4,10
201054a8:	02e79763          	bne	a5,a4,201054d6 <_putc_r+0x6a>
201054ac:	8522                	mv	a0,s0
201054ae:	4462                	lw	s0,24(sp)
201054b0:	40f2                	lw	ra,28(sp)
201054b2:	6105                	add	sp,sp,32
201054b4:	a22d                	j	201055de <__swbuf_r>
201054b6:	fffff797          	auipc	a5,0xfffff
201054ba:	89e78793          	add	a5,a5,-1890 # 20103d54 <__sf_fake_stdout>
201054be:	00f61463          	bne	a2,a5,201054c6 <_putc_r+0x5a>
201054c2:	4410                	lw	a2,8(s0)
201054c4:	b7f9                	j	20105492 <_putc_r+0x26>
201054c6:	fffff797          	auipc	a5,0xfffff
201054ca:	86e78793          	add	a5,a5,-1938 # 20103d34 <__sf_fake_stderr>
201054ce:	fcf612e3          	bne	a2,a5,20105492 <_putc_r+0x26>
201054d2:	4450                	lw	a2,12(s0)
201054d4:	bf7d                	j	20105492 <_putc_r+0x26>
201054d6:	421c                	lw	a5,0(a2)
201054d8:	0ff5f513          	zext.b	a0,a1
201054dc:	00178713          	add	a4,a5,1
201054e0:	c218                	sw	a4,0(a2)
201054e2:	00b78023          	sb	a1,0(a5)
201054e6:	40f2                	lw	ra,28(sp)
201054e8:	4462                	lw	s0,24(sp)
201054ea:	6105                	add	sp,sp,32
201054ec:	8082                	ret

201054ee <_puts_r>:
_puts_r():
201054ee:	1101                	add	sp,sp,-32
201054f0:	ca26                	sw	s1,20(sp)
201054f2:	ce06                	sw	ra,28(sp)
201054f4:	cc22                	sw	s0,24(sp)
201054f6:	c84a                	sw	s2,16(sp)
201054f8:	c64e                	sw	s3,12(sp)
201054fa:	c452                	sw	s4,8(sp)
201054fc:	84aa                	mv	s1,a0
201054fe:	e119                	bnez	a0,20105504 <_puts_r+0x16>
20105500:	451c                	lw	a5,8(a0)
20105502:	9002                	ebreak
20105504:	4d1c                	lw	a5,24(a0)
20105506:	892e                	mv	s2,a1
20105508:	ef9d                	bnez	a5,20105546 <_puts_r+0x58>
2010550a:	21d5                	jal	201059ee <__sinit>
2010550c:	4c9c                	lw	a5,24(s1)
2010550e:	4480                	lw	s0,8(s1)
20105510:	cf8d                	beqz	a5,2010554a <_puts_r+0x5c>
20105512:	fffff797          	auipc	a5,0xfffff
20105516:	86278793          	add	a5,a5,-1950 # 20103d74 <__sf_fake_stdin>
2010551a:	02f41b63          	bne	s0,a5,20105550 <_puts_r+0x62>
2010551e:	40c0                	lw	s0,4(s1)
20105520:	00c45783          	lhu	a5,12(s0)
20105524:	8ba1                	and	a5,a5,8
20105526:	c399                	beqz	a5,2010552c <_puts_r+0x3e>
20105528:	481c                	lw	a5,16(s0)
2010552a:	ebc9                	bnez	a5,201055bc <_puts_r+0xce>
2010552c:	85a2                	mv	a1,s0
2010552e:	8526                	mv	a0,s1
20105530:	22bd                	jal	2010569e <__swsetup_r>
20105532:	c549                	beqz	a0,201055bc <_puts_r+0xce>
20105534:	557d                	li	a0,-1
20105536:	40f2                	lw	ra,28(sp)
20105538:	4462                	lw	s0,24(sp)
2010553a:	44d2                	lw	s1,20(sp)
2010553c:	4942                	lw	s2,16(sp)
2010553e:	49b2                	lw	s3,12(sp)
20105540:	4a22                	lw	s4,8(sp)
20105542:	6105                	add	sp,sp,32
20105544:	8082                	ret
20105546:	4500                	lw	s0,8(a0)
20105548:	b7e9                	j	20105512 <_puts_r+0x24>
2010554a:	8526                	mv	a0,s1
2010554c:	214d                	jal	201059ee <__sinit>
2010554e:	b7d1                	j	20105512 <_puts_r+0x24>
20105550:	fffff797          	auipc	a5,0xfffff
20105554:	80478793          	add	a5,a5,-2044 # 20103d54 <__sf_fake_stdout>
20105558:	00f41463          	bne	s0,a5,20105560 <_puts_r+0x72>
2010555c:	4480                	lw	s0,8(s1)
2010555e:	b7c9                	j	20105520 <_puts_r+0x32>
20105560:	ffffe797          	auipc	a5,0xffffe
20105564:	7d478793          	add	a5,a5,2004 # 20103d34 <__sf_fake_stderr>
20105568:	faf41ce3          	bne	s0,a5,20105520 <_puts_r+0x32>
2010556c:	44c0                	lw	s0,12(s1)
2010556e:	bf4d                	j	20105520 <_puts_r+0x32>
20105570:	c41c                	sw	a5,8(s0)
20105572:	0905                	add	s2,s2,1
20105574:	0207c963          	bltz	a5,201055a6 <_puts_r+0xb8>
20105578:	401c                	lw	a5,0(s0)
2010557a:	00178713          	add	a4,a5,1
2010557e:	c018                	sw	a4,0(s0)
20105580:	00b78023          	sb	a1,0(a5)
20105584:	441c                	lw	a5,8(s0)
20105586:	00094583          	lbu	a1,0(s2)
2010558a:	17fd                	add	a5,a5,-1
2010558c:	f1f5                	bnez	a1,20105570 <_puts_r+0x82>
2010558e:	c41c                	sw	a5,8(s0)
20105590:	0207d963          	bgez	a5,201055c2 <_puts_r+0xd4>
20105594:	8622                	mv	a2,s0
20105596:	45a9                	li	a1,10
20105598:	8526                	mv	a0,s1
2010559a:	2091                	jal	201055de <__swbuf_r>
2010559c:	57fd                	li	a5,-1
2010559e:	f8f50be3          	beq	a0,a5,20105534 <_puts_r+0x46>
201055a2:	4529                	li	a0,10
201055a4:	bf49                	j	20105536 <_puts_r+0x48>
201055a6:	4c18                	lw	a4,24(s0)
201055a8:	00e7c463          	blt	a5,a4,201055b0 <_puts_r+0xc2>
201055ac:	fd4596e3          	bne	a1,s4,20105578 <_puts_r+0x8a>
201055b0:	8622                	mv	a2,s0
201055b2:	8526                	mv	a0,s1
201055b4:	202d                	jal	201055de <__swbuf_r>
201055b6:	fd3517e3          	bne	a0,s3,20105584 <_puts_r+0x96>
201055ba:	bfad                	j	20105534 <_puts_r+0x46>
201055bc:	59fd                	li	s3,-1
201055be:	4a29                	li	s4,10
201055c0:	b7d1                	j	20105584 <_puts_r+0x96>
201055c2:	401c                	lw	a5,0(s0)
201055c4:	00178713          	add	a4,a5,1
201055c8:	c018                	sw	a4,0(s0)
201055ca:	4729                	li	a4,10
201055cc:	00e78023          	sb	a4,0(a5)
201055d0:	bfc9                	j	201055a2 <_puts_r+0xb4>

201055d2 <puts>:
puts():
201055d2:	85aa                	mv	a1,a0
201055d4:	5fefb517          	auipc	a0,0x5fefb
201055d8:	4ac52503          	lw	a0,1196(a0) # 80000a80 <_impure_ptr>
201055dc:	bf09                	j	201054ee <_puts_r>

201055de <__swbuf_r>:
__swbuf_r():
201055de:	1101                	add	sp,sp,-32
201055e0:	cc22                	sw	s0,24(sp)
201055e2:	ca26                	sw	s1,20(sp)
201055e4:	c84a                	sw	s2,16(sp)
201055e6:	ce06                	sw	ra,28(sp)
201055e8:	c64e                	sw	s3,12(sp)
201055ea:	84aa                	mv	s1,a0
201055ec:	892e                	mv	s2,a1
201055ee:	8432                	mv	s0,a2
201055f0:	c501                	beqz	a0,201055f8 <__swbuf_r+0x1a>
201055f2:	4d1c                	lw	a5,24(a0)
201055f4:	e391                	bnez	a5,201055f8 <__swbuf_r+0x1a>
201055f6:	2ee5                	jal	201059ee <__sinit>
201055f8:	ffffe797          	auipc	a5,0xffffe
201055fc:	77c78793          	add	a5,a5,1916 # 20103d74 <__sf_fake_stdin>
20105600:	02f41863          	bne	s0,a5,20105630 <__swbuf_r+0x52>
20105604:	40c0                	lw	s0,4(s1)
20105606:	4c1c                	lw	a5,24(s0)
20105608:	c41c                	sw	a5,8(s0)
2010560a:	00c45783          	lhu	a5,12(s0)
2010560e:	8ba1                	and	a5,a5,8
20105610:	c399                	beqz	a5,20105616 <__swbuf_r+0x38>
20105612:	481c                	lw	a5,16(s0)
20105614:	ef95                	bnez	a5,20105650 <__swbuf_r+0x72>
20105616:	85a2                	mv	a1,s0
20105618:	8526                	mv	a0,s1
2010561a:	2051                	jal	2010569e <__swsetup_r>
2010561c:	c915                	beqz	a0,20105650 <__swbuf_r+0x72>
2010561e:	597d                	li	s2,-1
20105620:	40f2                	lw	ra,28(sp)
20105622:	4462                	lw	s0,24(sp)
20105624:	44d2                	lw	s1,20(sp)
20105626:	49b2                	lw	s3,12(sp)
20105628:	854a                	mv	a0,s2
2010562a:	4942                	lw	s2,16(sp)
2010562c:	6105                	add	sp,sp,32
2010562e:	8082                	ret
20105630:	ffffe797          	auipc	a5,0xffffe
20105634:	72478793          	add	a5,a5,1828 # 20103d54 <__sf_fake_stdout>
20105638:	00f41463          	bne	s0,a5,20105640 <__swbuf_r+0x62>
2010563c:	4480                	lw	s0,8(s1)
2010563e:	b7e1                	j	20105606 <__swbuf_r+0x28>
20105640:	ffffe797          	auipc	a5,0xffffe
20105644:	6f478793          	add	a5,a5,1780 # 20103d34 <__sf_fake_stderr>
20105648:	faf41fe3          	bne	s0,a5,20105606 <__swbuf_r+0x28>
2010564c:	44c0                	lw	s0,12(s1)
2010564e:	bf65                	j	20105606 <__swbuf_r+0x28>
20105650:	481c                	lw	a5,16(s0)
20105652:	4008                	lw	a0,0(s0)
20105654:	0ff97993          	zext.b	s3,s2
20105658:	0ff97913          	zext.b	s2,s2
2010565c:	8d1d                	sub	a0,a0,a5
2010565e:	485c                	lw	a5,20(s0)
20105660:	00f54663          	blt	a0,a5,2010566c <__swbuf_r+0x8e>
20105664:	85a2                	mv	a1,s0
20105666:	8526                	mv	a0,s1
20105668:	24b5                	jal	201058d4 <_fflush_r>
2010566a:	f955                	bnez	a0,2010561e <__swbuf_r+0x40>
2010566c:	441c                	lw	a5,8(s0)
2010566e:	0505                	add	a0,a0,1
20105670:	17fd                	add	a5,a5,-1
20105672:	c41c                	sw	a5,8(s0)
20105674:	401c                	lw	a5,0(s0)
20105676:	00178713          	add	a4,a5,1
2010567a:	c018                	sw	a4,0(s0)
2010567c:	01378023          	sb	s3,0(a5)
20105680:	485c                	lw	a5,20(s0)
20105682:	00a78963          	beq	a5,a0,20105694 <__swbuf_r+0xb6>
20105686:	00c45783          	lhu	a5,12(s0)
2010568a:	8b85                	and	a5,a5,1
2010568c:	dbd1                	beqz	a5,20105620 <__swbuf_r+0x42>
2010568e:	47a9                	li	a5,10
20105690:	f8f918e3          	bne	s2,a5,20105620 <__swbuf_r+0x42>
20105694:	85a2                	mv	a1,s0
20105696:	8526                	mv	a0,s1
20105698:	2c35                	jal	201058d4 <_fflush_r>
2010569a:	d159                	beqz	a0,20105620 <__swbuf_r+0x42>
2010569c:	b749                	j	2010561e <__swbuf_r+0x40>

2010569e <__swsetup_r>:
__swsetup_r():
2010569e:	1141                	add	sp,sp,-16
201056a0:	c422                	sw	s0,8(sp)
201056a2:	c226                	sw	s1,4(sp)
201056a4:	c04a                	sw	s2,0(sp)
201056a6:	c606                	sw	ra,12(sp)
201056a8:	5fefb497          	auipc	s1,0x5fefb
201056ac:	3d84a483          	lw	s1,984(s1) # 80000a80 <_impure_ptr>
201056b0:	892a                	mv	s2,a0
201056b2:	842e                	mv	s0,a1
201056b4:	c489                	beqz	s1,201056be <__swsetup_r+0x20>
201056b6:	4c9c                	lw	a5,24(s1)
201056b8:	e399                	bnez	a5,201056be <__swsetup_r+0x20>
201056ba:	8526                	mv	a0,s1
201056bc:	2e0d                	jal	201059ee <__sinit>
201056be:	ffffe797          	auipc	a5,0xffffe
201056c2:	6b678793          	add	a5,a5,1718 # 20103d74 <__sf_fake_stdin>
201056c6:	02f41463          	bne	s0,a5,201056ee <__swsetup_r+0x50>
201056ca:	40c0                	lw	s0,4(s1)
201056cc:	00c41783          	lh	a5,12(s0)
201056d0:	0087f713          	and	a4,a5,8
201056d4:	eb2d                	bnez	a4,20105746 <__swsetup_r+0xa8>
201056d6:	0107f713          	and	a4,a5,16
201056da:	eb15                	bnez	a4,2010570e <__swsetup_r+0x70>
201056dc:	4725                	li	a4,9
201056de:	00e92023          	sw	a4,0(s2)
201056e2:	0407e793          	or	a5,a5,64
201056e6:	00f41623          	sh	a5,12(s0)
201056ea:	557d                	li	a0,-1
201056ec:	a859                	j	20105782 <__swsetup_r+0xe4>
201056ee:	ffffe797          	auipc	a5,0xffffe
201056f2:	66678793          	add	a5,a5,1638 # 20103d54 <__sf_fake_stdout>
201056f6:	00f41463          	bne	s0,a5,201056fe <__swsetup_r+0x60>
201056fa:	4480                	lw	s0,8(s1)
201056fc:	bfc1                	j	201056cc <__swsetup_r+0x2e>
201056fe:	ffffe797          	auipc	a5,0xffffe
20105702:	63678793          	add	a5,a5,1590 # 20103d34 <__sf_fake_stderr>
20105706:	fcf413e3          	bne	s0,a5,201056cc <__swsetup_r+0x2e>
2010570a:	44c0                	lw	s0,12(s1)
2010570c:	b7c1                	j	201056cc <__swsetup_r+0x2e>
2010570e:	8b91                	and	a5,a5,4
20105710:	c78d                	beqz	a5,2010573a <__swsetup_r+0x9c>
20105712:	584c                	lw	a1,52(s0)
20105714:	c989                	beqz	a1,20105726 <__swsetup_r+0x88>
20105716:	04440793          	add	a5,s0,68
2010571a:	00f58463          	beq	a1,a5,20105722 <__swsetup_r+0x84>
2010571e:	854a                	mv	a0,s2
20105720:	23d5                	jal	20105d04 <_free_r>
20105722:	02042a23          	sw	zero,52(s0)
20105726:	00c45783          	lhu	a5,12(s0)
2010572a:	00042223          	sw	zero,4(s0)
2010572e:	fdb7f793          	and	a5,a5,-37
20105732:	00f41623          	sh	a5,12(s0)
20105736:	481c                	lw	a5,16(s0)
20105738:	c01c                	sw	a5,0(s0)
2010573a:	00c45783          	lhu	a5,12(s0)
2010573e:	0087e793          	or	a5,a5,8
20105742:	00f41623          	sh	a5,12(s0)
20105746:	481c                	lw	a5,16(s0)
20105748:	ef81                	bnez	a5,20105760 <__swsetup_r+0xc2>
2010574a:	00c45783          	lhu	a5,12(s0)
2010574e:	20000713          	li	a4,512
20105752:	2807f793          	and	a5,a5,640
20105756:	00e78563          	beq	a5,a4,20105760 <__swsetup_r+0xc2>
2010575a:	85a2                	mv	a1,s0
2010575c:	854a                	mv	a0,s2
2010575e:	29b1                	jal	20105bba <__smakebuf_r>
20105760:	00c41783          	lh	a5,12(s0)
20105764:	0017f713          	and	a4,a5,1
20105768:	c31d                	beqz	a4,2010578e <__swsetup_r+0xf0>
2010576a:	4858                	lw	a4,20(s0)
2010576c:	00042423          	sw	zero,8(s0)
20105770:	40e00733          	neg	a4,a4
20105774:	cc18                	sw	a4,24(s0)
20105776:	4818                	lw	a4,16(s0)
20105778:	4501                	li	a0,0
2010577a:	e701                	bnez	a4,20105782 <__swsetup_r+0xe4>
2010577c:	0807f713          	and	a4,a5,128
20105780:	f32d                	bnez	a4,201056e2 <__swsetup_r+0x44>
20105782:	40b2                	lw	ra,12(sp)
20105784:	4422                	lw	s0,8(sp)
20105786:	4492                	lw	s1,4(sp)
20105788:	4902                	lw	s2,0(sp)
2010578a:	0141                	add	sp,sp,16
2010578c:	8082                	ret
2010578e:	0027f713          	and	a4,a5,2
20105792:	4681                	li	a3,0
20105794:	e311                	bnez	a4,20105798 <__swsetup_r+0xfa>
20105796:	4854                	lw	a3,20(s0)
20105798:	c414                	sw	a3,8(s0)
2010579a:	bff1                	j	20105776 <__swsetup_r+0xd8>

2010579c <__sflush_r>:
__sflush_r():
2010579c:	00c59783          	lh	a5,12(a1)
201057a0:	1101                	add	sp,sp,-32
201057a2:	cc22                	sw	s0,24(sp)
201057a4:	ca26                	sw	s1,20(sp)
201057a6:	ce06                	sw	ra,28(sp)
201057a8:	c84a                	sw	s2,16(sp)
201057aa:	c64e                	sw	s3,12(sp)
201057ac:	0087f713          	and	a4,a5,8
201057b0:	84aa                	mv	s1,a0
201057b2:	842e                	mv	s0,a1
201057b4:	e769                	bnez	a4,2010587e <__sflush_r+0xe2>
201057b6:	41d8                	lw	a4,4(a1)
201057b8:	00e04563          	bgtz	a4,201057c2 <__sflush_r+0x26>
201057bc:	41b8                	lw	a4,64(a1)
201057be:	08e05863          	blez	a4,2010584e <__sflush_r+0xb2>
201057c2:	5458                	lw	a4,44(s0)
201057c4:	c749                	beqz	a4,2010584e <__sflush_r+0xb2>
201057c6:	83b1                	srl	a5,a5,0xc
201057c8:	0004a903          	lw	s2,0(s1)
201057cc:	8b85                	and	a5,a5,1
201057ce:	0004a023          	sw	zero,0(s1)
201057d2:	500c                	lw	a1,32(s0)
201057d4:	cbb9                	beqz	a5,2010582a <__sflush_r+0x8e>
201057d6:	4870                	lw	a2,84(s0)
201057d8:	00c45783          	lhu	a5,12(s0)
201057dc:	8b91                	and	a5,a5,4
201057de:	c799                	beqz	a5,201057ec <__sflush_r+0x50>
201057e0:	405c                	lw	a5,4(s0)
201057e2:	8e1d                	sub	a2,a2,a5
201057e4:	585c                	lw	a5,52(s0)
201057e6:	c399                	beqz	a5,201057ec <__sflush_r+0x50>
201057e8:	403c                	lw	a5,64(s0)
201057ea:	8e1d                	sub	a2,a2,a5
201057ec:	545c                	lw	a5,44(s0)
201057ee:	500c                	lw	a1,32(s0)
201057f0:	4681                	li	a3,0
201057f2:	8526                	mv	a0,s1
201057f4:	9782                	jalr	a5
201057f6:	57fd                	li	a5,-1
201057f8:	04f50d63          	beq	a0,a5,20105852 <__sflush_r+0xb6>
201057fc:	481c                	lw	a5,16(s0)
201057fe:	6705                	lui	a4,0x1
20105800:	00042223          	sw	zero,4(s0)
20105804:	c01c                	sw	a5,0(s0)
20105806:	00c45783          	lhu	a5,12(s0)
2010580a:	8ff9                	and	a5,a5,a4
2010580c:	c391                	beqz	a5,20105810 <__sflush_r+0x74>
2010580e:	c868                	sw	a0,84(s0)
20105810:	584c                	lw	a1,52(s0)
20105812:	0124a023          	sw	s2,0(s1)
20105816:	cd85                	beqz	a1,2010584e <__sflush_r+0xb2>
20105818:	04440793          	add	a5,s0,68
2010581c:	00f58463          	beq	a1,a5,20105824 <__sflush_r+0x88>
20105820:	8526                	mv	a0,s1
20105822:	21cd                	jal	20105d04 <_free_r>
20105824:	02042a23          	sw	zero,52(s0)
20105828:	a01d                	j	2010584e <__sflush_r+0xb2>
2010582a:	4601                	li	a2,0
2010582c:	4685                	li	a3,1
2010582e:	8526                	mv	a0,s1
20105830:	9702                	jalr	a4
20105832:	57fd                	li	a5,-1
20105834:	862a                	mv	a2,a0
20105836:	faf511e3          	bne	a0,a5,201057d8 <__sflush_r+0x3c>
2010583a:	409c                	lw	a5,0(s1)
2010583c:	dfd1                	beqz	a5,201057d8 <__sflush_r+0x3c>
2010583e:	4775                	li	a4,29
20105840:	00e78563          	beq	a5,a4,2010584a <__sflush_r+0xae>
20105844:	4759                	li	a4,22
20105846:	06e79563          	bne	a5,a4,201058b0 <__sflush_r+0x114>
2010584a:	0124a023          	sw	s2,0(s1)
2010584e:	4501                	li	a0,0
20105850:	a0bd                	j	201058be <__sflush_r+0x122>
20105852:	4098                	lw	a4,0(s1)
20105854:	00c41783          	lh	a5,12(s0)
20105858:	cf01                	beqz	a4,20105870 <__sflush_r+0xd4>
2010585a:	46f5                	li	a3,29
2010585c:	00d70563          	beq	a4,a3,20105866 <__sflush_r+0xca>
20105860:	46d9                	li	a3,22
20105862:	04d71963          	bne	a4,a3,201058b4 <__sflush_r+0x118>
20105866:	481c                	lw	a5,16(s0)
20105868:	00042223          	sw	zero,4(s0)
2010586c:	c01c                	sw	a5,0(s0)
2010586e:	b74d                	j	20105810 <__sflush_r+0x74>
20105870:	4818                	lw	a4,16(s0)
20105872:	83b1                	srl	a5,a5,0xc
20105874:	00042223          	sw	zero,4(s0)
20105878:	c018                	sw	a4,0(s0)
2010587a:	8b85                	and	a5,a5,1
2010587c:	bf41                	j	2010580c <__sflush_r+0x70>
2010587e:	0105a983          	lw	s3,16(a1)
20105882:	fc0986e3          	beqz	s3,2010584e <__sflush_r+0xb2>
20105886:	0005a903          	lw	s2,0(a1)
2010588a:	8b8d                	and	a5,a5,3
2010588c:	0135a023          	sw	s3,0(a1)
20105890:	41390933          	sub	s2,s2,s3
20105894:	4701                	li	a4,0
20105896:	e391                	bnez	a5,2010589a <__sflush_r+0xfe>
20105898:	49d8                	lw	a4,20(a1)
2010589a:	c418                	sw	a4,8(s0)
2010589c:	fb2059e3          	blez	s2,2010584e <__sflush_r+0xb2>
201058a0:	541c                	lw	a5,40(s0)
201058a2:	500c                	lw	a1,32(s0)
201058a4:	86ca                	mv	a3,s2
201058a6:	864e                	mv	a2,s3
201058a8:	8526                	mv	a0,s1
201058aa:	9782                	jalr	a5
201058ac:	02a04063          	bgtz	a0,201058cc <__sflush_r+0x130>
201058b0:	00c41783          	lh	a5,12(s0)
201058b4:	0407e793          	or	a5,a5,64
201058b8:	00f41623          	sh	a5,12(s0)
201058bc:	557d                	li	a0,-1
201058be:	40f2                	lw	ra,28(sp)
201058c0:	4462                	lw	s0,24(sp)
201058c2:	44d2                	lw	s1,20(sp)
201058c4:	4942                	lw	s2,16(sp)
201058c6:	49b2                	lw	s3,12(sp)
201058c8:	6105                	add	sp,sp,32
201058ca:	8082                	ret
201058cc:	99aa                	add	s3,s3,a0
201058ce:	40a90933          	sub	s2,s2,a0
201058d2:	b7e9                	j	2010589c <__sflush_r+0x100>

201058d4 <_fflush_r>:
_fflush_r():
201058d4:	499c                	lw	a5,16(a1)
201058d6:	cfb9                	beqz	a5,20105934 <_fflush_r+0x60>
201058d8:	1101                	add	sp,sp,-32
201058da:	cc22                	sw	s0,24(sp)
201058dc:	ce06                	sw	ra,28(sp)
201058de:	842a                	mv	s0,a0
201058e0:	c511                	beqz	a0,201058ec <_fflush_r+0x18>
201058e2:	4d1c                	lw	a5,24(a0)
201058e4:	e781                	bnez	a5,201058ec <_fflush_r+0x18>
201058e6:	c62e                	sw	a1,12(sp)
201058e8:	2219                	jal	201059ee <__sinit>
201058ea:	45b2                	lw	a1,12(sp)
201058ec:	ffffe797          	auipc	a5,0xffffe
201058f0:	48878793          	add	a5,a5,1160 # 20103d74 <__sf_fake_stdin>
201058f4:	00f59b63          	bne	a1,a5,2010590a <_fflush_r+0x36>
201058f8:	404c                	lw	a1,4(s0)
201058fa:	00c59783          	lh	a5,12(a1)
201058fe:	c795                	beqz	a5,2010592a <_fflush_r+0x56>
20105900:	8522                	mv	a0,s0
20105902:	4462                	lw	s0,24(sp)
20105904:	40f2                	lw	ra,28(sp)
20105906:	6105                	add	sp,sp,32
20105908:	bd51                	j	2010579c <__sflush_r>
2010590a:	ffffe797          	auipc	a5,0xffffe
2010590e:	44a78793          	add	a5,a5,1098 # 20103d54 <__sf_fake_stdout>
20105912:	00f59463          	bne	a1,a5,2010591a <_fflush_r+0x46>
20105916:	440c                	lw	a1,8(s0)
20105918:	b7cd                	j	201058fa <_fflush_r+0x26>
2010591a:	ffffe797          	auipc	a5,0xffffe
2010591e:	41a78793          	add	a5,a5,1050 # 20103d34 <__sf_fake_stderr>
20105922:	fcf59ce3          	bne	a1,a5,201058fa <_fflush_r+0x26>
20105926:	444c                	lw	a1,12(s0)
20105928:	bfc9                	j	201058fa <_fflush_r+0x26>
2010592a:	40f2                	lw	ra,28(sp)
2010592c:	4462                	lw	s0,24(sp)
2010592e:	4501                	li	a0,0
20105930:	6105                	add	sp,sp,32
20105932:	8082                	ret
20105934:	4501                	li	a0,0
20105936:	8082                	ret

20105938 <std>:
std():
20105938:	1141                	add	sp,sp,-16
2010593a:	c422                	sw	s0,8(sp)
2010593c:	c606                	sw	ra,12(sp)
2010593e:	842a                	mv	s0,a0
20105940:	00b51623          	sh	a1,12(a0)
20105944:	00c51723          	sh	a2,14(a0)
20105948:	00052023          	sw	zero,0(a0)
2010594c:	00052223          	sw	zero,4(a0)
20105950:	00052423          	sw	zero,8(a0)
20105954:	06052223          	sw	zero,100(a0)
20105958:	00052823          	sw	zero,16(a0)
2010595c:	00052a23          	sw	zero,20(a0)
20105960:	00052c23          	sw	zero,24(a0)
20105964:	4621                	li	a2,8
20105966:	4581                	li	a1,0
20105968:	05c50513          	add	a0,a0,92
2010596c:	2cc5                	jal	20105c5c <memset>
2010596e:	00001797          	auipc	a5,0x1
20105972:	82c78793          	add	a5,a5,-2004 # 2010619a <__sread>
20105976:	d05c                	sw	a5,36(s0)
20105978:	00001797          	auipc	a5,0x1
2010597c:	85278793          	add	a5,a5,-1966 # 201061ca <__swrite>
20105980:	d41c                	sw	a5,40(s0)
20105982:	00001797          	auipc	a5,0x1
20105986:	89678793          	add	a5,a5,-1898 # 20106218 <__sseek>
2010598a:	d45c                	sw	a5,44(s0)
2010598c:	00001797          	auipc	a5,0x1
20105990:	8c278793          	add	a5,a5,-1854 # 2010624e <__sclose>
20105994:	40b2                	lw	ra,12(sp)
20105996:	d000                	sw	s0,32(s0)
20105998:	d81c                	sw	a5,48(s0)
2010599a:	4422                	lw	s0,8(sp)
2010599c:	0141                	add	sp,sp,16
2010599e:	8082                	ret

201059a0 <_cleanup_r>:
_cleanup_r():
201059a0:	00000597          	auipc	a1,0x0
201059a4:	f3458593          	add	a1,a1,-204 # 201058d4 <_fflush_r>
201059a8:	a2b1                	j	20105af4 <_fwalk_reent>

201059aa <__sfmoreglue>:
__sfmoreglue():
201059aa:	1141                	add	sp,sp,-16
201059ac:	c226                	sw	s1,4(sp)
201059ae:	06800793          	li	a5,104
201059b2:	fff58493          	add	s1,a1,-1
201059b6:	02f484b3          	mul	s1,s1,a5
201059ba:	c04a                	sw	s2,0(sp)
201059bc:	892e                	mv	s2,a1
201059be:	c422                	sw	s0,8(sp)
201059c0:	c606                	sw	ra,12(sp)
201059c2:	07448593          	add	a1,s1,116
201059c6:	2ef1                	jal	20105da2 <_malloc_r>
201059c8:	842a                	mv	s0,a0
201059ca:	c919                	beqz	a0,201059e0 <__sfmoreglue+0x36>
201059cc:	00052023          	sw	zero,0(a0)
201059d0:	01252223          	sw	s2,4(a0)
201059d4:	0531                	add	a0,a0,12
201059d6:	c408                	sw	a0,8(s0)
201059d8:	06848613          	add	a2,s1,104
201059dc:	4581                	li	a1,0
201059de:	2cbd                	jal	20105c5c <memset>
201059e0:	40b2                	lw	ra,12(sp)
201059e2:	8522                	mv	a0,s0
201059e4:	4422                	lw	s0,8(sp)
201059e6:	4492                	lw	s1,4(sp)
201059e8:	4902                	lw	s2,0(sp)
201059ea:	0141                	add	sp,sp,16
201059ec:	8082                	ret

201059ee <__sinit>:
__sinit():
201059ee:	4d1c                	lw	a5,24(a0)
201059f0:	e3bd                	bnez	a5,20105a56 <__sinit+0x68>
201059f2:	1141                	add	sp,sp,-16
201059f4:	c422                	sw	s0,8(sp)
201059f6:	c606                	sw	ra,12(sp)
201059f8:	00000797          	auipc	a5,0x0
201059fc:	fa878793          	add	a5,a5,-88 # 201059a0 <_cleanup_r>
20105a00:	d51c                	sw	a5,40(a0)
20105a02:	04052423          	sw	zero,72(a0)
20105a06:	04052623          	sw	zero,76(a0)
20105a0a:	04052823          	sw	zero,80(a0)
20105a0e:	fffff797          	auipc	a5,0xfffff
20105a12:	3ce7a783          	lw	a5,974(a5) # 20104ddc <_global_impure_ptr>
20105a16:	842a                	mv	s0,a0
20105a18:	00f51463          	bne	a0,a5,20105a20 <__sinit+0x32>
20105a1c:	4785                	li	a5,1
20105a1e:	cd1c                	sw	a5,24(a0)
20105a20:	8522                	mv	a0,s0
20105a22:	281d                	jal	20105a58 <__sfp>
20105a24:	c048                	sw	a0,4(s0)
20105a26:	8522                	mv	a0,s0
20105a28:	2805                	jal	20105a58 <__sfp>
20105a2a:	c408                	sw	a0,8(s0)
20105a2c:	8522                	mv	a0,s0
20105a2e:	202d                	jal	20105a58 <__sfp>
20105a30:	c448                	sw	a0,12(s0)
20105a32:	4048                	lw	a0,4(s0)
20105a34:	4601                	li	a2,0
20105a36:	4591                	li	a1,4
20105a38:	3701                	jal	20105938 <std>
20105a3a:	4408                	lw	a0,8(s0)
20105a3c:	4605                	li	a2,1
20105a3e:	45a5                	li	a1,9
20105a40:	3de5                	jal	20105938 <std>
20105a42:	4448                	lw	a0,12(s0)
20105a44:	4609                	li	a2,2
20105a46:	45c9                	li	a1,18
20105a48:	3dc5                	jal	20105938 <std>
20105a4a:	4785                	li	a5,1
20105a4c:	40b2                	lw	ra,12(sp)
20105a4e:	cc1c                	sw	a5,24(s0)
20105a50:	4422                	lw	s0,8(sp)
20105a52:	0141                	add	sp,sp,16
20105a54:	8082                	ret
20105a56:	8082                	ret

20105a58 <__sfp>:
__sfp():
20105a58:	1141                	add	sp,sp,-16
20105a5a:	c226                	sw	s1,4(sp)
20105a5c:	fffff497          	auipc	s1,0xfffff
20105a60:	3804a483          	lw	s1,896(s1) # 20104ddc <_global_impure_ptr>
20105a64:	4c9c                	lw	a5,24(s1)
20105a66:	c04a                	sw	s2,0(sp)
20105a68:	c606                	sw	ra,12(sp)
20105a6a:	c422                	sw	s0,8(sp)
20105a6c:	892a                	mv	s2,a0
20105a6e:	e399                	bnez	a5,20105a74 <__sfp+0x1c>
20105a70:	8526                	mv	a0,s1
20105a72:	3fb5                	jal	201059ee <__sinit>
20105a74:	04848493          	add	s1,s1,72
20105a78:	4480                	lw	s0,8(s1)
20105a7a:	40dc                	lw	a5,4(s1)
20105a7c:	17fd                	add	a5,a5,-1
20105a7e:	0007d663          	bgez	a5,20105a8a <__sfp+0x32>
20105a82:	409c                	lw	a5,0(s1)
20105a84:	cfb1                	beqz	a5,20105ae0 <__sfp+0x88>
20105a86:	4084                	lw	s1,0(s1)
20105a88:	bfc5                	j	20105a78 <__sfp+0x20>
20105a8a:	00c41703          	lh	a4,12(s0)
20105a8e:	e731                	bnez	a4,20105ada <__sfp+0x82>
20105a90:	77c1                	lui	a5,0xffff0
20105a92:	0785                	add	a5,a5,1 # ffff0001 <metal_segment_heap_target_end+0x7ffee891>
20105a94:	06042223          	sw	zero,100(s0)
20105a98:	00042023          	sw	zero,0(s0)
20105a9c:	00042223          	sw	zero,4(s0)
20105aa0:	00042423          	sw	zero,8(s0)
20105aa4:	c45c                	sw	a5,12(s0)
20105aa6:	00042823          	sw	zero,16(s0)
20105aaa:	00042a23          	sw	zero,20(s0)
20105aae:	00042c23          	sw	zero,24(s0)
20105ab2:	4621                	li	a2,8
20105ab4:	4581                	li	a1,0
20105ab6:	05c40513          	add	a0,s0,92
20105aba:	224d                	jal	20105c5c <memset>
20105abc:	02042a23          	sw	zero,52(s0)
20105ac0:	02042c23          	sw	zero,56(s0)
20105ac4:	04042423          	sw	zero,72(s0)
20105ac8:	04042623          	sw	zero,76(s0)
20105acc:	40b2                	lw	ra,12(sp)
20105ace:	8522                	mv	a0,s0
20105ad0:	4422                	lw	s0,8(sp)
20105ad2:	4492                	lw	s1,4(sp)
20105ad4:	4902                	lw	s2,0(sp)
20105ad6:	0141                	add	sp,sp,16
20105ad8:	8082                	ret
20105ada:	06840413          	add	s0,s0,104
20105ade:	bf79                	j	20105a7c <__sfp+0x24>
20105ae0:	4591                	li	a1,4
20105ae2:	854a                	mv	a0,s2
20105ae4:	35d9                	jal	201059aa <__sfmoreglue>
20105ae6:	c088                	sw	a0,0(s1)
20105ae8:	842a                	mv	s0,a0
20105aea:	fd51                	bnez	a0,20105a86 <__sfp+0x2e>
20105aec:	47b1                	li	a5,12
20105aee:	00f92023          	sw	a5,0(s2)
20105af2:	bfe9                	j	20105acc <__sfp+0x74>

20105af4 <_fwalk_reent>:
_fwalk_reent():
20105af4:	7179                	add	sp,sp,-48
20105af6:	d422                	sw	s0,40(sp)
20105af8:	d04a                	sw	s2,32(sp)
20105afa:	ce4e                	sw	s3,28(sp)
20105afc:	cc52                	sw	s4,24(sp)
20105afe:	c85a                	sw	s6,16(sp)
20105b00:	c65e                	sw	s7,12(sp)
20105b02:	d606                	sw	ra,44(sp)
20105b04:	d226                	sw	s1,36(sp)
20105b06:	ca56                	sw	s5,20(sp)
20105b08:	892a                	mv	s2,a0
20105b0a:	8a2e                	mv	s4,a1
20105b0c:	04850413          	add	s0,a0,72
20105b10:	4981                	li	s3,0
20105b12:	4b05                	li	s6,1
20105b14:	5bfd                	li	s7,-1
20105b16:	4404                	lw	s1,8(s0)
20105b18:	00442a83          	lw	s5,4(s0)
20105b1c:	1afd                	add	s5,s5,-1
20105b1e:	020ad063          	bgez	s5,20105b3e <_fwalk_reent+0x4a>
20105b22:	4000                	lw	s0,0(s0)
20105b24:	f86d                	bnez	s0,20105b16 <_fwalk_reent+0x22>
20105b26:	50b2                	lw	ra,44(sp)
20105b28:	5422                	lw	s0,40(sp)
20105b2a:	5492                	lw	s1,36(sp)
20105b2c:	5902                	lw	s2,32(sp)
20105b2e:	4a62                	lw	s4,24(sp)
20105b30:	4ad2                	lw	s5,20(sp)
20105b32:	4b42                	lw	s6,16(sp)
20105b34:	4bb2                	lw	s7,12(sp)
20105b36:	854e                	mv	a0,s3
20105b38:	49f2                	lw	s3,28(sp)
20105b3a:	6145                	add	sp,sp,48
20105b3c:	8082                	ret
20105b3e:	00c4d783          	lhu	a5,12(s1)
20105b42:	00fb7b63          	bgeu	s6,a5,20105b58 <_fwalk_reent+0x64>
20105b46:	00e49783          	lh	a5,14(s1)
20105b4a:	01778763          	beq	a5,s7,20105b58 <_fwalk_reent+0x64>
20105b4e:	85a6                	mv	a1,s1
20105b50:	854a                	mv	a0,s2
20105b52:	9a02                	jalr	s4
20105b54:	00a9e9b3          	or	s3,s3,a0
20105b58:	06848493          	add	s1,s1,104
20105b5c:	b7c1                	j	20105b1c <_fwalk_reent+0x28>

20105b5e <__swhatbuf_r>:
__swhatbuf_r():
20105b5e:	7159                	add	sp,sp,-112
20105b60:	d4a2                	sw	s0,104(sp)
20105b62:	842e                	mv	s0,a1
20105b64:	00e59583          	lh	a1,14(a1)
20105b68:	d2a6                	sw	s1,100(sp)
20105b6a:	d0ca                	sw	s2,96(sp)
20105b6c:	d686                	sw	ra,108(sp)
20105b6e:	84b2                	mv	s1,a2
20105b70:	8936                	mv	s2,a3
20105b72:	0205d363          	bgez	a1,20105b98 <__swhatbuf_r+0x3a>
20105b76:	00c45783          	lhu	a5,12(s0)
20105b7a:	0807f793          	and	a5,a5,128
20105b7e:	eb95                	bnez	a5,20105bb2 <__swhatbuf_r+0x54>
20105b80:	40000713          	li	a4,1024
20105b84:	50b6                	lw	ra,108(sp)
20105b86:	5426                	lw	s0,104(sp)
20105b88:	00f92023          	sw	a5,0(s2)
20105b8c:	c098                	sw	a4,0(s1)
20105b8e:	5906                	lw	s2,96(sp)
20105b90:	5496                	lw	s1,100(sp)
20105b92:	4501                	li	a0,0
20105b94:	6165                	add	sp,sp,112
20105b96:	8082                	ret
20105b98:	0030                	add	a2,sp,8
20105b9a:	70e000ef          	jal	201062a8 <_fstat_r>
20105b9e:	fc054ce3          	bltz	a0,20105b76 <__swhatbuf_r+0x18>
20105ba2:	4732                	lw	a4,12(sp)
20105ba4:	67bd                	lui	a5,0xf
20105ba6:	8ff9                	and	a5,a5,a4
20105ba8:	7779                	lui	a4,0xffffe
20105baa:	97ba                	add	a5,a5,a4
20105bac:	0017b793          	seqz	a5,a5
20105bb0:	bfc1                	j	20105b80 <__swhatbuf_r+0x22>
20105bb2:	4781                	li	a5,0
20105bb4:	04000713          	li	a4,64
20105bb8:	b7f1                	j	20105b84 <__swhatbuf_r+0x26>

20105bba <__smakebuf_r>:
__smakebuf_r():
20105bba:	00c5d783          	lhu	a5,12(a1)
20105bbe:	7179                	add	sp,sp,-48
20105bc0:	d422                	sw	s0,40(sp)
20105bc2:	d606                	sw	ra,44(sp)
20105bc4:	d226                	sw	s1,36(sp)
20105bc6:	d04a                	sw	s2,32(sp)
20105bc8:	ce4e                	sw	s3,28(sp)
20105bca:	8b89                	and	a5,a5,2
20105bcc:	842e                	mv	s0,a1
20105bce:	cf91                	beqz	a5,20105bea <__smakebuf_r+0x30>
20105bd0:	04740793          	add	a5,s0,71
20105bd4:	c01c                	sw	a5,0(s0)
20105bd6:	c81c                	sw	a5,16(s0)
20105bd8:	4785                	li	a5,1
20105bda:	c85c                	sw	a5,20(s0)
20105bdc:	50b2                	lw	ra,44(sp)
20105bde:	5422                	lw	s0,40(sp)
20105be0:	5492                	lw	s1,36(sp)
20105be2:	5902                	lw	s2,32(sp)
20105be4:	49f2                	lw	s3,28(sp)
20105be6:	6145                	add	sp,sp,48
20105be8:	8082                	ret
20105bea:	0074                	add	a3,sp,12
20105bec:	0030                	add	a2,sp,8
20105bee:	84aa                	mv	s1,a0
20105bf0:	37bd                	jal	20105b5e <__swhatbuf_r>
20105bf2:	49a2                	lw	s3,8(sp)
20105bf4:	892a                	mv	s2,a0
20105bf6:	8526                	mv	a0,s1
20105bf8:	85ce                	mv	a1,s3
20105bfa:	2265                	jal	20105da2 <_malloc_r>
20105bfc:	ed01                	bnez	a0,20105c14 <__smakebuf_r+0x5a>
20105bfe:	00c41783          	lh	a5,12(s0)
20105c02:	2007f713          	and	a4,a5,512
20105c06:	fb79                	bnez	a4,20105bdc <__smakebuf_r+0x22>
20105c08:	9bf1                	and	a5,a5,-4
20105c0a:	0027e793          	or	a5,a5,2
20105c0e:	00f41623          	sh	a5,12(s0)
20105c12:	bf7d                	j	20105bd0 <__smakebuf_r+0x16>
20105c14:	00000797          	auipc	a5,0x0
20105c18:	d8c78793          	add	a5,a5,-628 # 201059a0 <_cleanup_r>
20105c1c:	d49c                	sw	a5,40(s1)
20105c1e:	00c45783          	lhu	a5,12(s0)
20105c22:	c008                	sw	a0,0(s0)
20105c24:	c808                	sw	a0,16(s0)
20105c26:	0807e793          	or	a5,a5,128
20105c2a:	00f41623          	sh	a5,12(s0)
20105c2e:	47b2                	lw	a5,12(sp)
20105c30:	01342a23          	sw	s3,20(s0)
20105c34:	cf89                	beqz	a5,20105c4e <__smakebuf_r+0x94>
20105c36:	00e41583          	lh	a1,14(s0)
20105c3a:	8526                	mv	a0,s1
20105c3c:	2d59                	jal	201062d2 <_isatty_r>
20105c3e:	c901                	beqz	a0,20105c4e <__smakebuf_r+0x94>
20105c40:	00c45783          	lhu	a5,12(s0)
20105c44:	9bf1                	and	a5,a5,-4
20105c46:	0017e793          	or	a5,a5,1
20105c4a:	00f41623          	sh	a5,12(s0)
20105c4e:	00c45783          	lhu	a5,12(s0)
20105c52:	0127e533          	or	a0,a5,s2
20105c56:	00a41623          	sh	a0,12(s0)
20105c5a:	b749                	j	20105bdc <__smakebuf_r+0x22>

20105c5c <memset>:
memset():
20105c5c:	433d                	li	t1,15
20105c5e:	872a                	mv	a4,a0
20105c60:	02c37363          	bgeu	t1,a2,20105c86 <memset+0x2a>
20105c64:	00f77793          	and	a5,a4,15
20105c68:	efbd                	bnez	a5,20105ce6 <memset+0x8a>
20105c6a:	e5ad                	bnez	a1,20105cd4 <memset+0x78>
20105c6c:	ff067693          	and	a3,a2,-16
20105c70:	8a3d                	and	a2,a2,15
20105c72:	96ba                	add	a3,a3,a4
20105c74:	c30c                	sw	a1,0(a4)
20105c76:	c34c                	sw	a1,4(a4)
20105c78:	c70c                	sw	a1,8(a4)
20105c7a:	c74c                	sw	a1,12(a4)
20105c7c:	0741                	add	a4,a4,16 # ffffe010 <metal_segment_heap_target_end+0x7fffc8a0>
20105c7e:	fed76be3          	bltu	a4,a3,20105c74 <memset+0x18>
20105c82:	e211                	bnez	a2,20105c86 <memset+0x2a>
20105c84:	8082                	ret
20105c86:	40c306b3          	sub	a3,t1,a2
20105c8a:	068a                	sll	a3,a3,0x2
20105c8c:	00000297          	auipc	t0,0x0
20105c90:	9696                	add	a3,a3,t0
20105c92:	00a68067          	jr	10(a3)
20105c96:	00b70723          	sb	a1,14(a4)
20105c9a:	00b706a3          	sb	a1,13(a4)
20105c9e:	00b70623          	sb	a1,12(a4)
20105ca2:	00b705a3          	sb	a1,11(a4)
20105ca6:	00b70523          	sb	a1,10(a4)
20105caa:	00b704a3          	sb	a1,9(a4)
20105cae:	00b70423          	sb	a1,8(a4)
20105cb2:	00b703a3          	sb	a1,7(a4)
20105cb6:	00b70323          	sb	a1,6(a4)
20105cba:	00b702a3          	sb	a1,5(a4)
20105cbe:	00b70223          	sb	a1,4(a4)
20105cc2:	00b701a3          	sb	a1,3(a4)
20105cc6:	00b70123          	sb	a1,2(a4)
20105cca:	00b700a3          	sb	a1,1(a4)
20105cce:	00b70023          	sb	a1,0(a4)
20105cd2:	8082                	ret
20105cd4:	0ff5f593          	zext.b	a1,a1
20105cd8:	00859693          	sll	a3,a1,0x8
20105cdc:	8dd5                	or	a1,a1,a3
20105cde:	01059693          	sll	a3,a1,0x10
20105ce2:	8dd5                	or	a1,a1,a3
20105ce4:	b761                	j	20105c6c <memset+0x10>
20105ce6:	00279693          	sll	a3,a5,0x2
20105cea:	00000297          	auipc	t0,0x0
20105cee:	9696                	add	a3,a3,t0
20105cf0:	8286                	mv	t0,ra
20105cf2:	fa8680e7          	jalr	-88(a3)
20105cf6:	8096                	mv	ra,t0
20105cf8:	17c1                	add	a5,a5,-16
20105cfa:	8f1d                	sub	a4,a4,a5
20105cfc:	963e                	add	a2,a2,a5
20105cfe:	f8c374e3          	bgeu	t1,a2,20105c86 <memset+0x2a>
20105d02:	b7a5                	j	20105c6a <memset+0xe>

20105d04 <_free_r>:
_free_r():
20105d04:	cdd1                	beqz	a1,20105da0 <_free_r+0x9c>
20105d06:	ffc5a783          	lw	a5,-4(a1)
20105d0a:	1101                	add	sp,sp,-32
20105d0c:	cc22                	sw	s0,24(sp)
20105d0e:	ce06                	sw	ra,28(sp)
20105d10:	ffc58413          	add	s0,a1,-4
20105d14:	0007d363          	bgez	a5,20105d1a <_free_r+0x16>
20105d18:	943e                	add	s0,s0,a5
20105d1a:	c62a                	sw	a0,12(sp)
20105d1c:	2515                	jal	20106340 <__malloc_lock>
20105d1e:	83418713          	add	a4,gp,-1996 # 80000ab4 <__malloc_free_list>
20105d22:	431c                	lw	a5,0(a4)
20105d24:	4532                	lw	a0,12(sp)
20105d26:	eb81                	bnez	a5,20105d36 <_free_r+0x32>
20105d28:	00042223          	sw	zero,4(s0)
20105d2c:	c300                	sw	s0,0(a4)
20105d2e:	4462                	lw	s0,24(sp)
20105d30:	40f2                	lw	ra,28(sp)
20105d32:	6105                	add	sp,sp,32
20105d34:	a539                	j	20106342 <__malloc_unlock>
20105d36:	00f47d63          	bgeu	s0,a5,20105d50 <_free_r+0x4c>
20105d3a:	4010                	lw	a2,0(s0)
20105d3c:	00c406b3          	add	a3,s0,a2
20105d40:	00d79663          	bne	a5,a3,20105d4c <_free_r+0x48>
20105d44:	4394                	lw	a3,0(a5)
20105d46:	43dc                	lw	a5,4(a5)
20105d48:	96b2                	add	a3,a3,a2
20105d4a:	c014                	sw	a3,0(s0)
20105d4c:	c05c                	sw	a5,4(s0)
20105d4e:	bff9                	j	20105d2c <_free_r+0x28>
20105d50:	873e                	mv	a4,a5
20105d52:	43dc                	lw	a5,4(a5)
20105d54:	c399                	beqz	a5,20105d5a <_free_r+0x56>
20105d56:	fef47de3          	bgeu	s0,a5,20105d50 <_free_r+0x4c>
20105d5a:	4314                	lw	a3,0(a4)
20105d5c:	00d70633          	add	a2,a4,a3
20105d60:	00861f63          	bne	a2,s0,20105d7e <_free_r+0x7a>
20105d64:	4010                	lw	a2,0(s0)
20105d66:	96b2                	add	a3,a3,a2
20105d68:	c314                	sw	a3,0(a4)
20105d6a:	00d70633          	add	a2,a4,a3
20105d6e:	fcc790e3          	bne	a5,a2,20105d2e <_free_r+0x2a>
20105d72:	4390                	lw	a2,0(a5)
20105d74:	43dc                	lw	a5,4(a5)
20105d76:	96b2                	add	a3,a3,a2
20105d78:	c314                	sw	a3,0(a4)
20105d7a:	c35c                	sw	a5,4(a4)
20105d7c:	bf4d                	j	20105d2e <_free_r+0x2a>
20105d7e:	00c47563          	bgeu	s0,a2,20105d88 <_free_r+0x84>
20105d82:	47b1                	li	a5,12
20105d84:	c11c                	sw	a5,0(a0)
20105d86:	b765                	j	20105d2e <_free_r+0x2a>
20105d88:	4010                	lw	a2,0(s0)
20105d8a:	00c406b3          	add	a3,s0,a2
20105d8e:	00d79663          	bne	a5,a3,20105d9a <_free_r+0x96>
20105d92:	4394                	lw	a3,0(a5)
20105d94:	43dc                	lw	a5,4(a5)
20105d96:	96b2                	add	a3,a3,a2
20105d98:	c014                	sw	a3,0(s0)
20105d9a:	c05c                	sw	a5,4(s0)
20105d9c:	c340                	sw	s0,4(a4)
20105d9e:	bf41                	j	20105d2e <_free_r+0x2a>
20105da0:	8082                	ret

20105da2 <_malloc_r>:
_malloc_r():
20105da2:	1101                	add	sp,sp,-32
20105da4:	ca26                	sw	s1,20(sp)
20105da6:	00358493          	add	s1,a1,3
20105daa:	98f1                	and	s1,s1,-4
20105dac:	c84a                	sw	s2,16(sp)
20105dae:	ce06                	sw	ra,28(sp)
20105db0:	cc22                	sw	s0,24(sp)
20105db2:	c64e                	sw	s3,12(sp)
20105db4:	04a1                	add	s1,s1,8
20105db6:	47b1                	li	a5,12
20105db8:	892a                	mv	s2,a0
20105dba:	04f4f063          	bgeu	s1,a5,20105dfa <_malloc_r+0x58>
20105dbe:	44b1                	li	s1,12
20105dc0:	02b4ef63          	bltu	s1,a1,20105dfe <_malloc_r+0x5c>
20105dc4:	854a                	mv	a0,s2
20105dc6:	2bad                	jal	20106340 <__malloc_lock>
20105dc8:	83418693          	add	a3,gp,-1996 # 80000ab4 <__malloc_free_list>
20105dcc:	4298                	lw	a4,0(a3)
20105dce:	843a                	mv	s0,a4
20105dd0:	e031                	bnez	s0,20105e14 <_malloc_r+0x72>
20105dd2:	83018413          	add	s0,gp,-2000 # 80000ab0 <__malloc_sbrk_start>
20105dd6:	401c                	lw	a5,0(s0)
20105dd8:	e789                	bnez	a5,20105de2 <_malloc_r+0x40>
20105dda:	4581                	li	a1,0
20105ddc:	854a                	mv	a0,s2
20105dde:	2e51                	jal	20106172 <_sbrk_r>
20105de0:	c008                	sw	a0,0(s0)
20105de2:	85a6                	mv	a1,s1
20105de4:	854a                	mv	a0,s2
20105de6:	2671                	jal	20106172 <_sbrk_r>
20105de8:	59fd                	li	s3,-1
20105dea:	07351863          	bne	a0,s3,20105e5a <_malloc_r+0xb8>
20105dee:	47b1                	li	a5,12
20105df0:	00f92023          	sw	a5,0(s2)
20105df4:	854a                	mv	a0,s2
20105df6:	23b1                	jal	20106342 <__malloc_unlock>
20105df8:	a031                	j	20105e04 <_malloc_r+0x62>
20105dfa:	fc04d3e3          	bgez	s1,20105dc0 <_malloc_r+0x1e>
20105dfe:	47b1                	li	a5,12
20105e00:	00f92023          	sw	a5,0(s2)
20105e04:	4501                	li	a0,0
20105e06:	40f2                	lw	ra,28(sp)
20105e08:	4462                	lw	s0,24(sp)
20105e0a:	44d2                	lw	s1,20(sp)
20105e0c:	4942                	lw	s2,16(sp)
20105e0e:	49b2                	lw	s3,12(sp)
20105e10:	6105                	add	sp,sp,32
20105e12:	8082                	ret
20105e14:	401c                	lw	a5,0(s0)
20105e16:	8f85                	sub	a5,a5,s1
20105e18:	0207ce63          	bltz	a5,20105e54 <_malloc_r+0xb2>
20105e1c:	462d                	li	a2,11
20105e1e:	00f67663          	bgeu	a2,a5,20105e2a <_malloc_r+0x88>
20105e22:	c01c                	sw	a5,0(s0)
20105e24:	943e                	add	s0,s0,a5
20105e26:	c004                	sw	s1,0(s0)
20105e28:	a029                	j	20105e32 <_malloc_r+0x90>
20105e2a:	405c                	lw	a5,4(s0)
20105e2c:	02871263          	bne	a4,s0,20105e50 <_malloc_r+0xae>
20105e30:	c29c                	sw	a5,0(a3)
20105e32:	854a                	mv	a0,s2
20105e34:	2339                	jal	20106342 <__malloc_unlock>
20105e36:	00b40513          	add	a0,s0,11
20105e3a:	00440793          	add	a5,s0,4
20105e3e:	9961                	and	a0,a0,-8
20105e40:	40f50733          	sub	a4,a0,a5
20105e44:	fcf501e3          	beq	a0,a5,20105e06 <_malloc_r+0x64>
20105e48:	943a                	add	s0,s0,a4
20105e4a:	8f89                	sub	a5,a5,a0
20105e4c:	c01c                	sw	a5,0(s0)
20105e4e:	bf65                	j	20105e06 <_malloc_r+0x64>
20105e50:	c35c                	sw	a5,4(a4)
20105e52:	b7c5                	j	20105e32 <_malloc_r+0x90>
20105e54:	8722                	mv	a4,s0
20105e56:	4040                	lw	s0,4(s0)
20105e58:	bfa5                	j	20105dd0 <_malloc_r+0x2e>
20105e5a:	00350413          	add	s0,a0,3
20105e5e:	9871                	and	s0,s0,-4
20105e60:	fc8503e3          	beq	a0,s0,20105e26 <_malloc_r+0x84>
20105e64:	40a405b3          	sub	a1,s0,a0
20105e68:	854a                	mv	a0,s2
20105e6a:	2621                	jal	20106172 <_sbrk_r>
20105e6c:	fb351de3          	bne	a0,s3,20105e26 <_malloc_r+0x84>
20105e70:	bfbd                	j	20105dee <_malloc_r+0x4c>

20105e72 <__sfputc_r>:
__sfputc_r():
20105e72:	461c                	lw	a5,8(a2)
20105e74:	17fd                	add	a5,a5,-1
20105e76:	c61c                	sw	a5,8(a2)
20105e78:	0007da63          	bgez	a5,20105e8c <__sfputc_r+0x1a>
20105e7c:	4e18                	lw	a4,24(a2)
20105e7e:	00e7c563          	blt	a5,a4,20105e88 <__sfputc_r+0x16>
20105e82:	47a9                	li	a5,10
20105e84:	00f59463          	bne	a1,a5,20105e8c <__sfputc_r+0x1a>
20105e88:	f56ff06f          	j	201055de <__swbuf_r>
20105e8c:	421c                	lw	a5,0(a2)
20105e8e:	852e                	mv	a0,a1
20105e90:	00178713          	add	a4,a5,1
20105e94:	c218                	sw	a4,0(a2)
20105e96:	00b78023          	sb	a1,0(a5)
20105e9a:	8082                	ret

20105e9c <__sfputs_r>:
__sfputs_r():
20105e9c:	1101                	add	sp,sp,-32
20105e9e:	cc22                	sw	s0,24(sp)
20105ea0:	ca26                	sw	s1,20(sp)
20105ea2:	c84a                	sw	s2,16(sp)
20105ea4:	c64e                	sw	s3,12(sp)
20105ea6:	c452                	sw	s4,8(sp)
20105ea8:	ce06                	sw	ra,28(sp)
20105eaa:	892a                	mv	s2,a0
20105eac:	89ae                	mv	s3,a1
20105eae:	8432                	mv	s0,a2
20105eb0:	00d604b3          	add	s1,a2,a3
20105eb4:	5a7d                	li	s4,-1
20105eb6:	00941463          	bne	s0,s1,20105ebe <__sfputs_r+0x22>
20105eba:	4501                	li	a0,0
20105ebc:	a809                	j	20105ece <__sfputs_r+0x32>
20105ebe:	00044583          	lbu	a1,0(s0)
20105ec2:	864e                	mv	a2,s3
20105ec4:	854a                	mv	a0,s2
20105ec6:	3775                	jal	20105e72 <__sfputc_r>
20105ec8:	0405                	add	s0,s0,1
20105eca:	ff4516e3          	bne	a0,s4,20105eb6 <__sfputs_r+0x1a>
20105ece:	40f2                	lw	ra,28(sp)
20105ed0:	4462                	lw	s0,24(sp)
20105ed2:	44d2                	lw	s1,20(sp)
20105ed4:	4942                	lw	s2,16(sp)
20105ed6:	49b2                	lw	s3,12(sp)
20105ed8:	4a22                	lw	s4,8(sp)
20105eda:	6105                	add	sp,sp,32
20105edc:	8082                	ret

20105ede <_vfiprintf_r>:
_vfiprintf_r():
20105ede:	7135                	add	sp,sp,-160
20105ee0:	cd22                	sw	s0,152(sp)
20105ee2:	cb26                	sw	s1,148(sp)
20105ee4:	c94a                	sw	s2,144(sp)
20105ee6:	c74e                	sw	s3,140(sp)
20105ee8:	cf06                	sw	ra,156(sp)
20105eea:	c552                	sw	s4,136(sp)
20105eec:	c356                	sw	s5,132(sp)
20105eee:	c15a                	sw	s6,128(sp)
20105ef0:	dede                	sw	s7,124(sp)
20105ef2:	dce2                	sw	s8,120(sp)
20105ef4:	dae6                	sw	s9,116(sp)
20105ef6:	89aa                	mv	s3,a0
20105ef8:	84ae                	mv	s1,a1
20105efa:	8932                	mv	s2,a2
20105efc:	8436                	mv	s0,a3
20105efe:	c509                	beqz	a0,20105f08 <_vfiprintf_r+0x2a>
20105f00:	4d1c                	lw	a5,24(a0)
20105f02:	e399                	bnez	a5,20105f08 <_vfiprintf_r+0x2a>
20105f04:	aebff0ef          	jal	201059ee <__sinit>
20105f08:	ffffe797          	auipc	a5,0xffffe
20105f0c:	e6c78793          	add	a5,a5,-404 # 20103d74 <__sf_fake_stdin>
20105f10:	0cf49b63          	bne	s1,a5,20105fe6 <_vfiprintf_r+0x108>
20105f14:	0049a483          	lw	s1,4(s3)
20105f18:	00c4d783          	lhu	a5,12(s1)
20105f1c:	8ba1                	and	a5,a5,8
20105f1e:	c7f5                	beqz	a5,2010600a <_vfiprintf_r+0x12c>
20105f20:	489c                	lw	a5,16(s1)
20105f22:	c7e5                	beqz	a5,2010600a <_vfiprintf_r+0x12c>
20105f24:	02000793          	li	a5,32
20105f28:	02f104a3          	sb	a5,41(sp)
20105f2c:	03000793          	li	a5,48
20105f30:	d202                	sw	zero,36(sp)
20105f32:	02f10523          	sb	a5,42(sp)
20105f36:	c622                	sw	s0,12(sp)
20105f38:	02500b93          	li	s7,37
20105f3c:	ffffea97          	auipc	s5,0xffffe
20105f40:	e58a8a93          	add	s5,s5,-424 # 20103d94 <__sf_fake_stdin+0x20>
20105f44:	4c05                	li	s8,1
20105f46:	4b29                	li	s6,10
20105f48:	844a                	mv	s0,s2
20105f4a:	00044783          	lbu	a5,0(s0)
20105f4e:	c399                	beqz	a5,20105f54 <_vfiprintf_r+0x76>
20105f50:	0f779063          	bne	a5,s7,20106030 <_vfiprintf_r+0x152>
20105f54:	41240cb3          	sub	s9,s0,s2
20105f58:	01240d63          	beq	s0,s2,20105f72 <_vfiprintf_r+0x94>
20105f5c:	86e6                	mv	a3,s9
20105f5e:	864a                	mv	a2,s2
20105f60:	85a6                	mv	a1,s1
20105f62:	854e                	mv	a0,s3
20105f64:	3f25                	jal	20105e9c <__sfputs_r>
20105f66:	57fd                	li	a5,-1
20105f68:	1ef50363          	beq	a0,a5,2010614e <_vfiprintf_r+0x270>
20105f6c:	5792                	lw	a5,36(sp)
20105f6e:	97e6                	add	a5,a5,s9
20105f70:	d23e                	sw	a5,36(sp)
20105f72:	00044783          	lbu	a5,0(s0)
20105f76:	1c078c63          	beqz	a5,2010614e <_vfiprintf_r+0x270>
20105f7a:	57fd                	li	a5,-1
20105f7c:	00140913          	add	s2,s0,1
20105f80:	c802                	sw	zero,16(sp)
20105f82:	ce02                	sw	zero,28(sp)
20105f84:	ca3e                	sw	a5,20(sp)
20105f86:	cc02                	sw	zero,24(sp)
20105f88:	040109a3          	sb	zero,83(sp)
20105f8c:	d482                	sw	zero,104(sp)
20105f8e:	00094583          	lbu	a1,0(s2)
20105f92:	4615                	li	a2,5
20105f94:	8556                	mv	a0,s5
20105f96:	2e41                	jal	20106326 <memchr>
20105f98:	47c2                	lw	a5,16(sp)
20105f9a:	00190413          	add	s0,s2,1
20105f9e:	e959                	bnez	a0,20106034 <_vfiprintf_r+0x156>
20105fa0:	0107f713          	and	a4,a5,16
20105fa4:	c709                	beqz	a4,20105fae <_vfiprintf_r+0xd0>
20105fa6:	02000713          	li	a4,32
20105faa:	04e109a3          	sb	a4,83(sp)
20105fae:	0087f713          	and	a4,a5,8
20105fb2:	c709                	beqz	a4,20105fbc <_vfiprintf_r+0xde>
20105fb4:	02b00713          	li	a4,43
20105fb8:	04e109a3          	sb	a4,83(sp)
20105fbc:	00094683          	lbu	a3,0(s2)
20105fc0:	02a00713          	li	a4,42
20105fc4:	08e68063          	beq	a3,a4,20106044 <_vfiprintf_r+0x166>
20105fc8:	47f2                	lw	a5,28(sp)
20105fca:	844a                	mv	s0,s2
20105fcc:	4681                	li	a3,0
20105fce:	4625                	li	a2,9
20105fd0:	00044703          	lbu	a4,0(s0)
20105fd4:	00140593          	add	a1,s0,1
20105fd8:	fd070713          	add	a4,a4,-48
20105fdc:	0ae67a63          	bgeu	a2,a4,20106090 <_vfiprintf_r+0x1b2>
20105fe0:	cab5                	beqz	a3,20106054 <_vfiprintf_r+0x176>
20105fe2:	ce3e                	sw	a5,28(sp)
20105fe4:	a885                	j	20106054 <_vfiprintf_r+0x176>
20105fe6:	ffffe797          	auipc	a5,0xffffe
20105fea:	d6e78793          	add	a5,a5,-658 # 20103d54 <__sf_fake_stdout>
20105fee:	00f49563          	bne	s1,a5,20105ff8 <_vfiprintf_r+0x11a>
20105ff2:	0089a483          	lw	s1,8(s3)
20105ff6:	b70d                	j	20105f18 <_vfiprintf_r+0x3a>
20105ff8:	ffffe797          	auipc	a5,0xffffe
20105ffc:	d3c78793          	add	a5,a5,-708 # 20103d34 <__sf_fake_stderr>
20106000:	f0f49ce3          	bne	s1,a5,20105f18 <_vfiprintf_r+0x3a>
20106004:	00c9a483          	lw	s1,12(s3)
20106008:	bf01                	j	20105f18 <_vfiprintf_r+0x3a>
2010600a:	85a6                	mv	a1,s1
2010600c:	854e                	mv	a0,s3
2010600e:	e90ff0ef          	jal	2010569e <__swsetup_r>
20106012:	d909                	beqz	a0,20105f24 <_vfiprintf_r+0x46>
20106014:	557d                	li	a0,-1
20106016:	40fa                	lw	ra,156(sp)
20106018:	446a                	lw	s0,152(sp)
2010601a:	44da                	lw	s1,148(sp)
2010601c:	494a                	lw	s2,144(sp)
2010601e:	49ba                	lw	s3,140(sp)
20106020:	4a2a                	lw	s4,136(sp)
20106022:	4a9a                	lw	s5,132(sp)
20106024:	4b0a                	lw	s6,128(sp)
20106026:	5bf6                	lw	s7,124(sp)
20106028:	5c66                	lw	s8,120(sp)
2010602a:	5cd6                	lw	s9,116(sp)
2010602c:	610d                	add	sp,sp,160
2010602e:	8082                	ret
20106030:	0405                	add	s0,s0,1
20106032:	bf21                	j	20105f4a <_vfiprintf_r+0x6c>
20106034:	41550533          	sub	a0,a0,s5
20106038:	00ac1533          	sll	a0,s8,a0
2010603c:	8fc9                	or	a5,a5,a0
2010603e:	c83e                	sw	a5,16(sp)
20106040:	8922                	mv	s2,s0
20106042:	b7b1                	j	20105f8e <_vfiprintf_r+0xb0>
20106044:	4732                	lw	a4,12(sp)
20106046:	00470693          	add	a3,a4,4
2010604a:	4318                	lw	a4,0(a4)
2010604c:	c636                	sw	a3,12(sp)
2010604e:	02074a63          	bltz	a4,20106082 <_vfiprintf_r+0x1a4>
20106052:	ce3a                	sw	a4,28(sp)
20106054:	00044703          	lbu	a4,0(s0)
20106058:	02e00793          	li	a5,46
2010605c:	04f71e63          	bne	a4,a5,201060b8 <_vfiprintf_r+0x1da>
20106060:	00144703          	lbu	a4,1(s0)
20106064:	02a00793          	li	a5,42
20106068:	02f71a63          	bne	a4,a5,2010609c <_vfiprintf_r+0x1be>
2010606c:	47b2                	lw	a5,12(sp)
2010606e:	0409                	add	s0,s0,2
20106070:	00478713          	add	a4,a5,4
20106074:	439c                	lw	a5,0(a5)
20106076:	c63a                	sw	a4,12(sp)
20106078:	0007d363          	bgez	a5,2010607e <_vfiprintf_r+0x1a0>
2010607c:	57fd                	li	a5,-1
2010607e:	ca3e                	sw	a5,20(sp)
20106080:	a825                	j	201060b8 <_vfiprintf_r+0x1da>
20106082:	40e00733          	neg	a4,a4
20106086:	0027e793          	or	a5,a5,2
2010608a:	ce3a                	sw	a4,28(sp)
2010608c:	c83e                	sw	a5,16(sp)
2010608e:	b7d9                	j	20106054 <_vfiprintf_r+0x176>
20106090:	036787b3          	mul	a5,a5,s6
20106094:	842e                	mv	s0,a1
20106096:	4685                	li	a3,1
20106098:	97ba                	add	a5,a5,a4
2010609a:	bf1d                	j	20105fd0 <_vfiprintf_r+0xf2>
2010609c:	0405                	add	s0,s0,1
2010609e:	ca02                	sw	zero,20(sp)
201060a0:	4681                	li	a3,0
201060a2:	4781                	li	a5,0
201060a4:	4625                	li	a2,9
201060a6:	00044703          	lbu	a4,0(s0)
201060aa:	00140593          	add	a1,s0,1
201060ae:	fd070713          	add	a4,a4,-48
201060b2:	06e67463          	bgeu	a2,a4,2010611a <_vfiprintf_r+0x23c>
201060b6:	f6e1                	bnez	a3,2010607e <_vfiprintf_r+0x1a0>
201060b8:	00044583          	lbu	a1,0(s0)
201060bc:	460d                	li	a2,3
201060be:	ffffe517          	auipc	a0,0xffffe
201060c2:	cde50513          	add	a0,a0,-802 # 20103d9c <__sf_fake_stdin+0x28>
201060c6:	2485                	jal	20106326 <memchr>
201060c8:	cd11                	beqz	a0,201060e4 <_vfiprintf_r+0x206>
201060ca:	ffffe797          	auipc	a5,0xffffe
201060ce:	cd278793          	add	a5,a5,-814 # 20103d9c <__sf_fake_stdin+0x28>
201060d2:	8d1d                	sub	a0,a0,a5
201060d4:	47c2                	lw	a5,16(sp)
201060d6:	04000713          	li	a4,64
201060da:	00a71733          	sll	a4,a4,a0
201060de:	8fd9                	or	a5,a5,a4
201060e0:	0405                	add	s0,s0,1
201060e2:	c83e                	sw	a5,16(sp)
201060e4:	00044583          	lbu	a1,0(s0)
201060e8:	4619                	li	a2,6
201060ea:	ffffe517          	auipc	a0,0xffffe
201060ee:	cb650513          	add	a0,a0,-842 # 20103da0 <__sf_fake_stdin+0x2c>
201060f2:	00140913          	add	s2,s0,1
201060f6:	02b10423          	sb	a1,40(sp)
201060fa:	2435                	jal	20106326 <memchr>
201060fc:	c12d                	beqz	a0,2010615e <_vfiprintf_r+0x280>
201060fe:	00000793          	li	a5,0
20106102:	e795                	bnez	a5,2010612e <_vfiprintf_r+0x250>
20106104:	4742                	lw	a4,16(sp)
20106106:	47b2                	lw	a5,12(sp)
20106108:	10077713          	and	a4,a4,256
2010610c:	cf09                	beqz	a4,20106126 <_vfiprintf_r+0x248>
2010610e:	0791                	add	a5,a5,4
20106110:	c63e                	sw	a5,12(sp)
20106112:	5792                	lw	a5,36(sp)
20106114:	97d2                	add	a5,a5,s4
20106116:	d23e                	sw	a5,36(sp)
20106118:	bd05                	j	20105f48 <_vfiprintf_r+0x6a>
2010611a:	036787b3          	mul	a5,a5,s6
2010611e:	842e                	mv	s0,a1
20106120:	4685                	li	a3,1
20106122:	97ba                	add	a5,a5,a4
20106124:	b749                	j	201060a6 <_vfiprintf_r+0x1c8>
20106126:	079d                	add	a5,a5,7
20106128:	9be1                	and	a5,a5,-8
2010612a:	07a1                	add	a5,a5,8
2010612c:	b7d5                	j	20106110 <_vfiprintf_r+0x232>
2010612e:	0078                	add	a4,sp,12
20106130:	00000697          	auipc	a3,0x0
20106134:	d6c68693          	add	a3,a3,-660 # 20105e9c <__sfputs_r>
20106138:	8626                	mv	a2,s1
2010613a:	080c                	add	a1,sp,16
2010613c:	854e                	mv	a0,s3
2010613e:	00000097          	auipc	ra,0x0
20106142:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20106146:	57fd                	li	a5,-1
20106148:	8a2a                	mv	s4,a0
2010614a:	fcf514e3          	bne	a0,a5,20106112 <_vfiprintf_r+0x234>
2010614e:	00c4d783          	lhu	a5,12(s1)
20106152:	0407f793          	and	a5,a5,64
20106156:	ea079fe3          	bnez	a5,20106014 <_vfiprintf_r+0x136>
2010615a:	5512                	lw	a0,36(sp)
2010615c:	bd6d                	j	20106016 <_vfiprintf_r+0x138>
2010615e:	0078                	add	a4,sp,12
20106160:	00000697          	auipc	a3,0x0
20106164:	d3c68693          	add	a3,a3,-708 # 20105e9c <__sfputs_r>
20106168:	8626                	mv	a2,s1
2010616a:	080c                	add	a1,sp,16
2010616c:	854e                	mv	a0,s3
2010616e:	24dd                	jal	20106454 <_printf_i>
20106170:	bfd9                	j	20106146 <_vfiprintf_r+0x268>

20106172 <_sbrk_r>:
_sbrk_r():
20106172:	1141                	add	sp,sp,-16
20106174:	c422                	sw	s0,8(sp)
20106176:	842a                	mv	s0,a0
20106178:	852e                	mv	a0,a1
2010617a:	8201ac23          	sw	zero,-1992(gp) # 80000ab8 <errno>
2010617e:	c606                	sw	ra,12(sp)
20106180:	262050ef          	jal	2010b3e2 <_sbrk>
20106184:	57fd                	li	a5,-1
20106186:	00f51663          	bne	a0,a5,20106192 <_sbrk_r+0x20>
2010618a:	8381a783          	lw	a5,-1992(gp) # 80000ab8 <errno>
2010618e:	c391                	beqz	a5,20106192 <_sbrk_r+0x20>
20106190:	c01c                	sw	a5,0(s0)
20106192:	40b2                	lw	ra,12(sp)
20106194:	4422                	lw	s0,8(sp)
20106196:	0141                	add	sp,sp,16
20106198:	8082                	ret

2010619a <__sread>:
__sread():
2010619a:	1141                	add	sp,sp,-16
2010619c:	c422                	sw	s0,8(sp)
2010619e:	842e                	mv	s0,a1
201061a0:	00e59583          	lh	a1,14(a1)
201061a4:	c606                	sw	ra,12(sp)
201061a6:	2315                	jal	201066ca <_read_r>
201061a8:	00054963          	bltz	a0,201061ba <__sread+0x20>
201061ac:	487c                	lw	a5,84(s0)
201061ae:	97aa                	add	a5,a5,a0
201061b0:	c87c                	sw	a5,84(s0)
201061b2:	40b2                	lw	ra,12(sp)
201061b4:	4422                	lw	s0,8(sp)
201061b6:	0141                	add	sp,sp,16
201061b8:	8082                	ret
201061ba:	00c45783          	lhu	a5,12(s0)
201061be:	777d                	lui	a4,0xfffff
201061c0:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd88f>
201061c2:	8ff9                	and	a5,a5,a4
201061c4:	00f41623          	sh	a5,12(s0)
201061c8:	b7ed                	j	201061b2 <__sread+0x18>

201061ca <__swrite>:
__swrite():
201061ca:	00c5d783          	lhu	a5,12(a1)
201061ce:	1101                	add	sp,sp,-32
201061d0:	cc22                	sw	s0,24(sp)
201061d2:	ca26                	sw	s1,20(sp)
201061d4:	c84a                	sw	s2,16(sp)
201061d6:	c64e                	sw	s3,12(sp)
201061d8:	ce06                	sw	ra,28(sp)
201061da:	1007f793          	and	a5,a5,256
201061de:	84aa                	mv	s1,a0
201061e0:	842e                	mv	s0,a1
201061e2:	8932                	mv	s2,a2
201061e4:	89b6                	mv	s3,a3
201061e6:	c791                	beqz	a5,201061f2 <__swrite+0x28>
201061e8:	00e59583          	lh	a1,14(a1)
201061ec:	4689                	li	a3,2
201061ee:	4601                	li	a2,0
201061f0:	2229                	jal	201062fa <_lseek_r>
201061f2:	00c45783          	lhu	a5,12(s0)
201061f6:	777d                	lui	a4,0xfffff
201061f8:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd88f>
201061fa:	8ff9                	and	a5,a5,a4
201061fc:	00e41583          	lh	a1,14(s0)
20106200:	00f41623          	sh	a5,12(s0)
20106204:	4462                	lw	s0,24(sp)
20106206:	40f2                	lw	ra,28(sp)
20106208:	86ce                	mv	a3,s3
2010620a:	864a                	mv	a2,s2
2010620c:	49b2                	lw	s3,12(sp)
2010620e:	4942                	lw	s2,16(sp)
20106210:	8526                	mv	a0,s1
20106212:	44d2                	lw	s1,20(sp)
20106214:	6105                	add	sp,sp,32
20106216:	a83d                	j	20106254 <_write_r>

20106218 <__sseek>:
__sseek():
20106218:	1141                	add	sp,sp,-16
2010621a:	c422                	sw	s0,8(sp)
2010621c:	842e                	mv	s0,a1
2010621e:	00e59583          	lh	a1,14(a1)
20106222:	c606                	sw	ra,12(sp)
20106224:	28d9                	jal	201062fa <_lseek_r>
20106226:	577d                	li	a4,-1
20106228:	00c45783          	lhu	a5,12(s0)
2010622c:	00e51b63          	bne	a0,a4,20106242 <__sseek+0x2a>
20106230:	777d                	lui	a4,0xfffff
20106232:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd88f>
20106234:	8ff9                	and	a5,a5,a4
20106236:	00f41623          	sh	a5,12(s0)
2010623a:	40b2                	lw	ra,12(sp)
2010623c:	4422                	lw	s0,8(sp)
2010623e:	0141                	add	sp,sp,16
20106240:	8082                	ret
20106242:	6705                	lui	a4,0x1
20106244:	8fd9                	or	a5,a5,a4
20106246:	00f41623          	sh	a5,12(s0)
2010624a:	c868                	sw	a0,84(s0)
2010624c:	b7fd                	j	2010623a <__sseek+0x22>

2010624e <__sclose>:
__sclose():
2010624e:	00e59583          	lh	a1,14(a1)
20106252:	a03d                	j	20106280 <_close_r>

20106254 <_write_r>:
_write_r():
20106254:	1141                	add	sp,sp,-16
20106256:	c422                	sw	s0,8(sp)
20106258:	842a                	mv	s0,a0
2010625a:	852e                	mv	a0,a1
2010625c:	85b2                	mv	a1,a2
2010625e:	8636                	mv	a2,a3
20106260:	8201ac23          	sw	zero,-1992(gp) # 80000ab8 <errno>
20106264:	c606                	sw	ra,12(sp)
20106266:	1e6050ef          	jal	2010b44c <_write>
2010626a:	57fd                	li	a5,-1
2010626c:	00f51663          	bne	a0,a5,20106278 <_write_r+0x24>
20106270:	8381a783          	lw	a5,-1992(gp) # 80000ab8 <errno>
20106274:	c391                	beqz	a5,20106278 <_write_r+0x24>
20106276:	c01c                	sw	a5,0(s0)
20106278:	40b2                	lw	ra,12(sp)
2010627a:	4422                	lw	s0,8(sp)
2010627c:	0141                	add	sp,sp,16
2010627e:	8082                	ret

20106280 <_close_r>:
_close_r():
20106280:	1141                	add	sp,sp,-16
20106282:	c422                	sw	s0,8(sp)
20106284:	842a                	mv	s0,a0
20106286:	852e                	mv	a0,a1
20106288:	8201ac23          	sw	zero,-1992(gp) # 80000ab8 <errno>
2010628c:	c606                	sw	ra,12(sp)
2010628e:	098050ef          	jal	2010b326 <_close>
20106292:	57fd                	li	a5,-1
20106294:	00f51663          	bne	a0,a5,201062a0 <_close_r+0x20>
20106298:	8381a783          	lw	a5,-1992(gp) # 80000ab8 <errno>
2010629c:	c391                	beqz	a5,201062a0 <_close_r+0x20>
2010629e:	c01c                	sw	a5,0(s0)
201062a0:	40b2                	lw	ra,12(sp)
201062a2:	4422                	lw	s0,8(sp)
201062a4:	0141                	add	sp,sp,16
201062a6:	8082                	ret

201062a8 <_fstat_r>:
_fstat_r():
201062a8:	1141                	add	sp,sp,-16
201062aa:	c422                	sw	s0,8(sp)
201062ac:	842a                	mv	s0,a0
201062ae:	852e                	mv	a0,a1
201062b0:	85b2                	mv	a1,a2
201062b2:	8201ac23          	sw	zero,-1992(gp) # 80000ab8 <errno>
201062b6:	c606                	sw	ra,12(sp)
201062b8:	090050ef          	jal	2010b348 <_fstat>
201062bc:	57fd                	li	a5,-1
201062be:	00f51663          	bne	a0,a5,201062ca <_fstat_r+0x22>
201062c2:	8381a783          	lw	a5,-1992(gp) # 80000ab8 <errno>
201062c6:	c391                	beqz	a5,201062ca <_fstat_r+0x22>
201062c8:	c01c                	sw	a5,0(s0)
201062ca:	40b2                	lw	ra,12(sp)
201062cc:	4422                	lw	s0,8(sp)
201062ce:	0141                	add	sp,sp,16
201062d0:	8082                	ret

201062d2 <_isatty_r>:
_isatty_r():
201062d2:	1141                	add	sp,sp,-16
201062d4:	c422                	sw	s0,8(sp)
201062d6:	842a                	mv	s0,a0
201062d8:	852e                	mv	a0,a1
201062da:	8201ac23          	sw	zero,-1992(gp) # 80000ab8 <errno>
201062de:	c606                	sw	ra,12(sp)
201062e0:	08e050ef          	jal	2010b36e <_isatty>
201062e4:	57fd                	li	a5,-1
201062e6:	00f51663          	bne	a0,a5,201062f2 <_isatty_r+0x20>
201062ea:	8381a783          	lw	a5,-1992(gp) # 80000ab8 <errno>
201062ee:	c391                	beqz	a5,201062f2 <_isatty_r+0x20>
201062f0:	c01c                	sw	a5,0(s0)
201062f2:	40b2                	lw	ra,12(sp)
201062f4:	4422                	lw	s0,8(sp)
201062f6:	0141                	add	sp,sp,16
201062f8:	8082                	ret

201062fa <_lseek_r>:
_lseek_r():
201062fa:	1141                	add	sp,sp,-16
201062fc:	c422                	sw	s0,8(sp)
201062fe:	842a                	mv	s0,a0
20106300:	852e                	mv	a0,a1
20106302:	85b2                	mv	a1,a2
20106304:	8636                	mv	a2,a3
20106306:	8201ac23          	sw	zero,-1992(gp) # 80000ab8 <errno>
2010630a:	c606                	sw	ra,12(sp)
2010630c:	082050ef          	jal	2010b38e <_lseek>
20106310:	57fd                	li	a5,-1
20106312:	00f51663          	bne	a0,a5,2010631e <_lseek_r+0x24>
20106316:	8381a783          	lw	a5,-1992(gp) # 80000ab8 <errno>
2010631a:	c391                	beqz	a5,2010631e <_lseek_r+0x24>
2010631c:	c01c                	sw	a5,0(s0)
2010631e:	40b2                	lw	ra,12(sp)
20106320:	4422                	lw	s0,8(sp)
20106322:	0141                	add	sp,sp,16
20106324:	8082                	ret

20106326 <memchr>:
memchr():
20106326:	0ff5f593          	zext.b	a1,a1
2010632a:	962a                	add	a2,a2,a0
2010632c:	00c51463          	bne	a0,a2,20106334 <memchr+0xe>
20106330:	4501                	li	a0,0
20106332:	8082                	ret
20106334:	00054783          	lbu	a5,0(a0)
20106338:	feb78de3          	beq	a5,a1,20106332 <memchr+0xc>
2010633c:	0505                	add	a0,a0,1
2010633e:	b7fd                	j	2010632c <memchr+0x6>

20106340 <__malloc_lock>:
__malloc_lock():
20106340:	8082                	ret

20106342 <__malloc_unlock>:
__malloc_unlock():
20106342:	8082                	ret

20106344 <_printf_common>:
_printf_common():
20106344:	7179                	add	sp,sp,-48
20106346:	ca56                	sw	s5,20(sp)
20106348:	499c                	lw	a5,16(a1)
2010634a:	8aba                	mv	s5,a4
2010634c:	4598                	lw	a4,8(a1)
2010634e:	d422                	sw	s0,40(sp)
20106350:	d04a                	sw	s2,32(sp)
20106352:	ce4e                	sw	s3,28(sp)
20106354:	cc52                	sw	s4,24(sp)
20106356:	d606                	sw	ra,44(sp)
20106358:	d226                	sw	s1,36(sp)
2010635a:	c85a                	sw	s6,16(sp)
2010635c:	c65e                	sw	s7,12(sp)
2010635e:	89aa                	mv	s3,a0
20106360:	842e                	mv	s0,a1
20106362:	8932                	mv	s2,a2
20106364:	8a36                	mv	s4,a3
20106366:	00e7d363          	bge	a5,a4,2010636c <_printf_common+0x28>
2010636a:	87ba                	mv	a5,a4
2010636c:	00f92023          	sw	a5,0(s2)
20106370:	04344703          	lbu	a4,67(s0)
20106374:	c701                	beqz	a4,2010637c <_printf_common+0x38>
20106376:	0785                	add	a5,a5,1
20106378:	00f92023          	sw	a5,0(s2)
2010637c:	401c                	lw	a5,0(s0)
2010637e:	0207f793          	and	a5,a5,32
20106382:	c791                	beqz	a5,2010638e <_printf_common+0x4a>
20106384:	00092783          	lw	a5,0(s2)
20106388:	0789                	add	a5,a5,2
2010638a:	00f92023          	sw	a5,0(s2)
2010638e:	4004                	lw	s1,0(s0)
20106390:	8899                	and	s1,s1,6
20106392:	e891                	bnez	s1,201063a6 <_printf_common+0x62>
20106394:	01940b13          	add	s6,s0,25
20106398:	5bfd                	li	s7,-1
2010639a:	445c                	lw	a5,12(s0)
2010639c:	00092703          	lw	a4,0(s2)
201063a0:	8f99                	sub	a5,a5,a4
201063a2:	04f4cc63          	blt	s1,a5,201063fa <_printf_common+0xb6>
201063a6:	04344783          	lbu	a5,67(s0)
201063aa:	00f036b3          	snez	a3,a5
201063ae:	401c                	lw	a5,0(s0)
201063b0:	0207f793          	and	a5,a5,32
201063b4:	eba5                	bnez	a5,20106424 <_printf_common+0xe0>
201063b6:	04340613          	add	a2,s0,67
201063ba:	85d2                	mv	a1,s4
201063bc:	854e                	mv	a0,s3
201063be:	9a82                	jalr	s5
201063c0:	57fd                	li	a5,-1
201063c2:	04f50363          	beq	a0,a5,20106408 <_printf_common+0xc4>
201063c6:	401c                	lw	a5,0(s0)
201063c8:	4711                	li	a4,4
201063ca:	4481                	li	s1,0
201063cc:	8b99                	and	a5,a5,6
201063ce:	00e79963          	bne	a5,a4,201063e0 <_printf_common+0x9c>
201063d2:	4444                	lw	s1,12(s0)
201063d4:	00092783          	lw	a5,0(s2)
201063d8:	8c9d                	sub	s1,s1,a5
201063da:	0004d363          	bgez	s1,201063e0 <_printf_common+0x9c>
201063de:	4481                	li	s1,0
201063e0:	441c                	lw	a5,8(s0)
201063e2:	4818                	lw	a4,16(s0)
201063e4:	00f75463          	bge	a4,a5,201063ec <_printf_common+0xa8>
201063e8:	8f99                	sub	a5,a5,a4
201063ea:	94be                	add	s1,s1,a5
201063ec:	4901                	li	s2,0
201063ee:	0469                	add	s0,s0,26
201063f0:	5b7d                	li	s6,-1
201063f2:	05249863          	bne	s1,s2,20106442 <_printf_common+0xfe>
201063f6:	4501                	li	a0,0
201063f8:	a809                	j	2010640a <_printf_common+0xc6>
201063fa:	4685                	li	a3,1
201063fc:	865a                	mv	a2,s6
201063fe:	85d2                	mv	a1,s4
20106400:	854e                	mv	a0,s3
20106402:	9a82                	jalr	s5
20106404:	01751e63          	bne	a0,s7,20106420 <_printf_common+0xdc>
20106408:	557d                	li	a0,-1
2010640a:	50b2                	lw	ra,44(sp)
2010640c:	5422                	lw	s0,40(sp)
2010640e:	5492                	lw	s1,36(sp)
20106410:	5902                	lw	s2,32(sp)
20106412:	49f2                	lw	s3,28(sp)
20106414:	4a62                	lw	s4,24(sp)
20106416:	4ad2                	lw	s5,20(sp)
20106418:	4b42                	lw	s6,16(sp)
2010641a:	4bb2                	lw	s7,12(sp)
2010641c:	6145                	add	sp,sp,48
2010641e:	8082                	ret
20106420:	0485                	add	s1,s1,1
20106422:	bfa5                	j	2010639a <_printf_common+0x56>
20106424:	00d40733          	add	a4,s0,a3
20106428:	03000613          	li	a2,48
2010642c:	04c701a3          	sb	a2,67(a4) # 1043 <__heap_size+0x843>
20106430:	04544703          	lbu	a4,69(s0)
20106434:	00168793          	add	a5,a3,1
20106438:	97a2                	add	a5,a5,s0
2010643a:	0689                	add	a3,a3,2
2010643c:	04e781a3          	sb	a4,67(a5)
20106440:	bf9d                	j	201063b6 <_printf_common+0x72>
20106442:	4685                	li	a3,1
20106444:	8622                	mv	a2,s0
20106446:	85d2                	mv	a1,s4
20106448:	854e                	mv	a0,s3
2010644a:	9a82                	jalr	s5
2010644c:	fb650ee3          	beq	a0,s6,20106408 <_printf_common+0xc4>
20106450:	0905                	add	s2,s2,1
20106452:	b745                	j	201063f2 <_printf_common+0xae>

20106454 <_printf_i>:
_printf_i():
20106454:	7179                	add	sp,sp,-48
20106456:	d422                	sw	s0,40(sp)
20106458:	d04a                	sw	s2,32(sp)
2010645a:	ce4e                	sw	s3,28(sp)
2010645c:	cc52                	sw	s4,24(sp)
2010645e:	d606                	sw	ra,44(sp)
20106460:	d226                	sw	s1,36(sp)
20106462:	ca56                	sw	s5,20(sp)
20106464:	c85a                	sw	s6,16(sp)
20106466:	0185c803          	lbu	a6,24(a1)
2010646a:	07800793          	li	a5,120
2010646e:	892a                	mv	s2,a0
20106470:	842e                	mv	s0,a1
20106472:	89b2                	mv	s3,a2
20106474:	8a36                	mv	s4,a3
20106476:	0307e263          	bltu	a5,a6,2010649a <_printf_i+0x46>
2010647a:	06200793          	li	a5,98
2010647e:	04358693          	add	a3,a1,67
20106482:	0307e163          	bltu	a5,a6,201064a4 <_printf_i+0x50>
20106486:	1c080a63          	beqz	a6,2010665a <_printf_i+0x206>
2010648a:	05800793          	li	a5,88
2010648e:	ffffe617          	auipc	a2,0xffffe
20106492:	91a60613          	add	a2,a2,-1766 # 20103da8 <__sf_fake_stdin+0x34>
20106496:	14f80763          	beq	a6,a5,201065e4 <_printf_i+0x190>
2010649a:	04240493          	add	s1,s0,66
2010649e:	05040123          	sb	a6,66(s0)
201064a2:	a815                	j	201064d6 <_printf_i+0x82>
201064a4:	f9d80793          	add	a5,a6,-99
201064a8:	0ff7f793          	zext.b	a5,a5
201064ac:	4655                	li	a2,21
201064ae:	fef666e3          	bltu	a2,a5,2010649a <_printf_i+0x46>
201064b2:	ffffe617          	auipc	a2,0xffffe
201064b6:	91e60613          	add	a2,a2,-1762 # 20103dd0 <__sf_fake_stdin+0x5c>
201064ba:	078a                	sll	a5,a5,0x2
201064bc:	97b2                	add	a5,a5,a2
201064be:	439c                	lw	a5,0(a5)
201064c0:	97b2                	add	a5,a5,a2
201064c2:	8782                	jr	a5
201064c4:	431c                	lw	a5,0(a4)
201064c6:	04258493          	add	s1,a1,66
201064ca:	00478693          	add	a3,a5,4
201064ce:	439c                	lw	a5,0(a5)
201064d0:	c314                	sw	a3,0(a4)
201064d2:	04f58123          	sb	a5,66(a1)
201064d6:	4785                	li	a5,1
201064d8:	a255                	j	2010667c <_printf_i+0x228>
201064da:	4190                	lw	a2,0(a1)
201064dc:	431c                	lw	a5,0(a4)
201064de:	08067513          	and	a0,a2,128
201064e2:	00478593          	add	a1,a5,4
201064e6:	c139                	beqz	a0,2010652c <_printf_i+0xd8>
201064e8:	439c                	lw	a5,0(a5)
201064ea:	c30c                	sw	a1,0(a4)
201064ec:	4058                	lw	a4,4(s0)
201064ee:	1207dc63          	bgez	a5,20106626 <_printf_i+0x1d2>
201064f2:	02d00593          	li	a1,45
201064f6:	04b401a3          	sb	a1,67(s0)
201064fa:	c418                	sw	a4,8(s0)
201064fc:	04075063          	bgez	a4,2010653c <_printf_i+0xe8>
20106500:	40f007b3          	neg	a5,a5
20106504:	ffffe617          	auipc	a2,0xffffe
20106508:	8a460613          	add	a2,a2,-1884 # 20103da8 <__sf_fake_stdin+0x34>
2010650c:	4829                	li	a6,10
2010650e:	84b6                	mv	s1,a3
20106510:	0307f733          	remu	a4,a5,a6
20106514:	14fd                	add	s1,s1,-1
20106516:	9732                	add	a4,a4,a2
20106518:	00074703          	lbu	a4,0(a4)
2010651c:	00e48023          	sb	a4,0(s1)
20106520:	873e                	mv	a4,a5
20106522:	0307d7b3          	divu	a5,a5,a6
20106526:	ff0775e3          	bgeu	a4,a6,20106510 <_printf_i+0xbc>
2010652a:	a8b1                	j	20106586 <_printf_i+0x132>
2010652c:	439c                	lw	a5,0(a5)
2010652e:	04067513          	and	a0,a2,64
20106532:	c30c                	sw	a1,0(a4)
20106534:	dd45                	beqz	a0,201064ec <_printf_i+0x98>
20106536:	07c2                	sll	a5,a5,0x10
20106538:	87c1                	sra	a5,a5,0x10
2010653a:	bf4d                	j	201064ec <_printf_i+0x98>
2010653c:	9a6d                	and	a2,a2,-5
2010653e:	c010                	sw	a2,0(s0)
20106540:	b7c1                	j	20106500 <_printf_i+0xac>
20106542:	418c                	lw	a1,0(a1)
20106544:	4310                	lw	a2,0(a4)
20106546:	0805f513          	and	a0,a1,128
2010654a:	421c                	lw	a5,0(a2)
2010654c:	0611                	add	a2,a2,4
2010654e:	e511                	bnez	a0,2010655a <_printf_i+0x106>
20106550:	0405f593          	and	a1,a1,64
20106554:	c199                	beqz	a1,2010655a <_printf_i+0x106>
20106556:	07c2                	sll	a5,a5,0x10
20106558:	83c1                	srl	a5,a5,0x10
2010655a:	c310                	sw	a2,0(a4)
2010655c:	06f00713          	li	a4,111
20106560:	ffffe617          	auipc	a2,0xffffe
20106564:	84860613          	add	a2,a2,-1976 # 20103da8 <__sf_fake_stdin+0x34>
20106568:	0ae81d63          	bne	a6,a4,20106622 <_printf_i+0x1ce>
2010656c:	4821                	li	a6,8
2010656e:	040401a3          	sb	zero,67(s0)
20106572:	4058                	lw	a4,4(s0)
20106574:	c418                	sw	a4,8(s0)
20106576:	f8074ce3          	bltz	a4,2010650e <_printf_i+0xba>
2010657a:	400c                	lw	a1,0(s0)
2010657c:	99ed                	and	a1,a1,-5
2010657e:	c00c                	sw	a1,0(s0)
20106580:	f7d9                	bnez	a5,2010650e <_printf_i+0xba>
20106582:	84b6                	mv	s1,a3
20106584:	f749                	bnez	a4,2010650e <_printf_i+0xba>
20106586:	47a1                	li	a5,8
20106588:	00f81e63          	bne	a6,a5,201065a4 <_printf_i+0x150>
2010658c:	401c                	lw	a5,0(s0)
2010658e:	8b85                	and	a5,a5,1
20106590:	cb91                	beqz	a5,201065a4 <_printf_i+0x150>
20106592:	4058                	lw	a4,4(s0)
20106594:	481c                	lw	a5,16(s0)
20106596:	00e7c763          	blt	a5,a4,201065a4 <_printf_i+0x150>
2010659a:	03000793          	li	a5,48
2010659e:	fef48fa3          	sb	a5,-1(s1)
201065a2:	14fd                	add	s1,s1,-1
201065a4:	8e85                	sub	a3,a3,s1
201065a6:	c814                	sw	a3,16(s0)
201065a8:	8752                	mv	a4,s4
201065aa:	86ce                	mv	a3,s3
201065ac:	0070                	add	a2,sp,12
201065ae:	85a2                	mv	a1,s0
201065b0:	854a                	mv	a0,s2
201065b2:	3b49                	jal	20106344 <_printf_common>
201065b4:	5afd                	li	s5,-1
201065b6:	0d551763          	bne	a0,s5,20106684 <_printf_i+0x230>
201065ba:	557d                	li	a0,-1
201065bc:	50b2                	lw	ra,44(sp)
201065be:	5422                	lw	s0,40(sp)
201065c0:	5492                	lw	s1,36(sp)
201065c2:	5902                	lw	s2,32(sp)
201065c4:	49f2                	lw	s3,28(sp)
201065c6:	4a62                	lw	s4,24(sp)
201065c8:	4ad2                	lw	s5,20(sp)
201065ca:	4b42                	lw	s6,16(sp)
201065cc:	6145                	add	sp,sp,48
201065ce:	8082                	ret
201065d0:	419c                	lw	a5,0(a1)
201065d2:	0207e793          	or	a5,a5,32
201065d6:	c19c                	sw	a5,0(a1)
201065d8:	07800813          	li	a6,120
201065dc:	ffffd617          	auipc	a2,0xffffd
201065e0:	7e060613          	add	a2,a2,2016 # 20103dbc <__sf_fake_stdin+0x48>
201065e4:	050402a3          	sb	a6,69(s0)
201065e8:	400c                	lw	a1,0(s0)
201065ea:	4308                	lw	a0,0(a4)
201065ec:	0805f813          	and	a6,a1,128
201065f0:	411c                	lw	a5,0(a0)
201065f2:	0511                	add	a0,a0,4
201065f4:	00081863          	bnez	a6,20106604 <_printf_i+0x1b0>
201065f8:	0405f813          	and	a6,a1,64
201065fc:	00080463          	beqz	a6,20106604 <_printf_i+0x1b0>
20106600:	07c2                	sll	a5,a5,0x10
20106602:	83c1                	srl	a5,a5,0x10
20106604:	c308                	sw	a0,0(a4)
20106606:	0015f713          	and	a4,a1,1
2010660a:	c701                	beqz	a4,20106612 <_printf_i+0x1be>
2010660c:	0205e593          	or	a1,a1,32
20106610:	c00c                	sw	a1,0(s0)
20106612:	c399                	beqz	a5,20106618 <_printf_i+0x1c4>
20106614:	4841                	li	a6,16
20106616:	bfa1                	j	2010656e <_printf_i+0x11a>
20106618:	4018                	lw	a4,0(s0)
2010661a:	fdf77713          	and	a4,a4,-33
2010661e:	c018                	sw	a4,0(s0)
20106620:	bfd5                	j	20106614 <_printf_i+0x1c0>
20106622:	4829                	li	a6,10
20106624:	b7a9                	j	2010656e <_printf_i+0x11a>
20106626:	ffffd617          	auipc	a2,0xffffd
2010662a:	78260613          	add	a2,a2,1922 # 20103da8 <__sf_fake_stdin+0x34>
2010662e:	4829                	li	a6,10
20106630:	b789                	j	20106572 <_printf_i+0x11e>
20106632:	4190                	lw	a2,0(a1)
20106634:	431c                	lw	a5,0(a4)
20106636:	49cc                	lw	a1,20(a1)
20106638:	08067813          	and	a6,a2,128
2010663c:	00478513          	add	a0,a5,4
20106640:	00080663          	beqz	a6,2010664c <_printf_i+0x1f8>
20106644:	c308                	sw	a0,0(a4)
20106646:	439c                	lw	a5,0(a5)
20106648:	c38c                	sw	a1,0(a5)
2010664a:	a801                	j	2010665a <_printf_i+0x206>
2010664c:	c308                	sw	a0,0(a4)
2010664e:	04067613          	and	a2,a2,64
20106652:	439c                	lw	a5,0(a5)
20106654:	da75                	beqz	a2,20106648 <_printf_i+0x1f4>
20106656:	00b79023          	sh	a1,0(a5)
2010665a:	00042823          	sw	zero,16(s0)
2010665e:	84b6                	mv	s1,a3
20106660:	b7a1                	j	201065a8 <_printf_i+0x154>
20106662:	431c                	lw	a5,0(a4)
20106664:	41d0                	lw	a2,4(a1)
20106666:	4581                	li	a1,0
20106668:	00478693          	add	a3,a5,4
2010666c:	c314                	sw	a3,0(a4)
2010666e:	4384                	lw	s1,0(a5)
20106670:	8526                	mv	a0,s1
20106672:	3955                	jal	20106326 <memchr>
20106674:	c119                	beqz	a0,2010667a <_printf_i+0x226>
20106676:	8d05                	sub	a0,a0,s1
20106678:	c048                	sw	a0,4(s0)
2010667a:	405c                	lw	a5,4(s0)
2010667c:	c81c                	sw	a5,16(s0)
2010667e:	040401a3          	sb	zero,67(s0)
20106682:	b71d                	j	201065a8 <_printf_i+0x154>
20106684:	4814                	lw	a3,16(s0)
20106686:	8626                	mv	a2,s1
20106688:	85ce                	mv	a1,s3
2010668a:	854a                	mv	a0,s2
2010668c:	9a02                	jalr	s4
2010668e:	f35506e3          	beq	a0,s5,201065ba <_printf_i+0x166>
20106692:	401c                	lw	a5,0(s0)
20106694:	8b89                	and	a5,a5,2
20106696:	e78d                	bnez	a5,201066c0 <_printf_i+0x26c>
20106698:	47b2                	lw	a5,12(sp)
2010669a:	4448                	lw	a0,12(s0)
2010669c:	f2f550e3          	bge	a0,a5,201065bc <_printf_i+0x168>
201066a0:	853e                	mv	a0,a5
201066a2:	bf29                	j	201065bc <_printf_i+0x168>
201066a4:	4685                	li	a3,1
201066a6:	8656                	mv	a2,s5
201066a8:	85ce                	mv	a1,s3
201066aa:	854a                	mv	a0,s2
201066ac:	9a02                	jalr	s4
201066ae:	f16506e3          	beq	a0,s6,201065ba <_printf_i+0x166>
201066b2:	0485                	add	s1,s1,1
201066b4:	445c                	lw	a5,12(s0)
201066b6:	4732                	lw	a4,12(sp)
201066b8:	8f99                	sub	a5,a5,a4
201066ba:	fef4c5e3          	blt	s1,a5,201066a4 <_printf_i+0x250>
201066be:	bfe9                	j	20106698 <_printf_i+0x244>
201066c0:	4481                	li	s1,0
201066c2:	01940a93          	add	s5,s0,25
201066c6:	5b7d                	li	s6,-1
201066c8:	b7f5                	j	201066b4 <_printf_i+0x260>

201066ca <_read_r>:
_read_r():
201066ca:	1141                	add	sp,sp,-16
201066cc:	c422                	sw	s0,8(sp)
201066ce:	842a                	mv	s0,a0
201066d0:	852e                	mv	a0,a1
201066d2:	85b2                	mv	a1,a2
201066d4:	8636                	mv	a2,a3
201066d6:	8201ac23          	sw	zero,-1992(gp) # 80000ab8 <errno>
201066da:	c606                	sw	ra,12(sp)
201066dc:	4dd040ef          	jal	2010b3b8 <_read>
201066e0:	57fd                	li	a5,-1
201066e2:	00f51663          	bne	a0,a5,201066ee <_read_r+0x24>
201066e6:	8381a783          	lw	a5,-1992(gp) # 80000ab8 <errno>
201066ea:	c391                	beqz	a5,201066ee <_read_r+0x24>
201066ec:	c01c                	sw	a5,0(s0)
201066ee:	40b2                	lw	ra,12(sp)
201066f0:	4422                	lw	s0,8(sp)
201066f2:	0141                	add	sp,sp,16
201066f4:	8082                	ret

201066f6 <metal_cpu_get_mtime>:
metal_cpu_get_mtime():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:97
 * will be 0.
 *
 * @param cpu The CPU device handle
 * @return The value of mtime, or 0 if failure
 */
__inline__ unsigned long long metal_cpu_get_mtime(struct metal_cpu *cpu) {
201066f6:	1101                	add	sp,sp,-32
201066f8:	ce06                	sw	ra,28(sp)
201066fa:	cc22                	sw	s0,24(sp)
201066fc:	1000                	add	s0,sp,32
201066fe:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:98
    return cpu->vtable->mtime_get(cpu);
20106702:	fec42783          	lw	a5,-20(s0)
20106706:	439c                	lw	a5,0(a5)
20106708:	479c                	lw	a5,8(a5)
2010670a:	fec42503          	lw	a0,-20(s0)
2010670e:	9782                	jalr	a5
20106710:	872a                	mv	a4,a0
20106712:	87ae                	mv	a5,a1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:99
}
20106714:	853a                	mv	a0,a4
20106716:	85be                	mv	a1,a5
20106718:	40f2                	lw	ra,28(sp)
2010671a:	4462                	lw	s0,24(sp)
2010671c:	6105                	add	sp,sp,32
2010671e:	8082                	ret

20106720 <metal_cpu_set_mtimecmp>:
metal_cpu_set_mtimecmp():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:112
 * @param cpu The CPU device handle
 * @param time The value to set the compare register to
 * @return The value of mtimecmp or -1 if error
 */
__inline__ int metal_cpu_set_mtimecmp(struct metal_cpu *cpu,
                                      unsigned long long time) {
20106720:	1101                	add	sp,sp,-32
20106722:	ce06                	sw	ra,28(sp)
20106724:	cc22                	sw	s0,24(sp)
20106726:	1000                	add	s0,sp,32
20106728:	fea42623          	sw	a0,-20(s0)
2010672c:	feb42023          	sw	a1,-32(s0)
20106730:	fec42223          	sw	a2,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:113
    return cpu->vtable->mtimecmp_set(cpu, time);
20106734:	fec42783          	lw	a5,-20(s0)
20106738:	439c                	lw	a5,0(a5)
2010673a:	47dc                	lw	a5,12(a5)
2010673c:	fe042583          	lw	a1,-32(s0)
20106740:	fe442603          	lw	a2,-28(s0)
20106744:	fec42503          	lw	a0,-20(s0)
20106748:	9782                	jalr	a5
2010674a:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:114
}
2010674c:	853e                	mv	a0,a5
2010674e:	40f2                	lw	ra,28(sp)
20106750:	4462                	lw	s0,24(sp)
20106752:	6105                	add	sp,sp,32
20106754:	8082                	ret

20106756 <metal_cpu_timer_interrupt_controller>:
metal_cpu_timer_interrupt_controller():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:126
 *
 * @param cpu The CPU device handle
 * @return A pointer to the timer interrupt handle
 */
__inline__ struct metal_interrupt *
metal_cpu_timer_interrupt_controller(struct metal_cpu *cpu) {
20106756:	1101                	add	sp,sp,-32
20106758:	ce06                	sw	ra,28(sp)
2010675a:	cc22                	sw	s0,24(sp)
2010675c:	1000                	add	s0,sp,32
2010675e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:127
    return cpu->vtable->tmr_controller_interrupt(cpu);
20106762:	fec42783          	lw	a5,-20(s0)
20106766:	439c                	lw	a5,0(a5)
20106768:	4b9c                	lw	a5,16(a5)
2010676a:	fec42503          	lw	a0,-20(s0)
2010676e:	9782                	jalr	a5
20106770:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:128
}
20106772:	853e                	mv	a0,a5
20106774:	40f2                	lw	ra,28(sp)
20106776:	4462                	lw	s0,24(sp)
20106778:	6105                	add	sp,sp,32
2010677a:	8082                	ret

2010677c <metal_cpu_timer_get_interrupt_id>:
metal_cpu_timer_get_interrupt_id():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:137
 * Get the interrupt ID of the real-time clock interrupt
 *
 * @param cpu The CPU device handle
 * @return The timer interrupt ID
 */
__inline__ int metal_cpu_timer_get_interrupt_id(struct metal_cpu *cpu) {
2010677c:	1101                	add	sp,sp,-32
2010677e:	ce06                	sw	ra,28(sp)
20106780:	cc22                	sw	s0,24(sp)
20106782:	1000                	add	s0,sp,32
20106784:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:138
    return cpu->vtable->get_tmr_interrupt_id(cpu);
20106788:	fec42783          	lw	a5,-20(s0)
2010678c:	439c                	lw	a5,0(a5)
2010678e:	4bdc                	lw	a5,20(a5)
20106790:	fec42503          	lw	a0,-20(s0)
20106794:	9782                	jalr	a5
20106796:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:139
}
20106798:	853e                	mv	a0,a5
2010679a:	40f2                	lw	ra,28(sp)
2010679c:	4462                	lw	s0,24(sp)
2010679e:	6105                	add	sp,sp,32
201067a0:	8082                	ret

201067a2 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
201067a2:	1101                	add	sp,sp,-32
201067a4:	ce06                	sw	ra,28(sp)
201067a6:	cc22                	sw	s0,24(sp)
201067a8:	1000                	add	s0,sp,32
201067aa:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
201067ae:	fec42783          	lw	a5,-20(s0)
201067b2:	439c                	lw	a5,0(a5)
201067b4:	57dc                	lw	a5,44(a5)
201067b6:	fec42503          	lw	a0,-20(s0)
201067ba:	9782                	jalr	a5
201067bc:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/cpu.h:226
}
201067be:	853e                	mv	a0,a5
201067c0:	40f2                	lw	ra,28(sp)
201067c2:	4462                	lw	s0,24(sp)
201067c4:	6105                	add	sp,sp,32
201067c6:	8082                	ret

201067c8 <metal_cpu_get>:
metal_cpu_get():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
201067c8:	1101                	add	sp,sp,-32
201067ca:	ce22                	sw	s0,28(sp)
201067cc:	1000                	add	s0,sp,32
201067ce:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
201067d2:	fec42783          	lw	a5,-20(s0)
201067d6:	eb99                	bnez	a5,201067ec <metal_cpu_get+0x24>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
201067d8:	800017b7          	lui	a5,0x80001
201067dc:	fec42703          	lw	a4,-20(s0)
201067e0:	070a                	sll	a4,a4,0x2
201067e2:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
201067e6:	97ba                	add	a5,a5,a4
201067e8:	439c                	lw	a5,0(a5)
201067ea:	a011                	j	201067ee <metal_cpu_get+0x26>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:11
    }
    return NULL;
201067ec:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:12
}
201067ee:	853e                	mv	a0,a5
201067f0:	4472                	lw	s0,28(sp)
201067f2:	6105                	add	sp,sp,32
201067f4:	8082                	ret

201067f6 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
201067f6:	1101                	add	sp,sp,-32
201067f8:	ce22                	sw	s0,28(sp)
201067fa:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
201067fc:	f14027f3          	csrr	a5,mhartid
20106800:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:18
    return mhartid;
20106804:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/cpu.c:20
#endif
}
20106808:	853e                	mv	a0,a5
2010680a:	4472                	lw	s0,28(sp)
2010680c:	6105                	add	sp,sp,32
2010680e:	8082                	ret

20106810 <metal_interrupt_init>:
metal_interrupt_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:130
 * before any interrupts are registered or enabled with the handler. It
 * is invalid to initialize an interrupt controller more than once.
 *
 * @param controller The handle for the interrupt controller
 */
__inline__ void metal_interrupt_init(struct metal_interrupt *controller) {
20106810:	1101                	add	sp,sp,-32
20106812:	ce06                	sw	ra,28(sp)
20106814:	cc22                	sw	s0,24(sp)
20106816:	1000                	add	s0,sp,32
20106818:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:131
    controller->vtable->interrupt_init(controller);
2010681c:	fec42783          	lw	a5,-20(s0)
20106820:	439c                	lw	a5,0(a5)
20106822:	439c                	lw	a5,0(a5)
20106824:	fec42503          	lw	a0,-20(s0)
20106828:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:132
}
2010682a:	0001                	nop
2010682c:	40f2                	lw	ra,28(sp)
2010682e:	4462                	lw	s0,24(sp)
20106830:	6105                	add	sp,sp,32
20106832:	8082                	ret

20106834 <metal_interrupt_register_handler>:
metal_interrupt_register_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:240
 * @return 0 upon success
 */
__inline__ int
metal_interrupt_register_handler(struct metal_interrupt *controller, int id,
                                 metal_interrupt_handler_t handler,
                                 void *priv_data) {
20106834:	1101                	add	sp,sp,-32
20106836:	ce06                	sw	ra,28(sp)
20106838:	cc22                	sw	s0,24(sp)
2010683a:	1000                	add	s0,sp,32
2010683c:	fea42623          	sw	a0,-20(s0)
20106840:	feb42423          	sw	a1,-24(s0)
20106844:	fec42223          	sw	a2,-28(s0)
20106848:	fed42023          	sw	a3,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:241
    return controller->vtable->interrupt_register(controller, id, handler,
2010684c:	fec42783          	lw	a5,-20(s0)
20106850:	439c                	lw	a5,0(a5)
20106852:	4fdc                	lw	a5,28(a5)
20106854:	fe042683          	lw	a3,-32(s0)
20106858:	fe442603          	lw	a2,-28(s0)
2010685c:	fe842583          	lw	a1,-24(s0)
20106860:	fec42503          	lw	a0,-20(s0)
20106864:	9782                	jalr	a5
20106866:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:243
                                                  priv_data);
}
20106868:	853e                	mv	a0,a5
2010686a:	40f2                	lw	ra,28(sp)
2010686c:	4462                	lw	s0,24(sp)
2010686e:	6105                	add	sp,sp,32
20106870:	8082                	ret

20106872 <metal_interrupt_enable>:
metal_interrupt_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:267
 * @param controller The handle for the interrupt controller
 * @param id The interrupt ID to enable
 * @return 0 upon success
 */
__inline__ int metal_interrupt_enable(struct metal_interrupt *controller,
                                      int id) {
20106872:	1101                	add	sp,sp,-32
20106874:	ce06                	sw	ra,28(sp)
20106876:	cc22                	sw	s0,24(sp)
20106878:	1000                	add	s0,sp,32
2010687a:	fea42623          	sw	a0,-20(s0)
2010687e:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:268
    return controller->vtable->interrupt_enable(controller, id);
20106882:	fec42783          	lw	a5,-20(s0)
20106886:	439c                	lw	a5,0(a5)
20106888:	53dc                	lw	a5,36(a5)
2010688a:	fe842583          	lw	a1,-24(s0)
2010688e:	fec42503          	lw	a0,-20(s0)
20106892:	9782                	jalr	a5
20106894:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:269
}
20106896:	853e                	mv	a0,a5
20106898:	40f2                	lw	ra,28(sp)
2010689a:	4462                	lw	s0,24(sp)
2010689c:	6105                	add	sp,sp,32
2010689e:	8082                	ret

201068a0 <metal_interrupt_disable>:
metal_interrupt_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:278
 * @param controller The handle for the interrupt controller
 * @param id The interrupt ID to disable
 * @return 0 upon success
 */
__inline__ int metal_interrupt_disable(struct metal_interrupt *controller,
                                       int id) {
201068a0:	1101                	add	sp,sp,-32
201068a2:	ce06                	sw	ra,28(sp)
201068a4:	cc22                	sw	s0,24(sp)
201068a6:	1000                	add	s0,sp,32
201068a8:	fea42623          	sw	a0,-20(s0)
201068ac:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:279
    return controller->vtable->interrupt_disable(controller, id);
201068b0:	fec42783          	lw	a5,-20(s0)
201068b4:	439c                	lw	a5,0(a5)
201068b6:	579c                	lw	a5,40(a5)
201068b8:	fe842583          	lw	a1,-24(s0)
201068bc:	fec42503          	lw	a0,-20(s0)
201068c0:	9782                	jalr	a5
201068c2:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/interrupt.h:280
}
201068c4:	853e                	mv	a0,a5
201068c6:	40f2                	lw	ra,28(sp)
201068c8:	4462                	lw	s0,24(sp)
201068ca:	6105                	add	sp,sp,32
201068cc:	8082                	ret

201068ce <metal_led_enable>:
metal_led_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:49

/*!
 * @brief Enable an LED
 * @param led The handle for the LED
 */
__inline__ void metal_led_enable(struct metal_led *led) {
201068ce:	1101                	add	sp,sp,-32
201068d0:	ce06                	sw	ra,28(sp)
201068d2:	cc22                	sw	s0,24(sp)
201068d4:	1000                	add	s0,sp,32
201068d6:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:50
    led->vtable->led_enable(led);
201068da:	fec42783          	lw	a5,-20(s0)
201068de:	439c                	lw	a5,0(a5)
201068e0:	43dc                	lw	a5,4(a5)
201068e2:	fec42503          	lw	a0,-20(s0)
201068e6:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:51
}
201068e8:	0001                	nop
201068ea:	40f2                	lw	ra,28(sp)
201068ec:	4462                	lw	s0,24(sp)
201068ee:	6105                	add	sp,sp,32
201068f0:	8082                	ret

201068f2 <metal_led_on>:
metal_led_on():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:57

/*!
 * @brief Turn an LED on
 * @param led The handle for the LED
 */
__inline__ void metal_led_on(struct metal_led *led) {
201068f2:	1101                	add	sp,sp,-32
201068f4:	ce06                	sw	ra,28(sp)
201068f6:	cc22                	sw	s0,24(sp)
201068f8:	1000                	add	s0,sp,32
201068fa:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:58
    led->vtable->led_on(led);
201068fe:	fec42783          	lw	a5,-20(s0)
20106902:	439c                	lw	a5,0(a5)
20106904:	479c                	lw	a5,8(a5)
20106906:	fec42503          	lw	a0,-20(s0)
2010690a:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:59
}
2010690c:	0001                	nop
2010690e:	40f2                	lw	ra,28(sp)
20106910:	4462                	lw	s0,24(sp)
20106912:	6105                	add	sp,sp,32
20106914:	8082                	ret

20106916 <metal_led_off>:
metal_led_off():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:65

/*!
 * @brief Turn an LED off
 * @param led The handle for the LED
 */
__inline__ void metal_led_off(struct metal_led *led) {
20106916:	1101                	add	sp,sp,-32
20106918:	ce06                	sw	ra,28(sp)
2010691a:	cc22                	sw	s0,24(sp)
2010691c:	1000                	add	s0,sp,32
2010691e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:66
    led->vtable->led_off(led);
20106922:	fec42783          	lw	a5,-20(s0)
20106926:	439c                	lw	a5,0(a5)
20106928:	47dc                	lw	a5,12(a5)
2010692a:	fec42503          	lw	a0,-20(s0)
2010692e:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/led.h:67
}
20106930:	0001                	nop
20106932:	40f2                	lw	ra,28(sp)
20106934:	4462                	lw	s0,24(sp)
20106936:	6105                	add	sp,sp,32
20106938:	8082                	ret

2010693a <metal_led_get_rgb>:
metal_led_get_rgb():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:8

#include <metal/led.h>
#include <metal/machine.h>
#include <string.h>

struct metal_led *metal_led_get_rgb(char *label, char *color) {
2010693a:	7175                	add	sp,sp,-144
2010693c:	c706                	sw	ra,140(sp)
2010693e:	c522                	sw	s0,136(sp)
20106940:	0900                	add	s0,sp,144
20106942:	f6a42e23          	sw	a0,-132(s0)
20106946:	f6b42c23          	sw	a1,-136(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:13
    int i;
    struct metal_led *led;
    char led_label[100];

    if ((__METAL_DT_MAX_LEDS == 0) || (label == NULL) || (color == NULL)) {
2010694a:	f7c42783          	lw	a5,-132(s0)
2010694e:	c781                	beqz	a5,20106956 <metal_led_get_rgb+0x1c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:13 (discriminator 1)
20106950:	f7842783          	lw	a5,-136(s0)
20106954:	e399                	bnez	a5,2010695a <metal_led_get_rgb+0x20>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:14
        return NULL;
20106956:	4781                	li	a5,0
20106958:	a0bd                	j	201069c6 <metal_led_get_rgb+0x8c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:17
    }

    strcpy(led_label, label);
2010695a:	f8440793          	add	a5,s0,-124
2010695e:	f7c42583          	lw	a1,-132(s0)
20106962:	853e                	mv	a0,a5
20106964:	561040ef          	jal	2010b6c4 <strcpy>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:18
    strcat(led_label, color);
20106968:	f8440793          	add	a5,s0,-124
2010696c:	f7842583          	lw	a1,-136(s0)
20106970:	853e                	mv	a0,a5
20106972:	419040ef          	jal	2010b58a <strcat>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:19
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
20106976:	fe042623          	sw	zero,-20(s0)
2010697a:	a081                	j	201069ba <metal_led_get_rgb+0x80>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:20
        led = (struct metal_led *)__metal_led_table[i];
2010697c:	800007b7          	lui	a5,0x80000
20106980:	06078713          	add	a4,a5,96 # 80000060 <__metal_led_table>
20106984:	fec42783          	lw	a5,-20(s0)
20106988:	078a                	sll	a5,a5,0x2
2010698a:	97ba                	add	a5,a5,a4
2010698c:	439c                	lw	a5,0(a5)
2010698e:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:21
        if (led->vtable->led_exist(led, led_label)) {
20106992:	fe842783          	lw	a5,-24(s0)
20106996:	439c                	lw	a5,0(a5)
20106998:	439c                	lw	a5,0(a5)
2010699a:	f8440713          	add	a4,s0,-124
2010699e:	85ba                	mv	a1,a4
201069a0:	fe842503          	lw	a0,-24(s0)
201069a4:	9782                	jalr	a5
201069a6:	87aa                	mv	a5,a0
201069a8:	c781                	beqz	a5,201069b0 <metal_led_get_rgb+0x76>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:22
            return led;
201069aa:	fe842783          	lw	a5,-24(s0)
201069ae:	a821                	j	201069c6 <metal_led_get_rgb+0x8c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:19 (discriminator 2)
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
201069b0:	fec42783          	lw	a5,-20(s0)
201069b4:	0785                	add	a5,a5,1
201069b6:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:19 (discriminator 1)
201069ba:	fec42703          	lw	a4,-20(s0)
201069be:	4789                	li	a5,2
201069c0:	fae7dee3          	bge	a5,a4,2010697c <metal_led_get_rgb+0x42>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:25
        }
    }
    return NULL;
201069c4:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/led.c:26 (discriminator 1)
}
201069c6:	853e                	mv	a0,a5
201069c8:	40ba                	lw	ra,140(sp)
201069ca:	442a                	lw	s0,136(sp)
201069cc:	6149                	add	sp,sp,144
201069ce:	8082                	ret

201069d0 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:208
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
201069d0:	1101                	add	sp,sp,-32
201069d2:	ce22                	sw	s0,28(sp)
201069d4:	1000                	add	s0,sp,32
201069d6:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:209
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
201069da:	fec42703          	lw	a4,-20(s0)
201069de:	800017b7          	lui	a5,0x80001
201069e2:	a8878793          	add	a5,a5,-1400 # 80000a88 <__metal_dt_clint_2000000>
201069e6:	00f71563          	bne	a4,a5,201069f0 <__metal_driver_sifive_clint0_control_base+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:210
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
201069ea:	020007b7          	lui	a5,0x2000
201069ee:	a011                	j	201069f2 <__metal_driver_sifive_clint0_control_base+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:213
	}
	else {
		return 0;
201069f0:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:215
	}
}
201069f2:	853e                	mv	a0,a5
201069f4:	4472                	lw	s0,28(sp)
201069f6:	6105                	add	sp,sp,32
201069f8:	8082                	ret

201069fa <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:228
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
201069fa:	1101                	add	sp,sp,-32
201069fc:	ce22                	sw	s0,28(sp)
201069fe:	1000                	add	s0,sp,32
20106a00:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:229
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20106a04:	fec42703          	lw	a4,-20(s0)
20106a08:	800017b7          	lui	a5,0x80001
20106a0c:	a8878793          	add	a5,a5,-1400 # 80000a88 <__metal_dt_clint_2000000>
20106a10:	00f71463          	bne	a4,a5,20106a18 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:230
		return METAL_MAX_CLINT_INTERRUPTS;
20106a14:	4789                	li	a5,2
20106a16:	a011                	j	20106a1a <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:233
	}
	else {
		return 0;
20106a18:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:235
	}
}
20106a1a:	853e                	mv	a0,a5
20106a1c:	4472                	lw	s0,28(sp)
20106a1e:	6105                	add	sp,sp,32
20106a20:	8082                	ret

20106a22 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:238

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20106a22:	1101                	add	sp,sp,-32
20106a24:	ce22                	sw	s0,28(sp)
20106a26:	1000                	add	s0,sp,32
20106a28:	fea42623          	sw	a0,-20(s0)
20106a2c:	feb42423          	sw	a1,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:239
	if (idx == 0) {
20106a30:	fe842783          	lw	a5,-24(s0)
20106a34:	e791                	bnez	a5,20106a40 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:240
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20106a36:	800007b7          	lui	a5,0x80000
20106a3a:	09078793          	add	a5,a5,144 # 80000090 <__metal_dt_cpu_0_interrupt_controller>
20106a3e:	a821                	j	20106a56 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:242
	}
	else if (idx == 1) {
20106a40:	fe842703          	lw	a4,-24(s0)
20106a44:	4785                	li	a5,1
20106a46:	00f71763          	bne	a4,a5,20106a54 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:243
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20106a4a:	800007b7          	lui	a5,0x80000
20106a4e:	09078793          	add	a5,a5,144 # 80000090 <__metal_dt_cpu_0_interrupt_controller>
20106a52:	a011                	j	20106a56 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:246
	}
	else {
		return NULL;
20106a54:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:248
	}
}
20106a56:	853e                	mv	a0,a5
20106a58:	4472                	lw	s0,28(sp)
20106a5a:	6105                	add	sp,sp,32
20106a5c:	8082                	ret

20106a5e <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:251

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20106a5e:	1101                	add	sp,sp,-32
20106a60:	ce22                	sw	s0,28(sp)
20106a62:	1000                	add	s0,sp,32
20106a64:	fea42623          	sw	a0,-20(s0)
20106a68:	feb42423          	sw	a1,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:252
	if (idx == 0) {
20106a6c:	fe842783          	lw	a5,-24(s0)
20106a70:	e399                	bnez	a5,20106a76 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:253
		return 3;
20106a72:	478d                	li	a5,3
20106a74:	a809                	j	20106a86 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:255
	}
	else if (idx == 1) {
20106a76:	fe842703          	lw	a4,-24(s0)
20106a7a:	4785                	li	a5,1
20106a7c:	00f71463          	bne	a4,a5,20106a84 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:256
		return 7;
20106a80:	479d                	li	a5,7
20106a82:	a011                	j	20106a86 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:259
	}
	else {
		return 0;
20106a84:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:261
	}
}
20106a86:	853e                	mv	a0,a5
20106a88:	4472                	lw	s0,28(sp)
20106a8a:	6105                	add	sp,sp,32
20106a8c:	8082                	ret

20106a8e <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20106a8e:	715d                	add	sp,sp,-80
20106a90:	c686                	sw	ra,76(sp)
20106a92:	c4a2                	sw	s0,72(sp)
20106a94:	c2ca                	sw	s2,68(sp)
20106a96:	c0ce                	sw	s3,64(sp)
20106a98:	de52                	sw	s4,60(sp)
20106a9a:	dc56                	sw	s5,56(sp)
20106a9c:	da5a                	sw	s6,52(sp)
20106a9e:	d85e                	sw	s7,48(sp)
20106aa0:	d662                	sw	s8,44(sp)
20106aa2:	d466                	sw	s9,40(sp)
20106aa4:	0880                	add	s0,sp,80
20106aa6:	faa42e23          	sw	a0,-68(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20106aaa:	fbc42783          	lw	a5,-68(s0)
20106aae:	853e                	mv	a0,a5
20106ab0:	3705                	jal	201069d0 <__metal_driver_sifive_clint0_control_base>
20106ab2:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20106ab6:	fcc42703          	lw	a4,-52(s0)
20106aba:	67b1                	lui	a5,0xc
20106abc:	17f1                	add	a5,a5,-4 # bffc <__heap_size+0xb7fc>
20106abe:	97ba                	add	a5,a5,a4
20106ac0:	439c                	lw	a5,0(a5)
20106ac2:	fcf42423          	sw	a5,-56(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20106ac6:	fcc42703          	lw	a4,-52(s0)
20106aca:	67b1                	lui	a5,0xc
20106acc:	17e1                	add	a5,a5,-8 # bff8 <__heap_size+0xb7f8>
20106ace:	97ba                	add	a5,a5,a4
20106ad0:	439c                	lw	a5,0(a5)
20106ad2:	fcf42223          	sw	a5,-60(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20106ad6:	fcc42703          	lw	a4,-52(s0)
20106ada:	67b1                	lui	a5,0xc
20106adc:	17f1                	add	a5,a5,-4 # bffc <__heap_size+0xb7fc>
20106ade:	97ba                	add	a5,a5,a4
20106ae0:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:27 (discriminator 1)
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);
20106ae2:	fc842703          	lw	a4,-56(s0)
20106ae6:	fcf718e3          	bne	a4,a5,20106ab6 <__metal_clint0_mtime_get+0x28>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:29

    return (((unsigned long long)hi) << 32) | lo;
20106aea:	fc842783          	lw	a5,-56(s0)
20106aee:	8c3e                	mv	s8,a5
20106af0:	4c81                	li	s9,0
20106af2:	000c1993          	sll	s3,s8,0x0
20106af6:	4901                	li	s2,0
20106af8:	fc442783          	lw	a5,-60(s0)
20106afc:	8a3e                	mv	s4,a5
20106afe:	4a81                	li	s5,0
20106b00:	01496b33          	or	s6,s2,s4
20106b04:	0159ebb3          	or	s7,s3,s5
20106b08:	875a                	mv	a4,s6
20106b0a:	87de                	mv	a5,s7
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:30
}
20106b0c:	853a                	mv	a0,a4
20106b0e:	85be                	mv	a1,a5
20106b10:	40b6                	lw	ra,76(sp)
20106b12:	4426                	lw	s0,72(sp)
20106b14:	4916                	lw	s2,68(sp)
20106b16:	4986                	lw	s3,64(sp)
20106b18:	5a72                	lw	s4,60(sp)
20106b1a:	5ae2                	lw	s5,56(sp)
20106b1c:	5b52                	lw	s6,52(sp)
20106b1e:	5bc2                	lw	s7,48(sp)
20106b20:	5c32                	lw	s8,44(sp)
20106b22:	5ca2                	lw	s9,40(sp)
20106b24:	6161                	add	sp,sp,80
20106b26:	8082                	ret

20106b28 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20106b28:	7179                	add	sp,sp,-48
20106b2a:	d606                	sw	ra,44(sp)
20106b2c:	d422                	sw	s0,40(sp)
20106b2e:	d24a                	sw	s2,36(sp)
20106b30:	d04e                	sw	s3,32(sp)
20106b32:	1800                	add	s0,sp,48
20106b34:	fca42e23          	sw	a0,-36(s0)
20106b38:	fcb42c23          	sw	a1,-40(s0)
20106b3c:	fcc42823          	sw	a2,-48(s0)
20106b40:	fcd42a23          	sw	a3,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20106b44:	fdc42783          	lw	a5,-36(s0)
20106b48:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20106b4c:	fec42783          	lw	a5,-20(s0)
20106b50:	853e                	mv	a0,a5
20106b52:	3dbd                	jal	201069d0 <__metal_driver_sifive_clint0_control_base>
20106b54:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20106b58:	fd842783          	lw	a5,-40(s0)
20106b5c:	078e                	sll	a5,a5,0x3
20106b5e:	873e                	mv	a4,a5
20106b60:	fe842783          	lw	a5,-24(s0)
20106b64:	973e                	add	a4,a4,a5
20106b66:	6791                	lui	a5,0x4
20106b68:	0791                	add	a5,a5,4 # 4004 <__heap_size+0x3804>
20106b6a:	97ba                	add	a5,a5,a4
20106b6c:	873e                	mv	a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20106b6e:	57fd                	li	a5,-1
20106b70:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20106b72:	fd842783          	lw	a5,-40(s0)
20106b76:	078e                	sll	a5,a5,0x3
20106b78:	873e                	mv	a4,a5
20106b7a:	fe842783          	lw	a5,-24(s0)
20106b7e:	973e                	add	a4,a4,a5
20106b80:	6791                	lui	a5,0x4
20106b82:	97ba                	add	a5,a5,a4
20106b84:	873e                	mv	a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20106b86:	fd042783          	lw	a5,-48(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20106b8a:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20106b8c:	fd442783          	lw	a5,-44(s0)
20106b90:	0007d913          	srl	s2,a5,0x0
20106b94:	4981                	li	s3,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20106b96:	fd842783          	lw	a5,-40(s0)
20106b9a:	078e                	sll	a5,a5,0x3
20106b9c:	873e                	mv	a4,a5
20106b9e:	fe842783          	lw	a5,-24(s0)
20106ba2:	973e                	add	a4,a4,a5
20106ba4:	6791                	lui	a5,0x4
20106ba6:	0791                	add	a5,a5,4 # 4004 <__heap_size+0x3804>
20106ba8:	97ba                	add	a5,a5,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20106baa:	874a                	mv	a4,s2
20106bac:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20106bae:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:55
}
20106bb0:	853e                	mv	a0,a5
20106bb2:	50b2                	lw	ra,44(sp)
20106bb4:	5422                	lw	s0,40(sp)
20106bb6:	5912                	lw	s2,36(sp)
20106bb8:	5982                	lw	s3,32(sp)
20106bba:	6145                	add	sp,sp,48
20106bbc:	8082                	ret

20106bbe <_get_cpu_intc>:
_get_cpu_intc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20106bbe:	1101                	add	sp,sp,-32
20106bc0:	ce06                	sw	ra,28(sp)
20106bc2:	cc22                	sw	s0,24(sp)
20106bc4:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20106bc6:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20106bca:	f14027f3          	csrr	a5,mhartid
20106bce:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20106bd2:	fec42783          	lw	a5,-20(s0)
20106bd6:	853e                	mv	a0,a5
20106bd8:	bf1ff0ef          	jal	201067c8 <metal_cpu_get>
20106bdc:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20106be0:	fe842503          	lw	a0,-24(s0)
20106be4:	bbfff0ef          	jal	201067a2 <metal_cpu_interrupt_controller>
20106be8:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:65
}
20106bea:	853e                	mv	a0,a5
20106bec:	40f2                	lw	ra,28(sp)
20106bee:	4462                	lw	s0,24(sp)
20106bf0:	6105                	add	sp,sp,32
20106bf2:	8082                	ret

20106bf4 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20106bf4:	7139                	add	sp,sp,-64
20106bf6:	de06                	sw	ra,60(sp)
20106bf8:	dc22                	sw	s0,56(sp)
20106bfa:	0080                	add	s0,sp,64
20106bfc:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20106c00:	fcc42503          	lw	a0,-52(s0)
20106c04:	3bdd                	jal	201069fa <__metal_driver_sifive_clint0_num_interrupts>
20106c06:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20106c0a:	fcc42783          	lw	a5,-52(s0)
20106c0e:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20106c12:	fe442783          	lw	a5,-28(s0)
20106c16:	43dc                	lw	a5,4(a5)
20106c18:	efa9                	bnez	a5,20106c72 <__metal_driver_riscv_clint0_init+0x7e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20106c1a:	fe042623          	sw	zero,-20(s0)
20106c1e:	a081                	j	20106c5e <__metal_driver_riscv_clint0_init+0x6a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20106c20:	fec42583          	lw	a1,-20(s0)
20106c24:	fcc42503          	lw	a0,-52(s0)
20106c28:	3bed                	jal	20106a22 <__metal_driver_sifive_clint0_interrupt_parents>
20106c2a:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20106c2e:	fec42583          	lw	a1,-20(s0)
20106c32:	fcc42503          	lw	a0,-52(s0)
20106c36:	3525                	jal	20106a5e <__metal_driver_sifive_clint0_interrupt_lines>
20106c38:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20106c3c:	fe042783          	lw	a5,-32(s0)
20106c40:	439c                	lw	a5,0(a5)
20106c42:	4fdc                	lw	a5,28(a5)
20106c44:	fcc42683          	lw	a3,-52(s0)
20106c48:	4601                	li	a2,0
20106c4a:	fdc42583          	lw	a1,-36(s0)
20106c4e:	fe042503          	lw	a0,-32(s0)
20106c52:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20106c54:	fec42783          	lw	a5,-20(s0)
20106c58:	0785                	add	a5,a5,1
20106c5a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20106c5e:	fec42703          	lw	a4,-20(s0)
20106c62:	fe842783          	lw	a5,-24(s0)
20106c66:	faf74de3          	blt	a4,a5,20106c20 <__metal_driver_riscv_clint0_init+0x2c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20106c6a:	fe442783          	lw	a5,-28(s0)
20106c6e:	4705                	li	a4,1
20106c70:	c3d8                	sw	a4,4(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20106c72:	0001                	nop
20106c74:	50f2                	lw	ra,60(sp)
20106c76:	5462                	lw	s0,56(sp)
20106c78:	6121                	add	sp,sp,64
20106c7a:	8082                	ret

20106c7c <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20106c7c:	7139                	add	sp,sp,-64
20106c7e:	de06                	sw	ra,60(sp)
20106c80:	dc22                	sw	s0,56(sp)
20106c82:	0080                	add	s0,sp,64
20106c84:	fca42623          	sw	a0,-52(s0)
20106c88:	fcb42423          	sw	a1,-56(s0)
20106c8c:	fcc42223          	sw	a2,-60(s0)
20106c90:	fcd42023          	sw	a3,-64(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20106c94:	57fd                	li	a5,-1
20106c96:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20106c9a:	440010ef          	jal	201080da <__metal_controller_interrupt_vector_mode>
20106c9e:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20106ca2:	fe042423          	sw	zero,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20106ca6:	3f21                	jal	20106bbe <_get_cpu_intc>
20106ca8:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20106cac:	fcc42503          	lw	a0,-52(s0)
20106cb0:	33a9                	jal	201069fa <__metal_driver_sifive_clint0_num_interrupts>
20106cb2:	fca42c23          	sw	a0,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20106cb6:	fe042703          	lw	a4,-32(s0)
20106cba:	4785                	li	a5,1
20106cbc:	00f70863          	beq	a4,a5,20106ccc <__metal_driver_riscv_clint0_register+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20106cc0:	fe042783          	lw	a5,-32(s0)
20106cc4:	c781                	beqz	a5,20106ccc <__metal_driver_riscv_clint0_register+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20106cc6:	fec42783          	lw	a5,-20(s0)
20106cca:	a049                	j	20106d4c <__metal_driver_riscv_clint0_register+0xd0>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20106ccc:	fe042223          	sw	zero,-28(s0)
20106cd0:	a091                	j	20106d14 <__metal_driver_riscv_clint0_register+0x98>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20106cd2:	fe442583          	lw	a1,-28(s0)
20106cd6:	fcc42503          	lw	a0,-52(s0)
20106cda:	3351                	jal	20106a5e <__metal_driver_sifive_clint0_interrupt_lines>
20106cdc:	fca42a23          	sw	a0,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20106ce0:	fe442583          	lw	a1,-28(s0)
20106ce4:	fcc42503          	lw	a0,-52(s0)
20106ce8:	3b2d                	jal	20106a22 <__metal_driver_sifive_clint0_interrupt_parents>
20106cea:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20106cee:	fdc42703          	lw	a4,-36(s0)
20106cf2:	fe842783          	lw	a5,-24(s0)
20106cf6:	00f71863          	bne	a4,a5,20106d06 <__metal_driver_riscv_clint0_register+0x8a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20106cfa:	fc842703          	lw	a4,-56(s0)
20106cfe:	fd442783          	lw	a5,-44(s0)
20106d02:	02f70063          	beq	a4,a5,20106d22 <__metal_driver_riscv_clint0_register+0xa6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20106d06:	fe042423          	sw	zero,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20106d0a:	fe442783          	lw	a5,-28(s0)
20106d0e:	0785                	add	a5,a5,1
20106d10:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20106d14:	fe442703          	lw	a4,-28(s0)
20106d18:	fd842783          	lw	a5,-40(s0)
20106d1c:	faf74be3          	blt	a4,a5,20106cd2 <__metal_driver_riscv_clint0_register+0x56>
20106d20:	a011                	j	20106d24 <__metal_driver_riscv_clint0_register+0xa8>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20106d22:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20106d24:	fe842783          	lw	a5,-24(s0)
20106d28:	c385                	beqz	a5,20106d48 <__metal_driver_riscv_clint0_register+0xcc>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20106d2a:	fe842783          	lw	a5,-24(s0)
20106d2e:	439c                	lw	a5,0(a5)
20106d30:	4fdc                	lw	a5,28(a5)
20106d32:	fc042683          	lw	a3,-64(s0)
20106d36:	fc442603          	lw	a2,-60(s0)
20106d3a:	fc842583          	lw	a1,-56(s0)
20106d3e:	fe842503          	lw	a0,-24(s0)
20106d42:	9782                	jalr	a5
20106d44:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20106d48:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:115
}
20106d4c:	853e                	mv	a0,a5
20106d4e:	50f2                	lw	ra,60(sp)
20106d50:	5462                	lw	s0,56(sp)
20106d52:	6121                	add	sp,sp,64
20106d54:	8082                	ret

20106d56 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20106d56:	7179                	add	sp,sp,-48
20106d58:	d622                	sw	s0,44(sp)
20106d5a:	1800                	add	s0,sp,48
20106d5c:	fca42e23          	sw	a0,-36(s0)
20106d60:	fcb42c23          	sw	a1,-40(s0)
20106d64:	fcc42a23          	sw	a2,-44(s0)
20106d68:	fcd42823          	sw	a3,-48(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20106d6c:	57fd                	li	a5,-1
20106d6e:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20106d72:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:123
}
20106d76:	853e                	mv	a0,a5
20106d78:	5432                	lw	s0,44(sp)
20106d7a:	6145                	add	sp,sp,48
20106d7c:	8082                	ret

20106d7e <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20106d7e:	1101                	add	sp,sp,-32
20106d80:	ce06                	sw	ra,28(sp)
20106d82:	cc22                	sw	s0,24(sp)
20106d84:	1000                	add	s0,sp,32
20106d86:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20106d8a:	350010ef          	jal	201080da <__metal_controller_interrupt_vector_mode>
20106d8e:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:128
}
20106d90:	853e                	mv	a0,a5
20106d92:	40f2                	lw	ra,28(sp)
20106d94:	4462                	lw	s0,24(sp)
20106d96:	6105                	add	sp,sp,32
20106d98:	8082                	ret

20106d9a <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20106d9a:	7179                	add	sp,sp,-48
20106d9c:	d606                	sw	ra,44(sp)
20106d9e:	d422                	sw	s0,40(sp)
20106da0:	1800                	add	s0,sp,48
20106da2:	fca42e23          	sw	a0,-36(s0)
20106da6:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20106daa:	57fd                	li	a5,-1
20106dac:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20106db0:	3539                	jal	20106bbe <_get_cpu_intc>
20106db2:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20106db6:	fe842783          	lw	a5,-24(s0)
20106dba:	c39d                	beqz	a5,20106de0 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20106dbc:	fd842703          	lw	a4,-40(s0)
20106dc0:	4785                	li	a5,1
20106dc2:	00e7ee63          	bltu	a5,a4,20106dde <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20106dc6:	fe842783          	lw	a5,-24(s0)
20106dca:	439c                	lw	a5,0(a5)
20106dcc:	43dc                	lw	a5,4(a5)
20106dce:	fd842583          	lw	a1,-40(s0)
20106dd2:	fe842503          	lw	a0,-24(s0)
20106dd6:	9782                	jalr	a5
20106dd8:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20106ddc:	a011                	j	20106de0 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:144
        default:
            break;
20106dde:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:147
        }
    }
    return rc;
20106de0:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:148
}
20106de4:	853e                	mv	a0,a5
20106de6:	50b2                	lw	ra,44(sp)
20106de8:	5422                	lw	s0,40(sp)
20106dea:	6145                	add	sp,sp,48
20106dec:	8082                	ret

20106dee <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20106dee:	7139                	add	sp,sp,-64
20106df0:	de06                	sw	ra,60(sp)
20106df2:	dc22                	sw	s0,56(sp)
20106df4:	0080                	add	s0,sp,64
20106df6:	fca42623          	sw	a0,-52(s0)
20106dfa:	fcb42423          	sw	a1,-56(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20106dfe:	57fd                	li	a5,-1
20106e00:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20106e04:	fc842783          	lw	a5,-56(s0)
20106e08:	cbc1                	beqz	a5,20106e98 <__metal_driver_riscv_clint0_enable+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20106e0a:	fe042423          	sw	zero,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20106e0e:	3b45                	jal	20106bbe <_get_cpu_intc>
20106e10:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20106e14:	fcc42503          	lw	a0,-52(s0)
20106e18:	be3ff0ef          	jal	201069fa <__metal_driver_sifive_clint0_num_interrupts>
20106e1c:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20106e20:	fe042223          	sw	zero,-28(s0)
20106e24:	a0a1                	j	20106e6c <__metal_driver_riscv_clint0_enable+0x7e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20106e26:	fe442583          	lw	a1,-28(s0)
20106e2a:	fcc42503          	lw	a0,-52(s0)
20106e2e:	c31ff0ef          	jal	20106a5e <__metal_driver_sifive_clint0_interrupt_lines>
20106e32:	fca42c23          	sw	a0,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20106e36:	fe442583          	lw	a1,-28(s0)
20106e3a:	fcc42503          	lw	a0,-52(s0)
20106e3e:	be5ff0ef          	jal	20106a22 <__metal_driver_sifive_clint0_interrupt_parents>
20106e42:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20106e46:	fe042703          	lw	a4,-32(s0)
20106e4a:	fe842783          	lw	a5,-24(s0)
20106e4e:	00f71863          	bne	a4,a5,20106e5e <__metal_driver_riscv_clint0_enable+0x70>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20106e52:	fc842703          	lw	a4,-56(s0)
20106e56:	fd842783          	lw	a5,-40(s0)
20106e5a:	02f70063          	beq	a4,a5,20106e7a <__metal_driver_riscv_clint0_enable+0x8c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20106e5e:	fe042423          	sw	zero,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20106e62:	fe442783          	lw	a5,-28(s0)
20106e66:	0785                	add	a5,a5,1
20106e68:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20106e6c:	fe442703          	lw	a4,-28(s0)
20106e70:	fdc42783          	lw	a5,-36(s0)
20106e74:	faf749e3          	blt	a4,a5,20106e26 <__metal_driver_riscv_clint0_enable+0x38>
20106e78:	a011                	j	20106e7c <__metal_driver_riscv_clint0_enable+0x8e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20106e7a:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20106e7c:	fe842783          	lw	a5,-24(s0)
20106e80:	cf81                	beqz	a5,20106e98 <__metal_driver_riscv_clint0_enable+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20106e82:	fe842783          	lw	a5,-24(s0)
20106e86:	439c                	lw	a5,0(a5)
20106e88:	53dc                	lw	a5,36(a5)
20106e8a:	fc842583          	lw	a1,-56(s0)
20106e8e:	fe842503          	lw	a0,-24(s0)
20106e92:	9782                	jalr	a5
20106e94:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20106e98:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:178
}
20106e9c:	853e                	mv	a0,a5
20106e9e:	50f2                	lw	ra,60(sp)
20106ea0:	5462                	lw	s0,56(sp)
20106ea2:	6121                	add	sp,sp,64
20106ea4:	8082                	ret

20106ea6 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20106ea6:	7139                	add	sp,sp,-64
20106ea8:	de06                	sw	ra,60(sp)
20106eaa:	dc22                	sw	s0,56(sp)
20106eac:	0080                	add	s0,sp,64
20106eae:	fca42623          	sw	a0,-52(s0)
20106eb2:	fcb42423          	sw	a1,-56(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20106eb6:	57fd                	li	a5,-1
20106eb8:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20106ebc:	fc842783          	lw	a5,-56(s0)
20106ec0:	cbc1                	beqz	a5,20106f50 <__metal_driver_riscv_clint0_disable+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20106ec2:	fe042423          	sw	zero,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20106ec6:	39e5                	jal	20106bbe <_get_cpu_intc>
20106ec8:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20106ecc:	fcc42503          	lw	a0,-52(s0)
20106ed0:	b2bff0ef          	jal	201069fa <__metal_driver_sifive_clint0_num_interrupts>
20106ed4:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20106ed8:	fe042223          	sw	zero,-28(s0)
20106edc:	a0a1                	j	20106f24 <__metal_driver_riscv_clint0_disable+0x7e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20106ede:	fe442583          	lw	a1,-28(s0)
20106ee2:	fcc42503          	lw	a0,-52(s0)
20106ee6:	b79ff0ef          	jal	20106a5e <__metal_driver_sifive_clint0_interrupt_lines>
20106eea:	fca42c23          	sw	a0,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20106eee:	fe442583          	lw	a1,-28(s0)
20106ef2:	fcc42503          	lw	a0,-52(s0)
20106ef6:	b2dff0ef          	jal	20106a22 <__metal_driver_sifive_clint0_interrupt_parents>
20106efa:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20106efe:	fe042703          	lw	a4,-32(s0)
20106f02:	fe842783          	lw	a5,-24(s0)
20106f06:	00f71863          	bne	a4,a5,20106f16 <__metal_driver_riscv_clint0_disable+0x70>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20106f0a:	fc842703          	lw	a4,-56(s0)
20106f0e:	fd842783          	lw	a5,-40(s0)
20106f12:	02f70063          	beq	a4,a5,20106f32 <__metal_driver_riscv_clint0_disable+0x8c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20106f16:	fe042423          	sw	zero,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20106f1a:	fe442783          	lw	a5,-28(s0)
20106f1e:	0785                	add	a5,a5,1
20106f20:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20106f24:	fe442703          	lw	a4,-28(s0)
20106f28:	fdc42783          	lw	a5,-36(s0)
20106f2c:	faf749e3          	blt	a4,a5,20106ede <__metal_driver_riscv_clint0_disable+0x38>
20106f30:	a011                	j	20106f34 <__metal_driver_riscv_clint0_disable+0x8e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20106f32:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20106f34:	fe842783          	lw	a5,-24(s0)
20106f38:	cf81                	beqz	a5,20106f50 <__metal_driver_riscv_clint0_disable+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20106f3a:	fe842783          	lw	a5,-24(s0)
20106f3e:	439c                	lw	a5,0(a5)
20106f40:	579c                	lw	a5,40(a5)
20106f42:	fc842583          	lw	a1,-56(s0)
20106f46:	fe842503          	lw	a0,-24(s0)
20106f4a:	9782                	jalr	a5
20106f4c:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20106f50:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:208
}
20106f54:	853e                	mv	a0,a5
20106f56:	50f2                	lw	ra,60(sp)
20106f58:	5462                	lw	s0,56(sp)
20106f5a:	6121                	add	sp,sp,64
20106f5c:	8082                	ret

20106f5e <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20106f5e:	7179                	add	sp,sp,-48
20106f60:	d606                	sw	ra,44(sp)
20106f62:	d422                	sw	s0,40(sp)
20106f64:	1800                	add	s0,sp,48
20106f66:	fca42e23          	sw	a0,-36(s0)
20106f6a:	fcb42c23          	sw	a1,-40(s0)
20106f6e:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20106f72:	57fd                	li	a5,-1
20106f74:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20106f78:	fdc42783          	lw	a5,-36(s0)
20106f7c:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20106f80:	fdc42503          	lw	a0,-36(s0)
20106f84:	a4dff0ef          	jal	201069d0 <__metal_driver_sifive_clint0_control_base>
20106f88:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20106f8c:	fd842703          	lw	a4,-40(s0)
20106f90:	4791                	li	a5,4
20106f92:	0cf70163          	beq	a4,a5,20107054 <__metal_driver_riscv_clint0_command_request+0xf6>
20106f96:	fd842703          	lw	a4,-40(s0)
20106f9a:	4791                	li	a5,4
20106f9c:	0ee7c163          	blt	a5,a4,2010707e <__metal_driver_riscv_clint0_command_request+0x120>
20106fa0:	fd842703          	lw	a4,-40(s0)
20106fa4:	478d                	li	a5,3
20106fa6:	06f70663          	beq	a4,a5,20107012 <__metal_driver_riscv_clint0_command_request+0xb4>
20106faa:	fd842703          	lw	a4,-40(s0)
20106fae:	478d                	li	a5,3
20106fb0:	0ce7c763          	blt	a5,a4,2010707e <__metal_driver_riscv_clint0_command_request+0x120>
20106fb4:	fd842703          	lw	a4,-40(s0)
20106fb8:	4785                	li	a5,1
20106fba:	00f70863          	beq	a4,a5,20106fca <__metal_driver_riscv_clint0_command_request+0x6c>
20106fbe:	fd842703          	lw	a4,-40(s0)
20106fc2:	4789                	li	a5,2
20106fc4:	02f70363          	beq	a4,a5,20106fea <__metal_driver_riscv_clint0_command_request+0x8c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20106fc8:	a85d                	j	2010707e <__metal_driver_riscv_clint0_command_request+0x120>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20106fca:	fd442783          	lw	a5,-44(s0)
20106fce:	cbd5                	beqz	a5,20107082 <__metal_driver_riscv_clint0_command_request+0x124>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20106fd0:	fe842503          	lw	a0,-24(s0)
20106fd4:	abbff0ef          	jal	20106a8e <__metal_clint0_mtime_get>
20106fd8:	872a                	mv	a4,a0
20106fda:	87ae                	mv	a5,a1
20106fdc:	fd442683          	lw	a3,-44(s0)
20106fe0:	c298                	sw	a4,0(a3)
20106fe2:	c2dc                	sw	a5,4(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20106fe4:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20106fe8:	a869                	j	20107082 <__metal_driver_riscv_clint0_command_request+0x124>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20106fea:	fd442783          	lw	a5,-44(s0)
20106fee:	cfc1                	beqz	a5,20107086 <__metal_driver_riscv_clint0_command_request+0x128>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20106ff0:	fd442783          	lw	a5,-44(s0)
20106ff4:	439c                	lw	a5,0(a5)
20106ff6:	fef42023          	sw	a5,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20106ffa:	fe042783          	lw	a5,-32(s0)
20106ffe:	078a                	sll	a5,a5,0x2
20107000:	873e                	mv	a4,a5
20107002:	fe442783          	lw	a5,-28(s0)
20107006:	97ba                	add	a5,a5,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20107008:	0007a023          	sw	zero,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
2010700c:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20107010:	a89d                	j	20107086 <__metal_driver_riscv_clint0_command_request+0x128>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20107012:	fd442783          	lw	a5,-44(s0)
20107016:	cbb5                	beqz	a5,2010708a <__metal_driver_riscv_clint0_command_request+0x12c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20107018:	fd442783          	lw	a5,-44(s0)
2010701c:	439c                	lw	a5,0(a5)
2010701e:	fef42023          	sw	a5,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20107022:	fe042783          	lw	a5,-32(s0)
20107026:	078a                	sll	a5,a5,0x2
20107028:	873e                	mv	a4,a5
2010702a:	fe442783          	lw	a5,-28(s0)
2010702e:	97ba                	add	a5,a5,a4
20107030:	873e                	mv	a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20107032:	4785                	li	a5,1
20107034:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20107036:	0480000f          	fence	o,i
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
2010703a:	fe042783          	lw	a5,-32(s0)
2010703e:	078a                	sll	a5,a5,0x2
20107040:	873e                	mv	a4,a5
20107042:	fe442783          	lw	a5,-28(s0)
20107046:	97ba                	add	a5,a5,a4
20107048:	439c                	lw	a5,0(a5)
2010704a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
2010704e:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20107052:	a825                	j	2010708a <__metal_driver_riscv_clint0_command_request+0x12c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20107054:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20107058:	fd442783          	lw	a5,-44(s0)
2010705c:	cb8d                	beqz	a5,2010708e <__metal_driver_riscv_clint0_command_request+0x130>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
2010705e:	fd442783          	lw	a5,-44(s0)
20107062:	439c                	lw	a5,0(a5)
20107064:	fef42023          	sw	a5,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20107068:	fe042783          	lw	a5,-32(s0)
2010706c:	078a                	sll	a5,a5,0x2
2010706e:	873e                	mv	a4,a5
20107070:	fe442783          	lw	a5,-28(s0)
20107074:	97ba                	add	a5,a5,a4
20107076:	439c                	lw	a5,0(a5)
20107078:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2010707c:	a809                	j	2010708e <__metal_driver_riscv_clint0_command_request+0x130>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
2010707e:	0001                	nop
20107080:	a801                	j	20107090 <__metal_driver_riscv_clint0_command_request+0x132>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20107082:	0001                	nop
20107084:	a031                	j	20107090 <__metal_driver_riscv_clint0_command_request+0x132>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20107086:	0001                	nop
20107088:	a021                	j	20107090 <__metal_driver_riscv_clint0_command_request+0x132>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2010708a:	0001                	nop
2010708c:	a011                	j	20107090 <__metal_driver_riscv_clint0_command_request+0x132>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2010708e:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20107090:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:267
}
20107094:	853e                	mv	a0,a5
20107096:	50b2                	lw	ra,44(sp)
20107098:	5422                	lw	s0,40(sp)
2010709a:	6145                	add	sp,sp,48
2010709c:	8082                	ret

2010709e <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
2010709e:	7179                	add	sp,sp,-48
201070a0:	d606                	sw	ra,44(sp)
201070a2:	d422                	sw	s0,40(sp)
201070a4:	1800                	add	s0,sp,48
201070a6:	fca42e23          	sw	a0,-36(s0)
201070aa:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
201070ae:	f48ff0ef          	jal	201067f6 <metal_cpu_get_current_hartid>
201070b2:	87aa                	mv	a5,a0
201070b4:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
201070b8:	fec40793          	add	a5,s0,-20
201070bc:	863e                	mv	a2,a5
201070be:	4589                	li	a1,2
201070c0:	fdc42503          	lw	a0,-36(s0)
201070c4:	3d69                	jal	20106f5e <__metal_driver_riscv_clint0_command_request>
201070c6:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
201070c8:	853e                	mv	a0,a5
201070ca:	50b2                	lw	ra,44(sp)
201070cc:	5422                	lw	s0,40(sp)
201070ce:	6145                	add	sp,sp,48
201070d0:	8082                	ret

201070d2 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
201070d2:	7179                	add	sp,sp,-48
201070d4:	d606                	sw	ra,44(sp)
201070d6:	d422                	sw	s0,40(sp)
201070d8:	1800                	add	s0,sp,48
201070da:	fca42e23          	sw	a0,-36(s0)
201070de:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
201070e2:	f14ff0ef          	jal	201067f6 <metal_cpu_get_current_hartid>
201070e6:	87aa                	mv	a5,a0
201070e8:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
201070ec:	fec40793          	add	a5,s0,-20
201070f0:	863e                	mv	a2,a5
201070f2:	458d                	li	a1,3
201070f4:	fdc42503          	lw	a0,-36(s0)
201070f8:	359d                	jal	20106f5e <__metal_driver_riscv_clint0_command_request>
201070fa:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
201070fc:	853e                	mv	a0,a5
201070fe:	50b2                	lw	ra,44(sp)
20107100:	5422                	lw	s0,40(sp)
20107102:	6145                	add	sp,sp,48
20107104:	8082                	ret

20107106 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:267



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20107106:	1101                	add	sp,sp,-32
20107108:	ce22                	sw	s0,28(sp)
2010710a:	1000                	add	s0,sp,32
2010710c:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:268
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20107110:	fec42703          	lw	a4,-20(s0)
20107114:	81018793          	add	a5,gp,-2032 # 80000a90 <__metal_dt_cpu_0>
20107118:	00f71463          	bne	a4,a5,20107120 <__metal_driver_cpu_hartid+0x1a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:269
		return 0;
2010711c:	4781                	li	a5,0
2010711e:	a011                	j	20107122 <__metal_driver_cpu_hartid+0x1c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:272
	}
	else {
		return -1;
20107120:	57fd                	li	a5,-1
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:274
	}
}
20107122:	853e                	mv	a0,a5
20107124:	4472                	lw	s0,28(sp)
20107126:	6105                	add	sp,sp,32
20107128:	8082                	ret

2010712a <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:277

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
2010712a:	1101                	add	sp,sp,-32
2010712c:	ce22                	sw	s0,28(sp)
2010712e:	1000                	add	s0,sp,32
20107130:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:278
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20107134:	fec42703          	lw	a4,-20(s0)
20107138:	81018793          	add	a5,gp,-2032 # 80000a90 <__metal_dt_cpu_0>
2010713c:	00f71763          	bne	a4,a5,2010714a <__metal_driver_cpu_timebase+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:279
		return 1000000;
20107140:	000f47b7          	lui	a5,0xf4
20107144:	24078793          	add	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20107148:	a011                	j	2010714c <__metal_driver_cpu_timebase+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:282
	}
	else {
		return 0;
2010714a:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:284
	}
}
2010714c:	853e                	mv	a0,a5
2010714e:	4472                	lw	s0,28(sp)
20107150:	6105                	add	sp,sp,32
20107152:	8082                	ret

20107154 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:287

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20107154:	1101                	add	sp,sp,-32
20107156:	ce22                	sw	s0,28(sp)
20107158:	1000                	add	s0,sp,32
2010715a:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:288
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2010715e:	fec42703          	lw	a4,-20(s0)
20107162:	81018793          	add	a5,gp,-2032 # 80000a90 <__metal_dt_cpu_0>
20107166:	00f71763          	bne	a4,a5,20107174 <__metal_driver_cpu_interrupt_controller+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:289
		return &__metal_dt_cpu_0_interrupt_controller.controller;
2010716a:	800007b7          	lui	a5,0x80000
2010716e:	09078793          	add	a5,a5,144 # 80000090 <__metal_dt_cpu_0_interrupt_controller>
20107172:	a011                	j	20107176 <__metal_driver_cpu_interrupt_controller+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:292
	}
	else {
		return NULL;
20107174:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:294
	}
}
20107176:	853e                	mv	a0,a5
20107178:	4472                	lw	s0,28(sp)
2010717a:	6105                	add	sp,sp,32
2010717c:	8082                	ret

2010717e <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:307
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
2010717e:	1101                	add	sp,sp,-32
20107180:	ce22                	sw	s0,28(sp)
20107182:	1000                	add	s0,sp,32
20107184:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:308
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20107188:	fec42703          	lw	a4,-20(s0)
2010718c:	81018793          	add	a5,gp,-2032 # 80000a90 <__metal_dt_cpu_0>
20107190:	00f71463          	bne	a4,a5,20107198 <__metal_driver_cpu_buserror+0x1a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:309
		return NULL;
20107194:	4781                	li	a5,0
20107196:	a011                	j	2010719a <__metal_driver_cpu_buserror+0x1c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:312
	}
	else {
		return NULL;
20107198:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:314
	}
}
2010719a:	853e                	mv	a0,a5
2010719c:	4472                	lw	s0,28(sp)
2010719e:	6105                	add	sp,sp,32
201071a0:	8082                	ret

201071a2 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
201071a2:	1101                	add	sp,sp,-32
201071a4:	ce22                	sw	s0,28(sp)
201071a6:	1000                	add	s0,sp,32
201071a8:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
201071ac:	fec42783          	lw	a5,-20(s0)
201071b0:	00f04c63          	bgtz	a5,201071c8 <__metal_driver_cpu_get+0x26>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
201071b4:	800017b7          	lui	a5,0x80001
201071b8:	fec42703          	lw	a4,-20(s0)
201071bc:	070a                	sll	a4,a4,0x2
201071be:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
201071c2:	97ba                	add	a5,a5,a4
201071c4:	439c                	lw	a5,0(a5)
201071c6:	a011                	j	201071ca <__metal_driver_cpu_get+0x28>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
201071c8:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:30
}
201071ca:	853e                	mv	a0,a5
201071cc:	4472                	lw	s0,28(sp)
201071ce:	6105                	add	sp,sp,32
201071d0:	8082                	ret

201071d2 <__metal_myhart_id>:
__metal_myhart_id():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
201071d2:	1101                	add	sp,sp,-32
201071d4:	ce22                	sw	s0,28(sp)
201071d6:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
201071d8:	f14027f3          	csrr	a5,mhartid
201071dc:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
201071e0:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:36
}
201071e4:	853e                	mv	a0,a5
201071e6:	4472                	lw	s0,28(sp)
201071e8:	6105                	add	sp,sp,32
201071ea:	8082                	ret

201071ec <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
201071ec:	1101                	add	sp,sp,-32
201071ee:	ce22                	sw	s0,28(sp)
201071f0:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
201071f2:	47a1                	li	a5,8
201071f4:	3007a7f3          	csrrs	a5,mstatus,a5
201071f8:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
201071fc:	0001                	nop
201071fe:	4472                	lw	s0,28(sp)
20107200:	6105                	add	sp,sp,32
20107202:	8082                	ret

20107204 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20107204:	1101                	add	sp,sp,-32
20107206:	ce22                	sw	s0,28(sp)
20107208:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
2010720a:	47a1                	li	a5,8
2010720c:	3007b7f3          	csrrc	a5,mstatus,a5
20107210:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20107214:	0001                	nop
20107216:	4472                	lw	s0,28(sp)
20107218:	6105                	add	sp,sp,32
2010721a:	8082                	ret

2010721c <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
2010721c:	1101                	add	sp,sp,-32
2010721e:	ce22                	sw	s0,28(sp)
20107220:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20107222:	47a1                	li	a5,8
20107224:	3047a7f3          	csrrs	a5,mie,a5
20107228:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2010722c:	0001                	nop
2010722e:	4472                	lw	s0,28(sp)
20107230:	6105                	add	sp,sp,32
20107232:	8082                	ret

20107234 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20107234:	1101                	add	sp,sp,-32
20107236:	ce22                	sw	s0,28(sp)
20107238:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2010723a:	47a1                	li	a5,8
2010723c:	3047b7f3          	csrrc	a5,mie,a5
20107240:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20107244:	0001                	nop
20107246:	4472                	lw	s0,28(sp)
20107248:	6105                	add	sp,sp,32
2010724a:	8082                	ret

2010724c <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
2010724c:	1101                	add	sp,sp,-32
2010724e:	ce22                	sw	s0,28(sp)
20107250:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20107252:	08000793          	li	a5,128
20107256:	3047a7f3          	csrrs	a5,mie,a5
2010725a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
2010725e:	0001                	nop
20107260:	4472                	lw	s0,28(sp)
20107262:	6105                	add	sp,sp,32
20107264:	8082                	ret

20107266 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20107266:	1101                	add	sp,sp,-32
20107268:	ce22                	sw	s0,28(sp)
2010726a:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2010726c:	08000793          	li	a5,128
20107270:	3047b7f3          	csrrc	a5,mie,a5
20107274:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20107278:	0001                	nop
2010727a:	4472                	lw	s0,28(sp)
2010727c:	6105                	add	sp,sp,32
2010727e:	8082                	ret

20107280 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20107280:	1101                	add	sp,sp,-32
20107282:	ce22                	sw	s0,28(sp)
20107284:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20107286:	6785                	lui	a5,0x1
20107288:	80078793          	add	a5,a5,-2048 # 800 <__heap_size>
2010728c:	3047a7f3          	csrrs	a5,mie,a5
20107290:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20107294:	0001                	nop
20107296:	4472                	lw	s0,28(sp)
20107298:	6105                	add	sp,sp,32
2010729a:	8082                	ret

2010729c <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
2010729c:	1101                	add	sp,sp,-32
2010729e:	ce22                	sw	s0,28(sp)
201072a0:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
201072a2:	6785                	lui	a5,0x1
201072a4:	80078793          	add	a5,a5,-2048 # 800 <__heap_size>
201072a8:	3047b7f3          	csrrc	a5,mie,a5
201072ac:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
201072b0:	0001                	nop
201072b2:	4472                	lw	s0,28(sp)
201072b4:	6105                	add	sp,sp,32
201072b6:	8082                	ret

201072b8 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
201072b8:	7179                	add	sp,sp,-48
201072ba:	d622                	sw	s0,44(sp)
201072bc:	1800                	add	s0,sp,48
201072be:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
201072c2:	fdc42783          	lw	a5,-36(s0)
201072c6:	4705                	li	a4,1
201072c8:	00f717b3          	sll	a5,a4,a5
201072cc:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
201072d0:	fec42783          	lw	a5,-20(s0)
201072d4:	3047a7f3          	csrrs	a5,mie,a5
201072d8:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:105
}
201072dc:	0001                	nop
201072de:	5432                	lw	s0,44(sp)
201072e0:	6145                	add	sp,sp,48
201072e2:	8082                	ret

201072e4 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
201072e4:	7179                	add	sp,sp,-48
201072e6:	d622                	sw	s0,44(sp)
201072e8:	1800                	add	s0,sp,48
201072ea:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
201072ee:	fdc42783          	lw	a5,-36(s0)
201072f2:	4705                	li	a4,1
201072f4:	00f717b3          	sll	a5,a4,a5
201072f8:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
201072fc:	fec42783          	lw	a5,-20(s0)
20107300:	3047b7f3          	csrrc	a5,mie,a5
20107304:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:111
}
20107308:	0001                	nop
2010730a:	5432                	lw	s0,44(sp)
2010730c:	6145                	add	sp,sp,48
2010730e:	8082                	ret

20107310 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20107310:	1101                	add	sp,sp,-32
20107312:	ce06                	sw	ra,28(sp)
20107314:	cc22                	sw	s0,24(sp)
20107316:	1000                	add	s0,sp,32
20107318:	fea42623          	sw	a0,-20(s0)
2010731c:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20107320:	06400513          	li	a0,100
20107324:	621030ef          	jal	2010b144 <metal_shutdown>

20107328 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20107328:	1101                	add	sp,sp,-32
2010732a:	ce06                	sw	ra,28(sp)
2010732c:	cc22                	sw	s0,24(sp)
2010732e:	1000                	add	s0,sp,32
20107330:	fea42623          	sw	a0,-20(s0)
20107334:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20107338:	0c800513          	li	a0,200
2010733c:	609030ef          	jal	2010b144 <metal_shutdown>

20107340 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20107340:	715d                	add	sp,sp,-80
20107342:	c686                	sw	ra,76(sp)
20107344:	c496                	sw	t0,72(sp)
20107346:	c29a                	sw	t1,68(sp)
20107348:	c09e                	sw	t2,64(sp)
2010734a:	de22                	sw	s0,60(sp)
2010734c:	dc2a                	sw	a0,56(sp)
2010734e:	da2e                	sw	a1,52(sp)
20107350:	d832                	sw	a2,48(sp)
20107352:	d636                	sw	a3,44(sp)
20107354:	d43a                	sw	a4,40(sp)
20107356:	d23e                	sw	a5,36(sp)
20107358:	d042                	sw	a6,32(sp)
2010735a:	ce46                	sw	a7,28(sp)
2010735c:	cc72                	sw	t3,24(sp)
2010735e:	ca76                	sw	t4,20(sp)
20107360:	c87a                	sw	t5,16(sp)
20107362:	c67e                	sw	t6,12(sp)
20107364:	0880                	add	s0,sp,80
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20107366:	12c00513          	li	a0,300
2010736a:	5db030ef          	jal	2010b144 <metal_shutdown>

2010736e <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
2010736e:	711d                	add	sp,sp,-96
20107370:	ce86                	sw	ra,92(sp)
20107372:	cc96                	sw	t0,88(sp)
20107374:	ca9a                	sw	t1,84(sp)
20107376:	c89e                	sw	t2,80(sp)
20107378:	c6a2                	sw	s0,76(sp)
2010737a:	c4aa                	sw	a0,72(sp)
2010737c:	c2ae                	sw	a1,68(sp)
2010737e:	c0b2                	sw	a2,64(sp)
20107380:	de36                	sw	a3,60(sp)
20107382:	dc3a                	sw	a4,56(sp)
20107384:	da3e                	sw	a5,52(sp)
20107386:	d842                	sw	a6,48(sp)
20107388:	d646                	sw	a7,44(sp)
2010738a:	d472                	sw	t3,40(sp)
2010738c:	d276                	sw	t4,36(sp)
2010738e:	d07a                	sw	t5,32(sp)
20107390:	ce7e                	sw	t6,28(sp)
20107392:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20107394:	3d3d                	jal	201071d2 <__metal_myhart_id>
20107396:	872a                	mv	a4,a0
20107398:	800017b7          	lui	a5,0x80001
2010739c:	070a                	sll	a4,a4,0x2
2010739e:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
201073a2:	97ba                	add	a5,a5,a4
201073a4:	439c                	lw	a5,0(a5)
201073a6:	faf42623          	sw	a5,-84(s0)
201073aa:	fac42783          	lw	a5,-84(s0)
201073ae:	c785                	beqz	a5,201073d6 <metal_software_interrupt_vector_handler+0x68>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
201073b0:	fac42503          	lw	a0,-84(s0)
201073b4:	3345                	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201073b6:	faa42423          	sw	a0,-88(s0)
201073ba:	fa842783          	lw	a5,-88(s0)
201073be:	0e07a783          	lw	a5,224(a5)
201073c2:	faf42223          	sw	a5,-92(s0)
201073c6:	fa842783          	lw	a5,-88(s0)
201073ca:	0d87a783          	lw	a5,216(a5)
201073ce:	fa442583          	lw	a1,-92(s0)
201073d2:	450d                	li	a0,3
201073d4:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:130
}
201073d6:	0001                	nop
201073d8:	40f6                	lw	ra,92(sp)
201073da:	42e6                	lw	t0,88(sp)
201073dc:	4356                	lw	t1,84(sp)
201073de:	43c6                	lw	t2,80(sp)
201073e0:	4436                	lw	s0,76(sp)
201073e2:	4526                	lw	a0,72(sp)
201073e4:	4596                	lw	a1,68(sp)
201073e6:	4606                	lw	a2,64(sp)
201073e8:	56f2                	lw	a3,60(sp)
201073ea:	5762                	lw	a4,56(sp)
201073ec:	57d2                	lw	a5,52(sp)
201073ee:	5842                	lw	a6,48(sp)
201073f0:	58b2                	lw	a7,44(sp)
201073f2:	5e22                	lw	t3,40(sp)
201073f4:	5e92                	lw	t4,36(sp)
201073f6:	5f02                	lw	t5,32(sp)
201073f8:	4ff2                	lw	t6,28(sp)
201073fa:	6125                	add	sp,sp,96
201073fc:	30200073          	mret

20107400 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20107400:	7179                	add	sp,sp,-48
20107402:	d606                	sw	ra,44(sp)
20107404:	d422                	sw	s0,40(sp)
20107406:	1800                	add	s0,sp,48
20107408:	fca42e23          	sw	a0,-36(s0)
2010740c:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20107410:	33c9                	jal	201071d2 <__metal_myhart_id>
20107412:	872a                	mv	a4,a0
20107414:	800017b7          	lui	a5,0x80001
20107418:	070a                	sll	a4,a4,0x2
2010741a:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
2010741e:	97ba                	add	a5,a5,a4
20107420:	439c                	lw	a5,0(a5)
20107422:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20107426:	342027f3          	csrr	a5,mcause
2010742a:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
2010742e:	fec42783          	lw	a5,-20(s0)
20107432:	c795                	beqz	a5,2010745e <__metal_default_sw_handler+0x5e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20107434:	fec42503          	lw	a0,-20(s0)
20107438:	3b31                	jal	20107154 <__metal_driver_cpu_interrupt_controller>
2010743a:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
2010743e:	fe842783          	lw	a5,-24(s0)
20107442:	3ff7f793          	and	a5,a5,1023
20107446:	fe442703          	lw	a4,-28(s0)
2010744a:	0e878793          	add	a5,a5,232
2010744e:	078a                	sll	a5,a5,0x2
20107450:	97ba                	add	a5,a5,a4
20107452:	439c                	lw	a5,0(a5)
20107454:	fdc42583          	lw	a1,-36(s0)
20107458:	fec42503          	lw	a0,-20(s0)
2010745c:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
2010745e:	0001                	nop
20107460:	50b2                	lw	ra,44(sp)
20107462:	5422                	lw	s0,40(sp)
20107464:	6145                	add	sp,sp,48
20107466:	8082                	ret

20107468 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20107468:	711d                	add	sp,sp,-96
2010746a:	ce86                	sw	ra,92(sp)
2010746c:	cc96                	sw	t0,88(sp)
2010746e:	ca9a                	sw	t1,84(sp)
20107470:	c89e                	sw	t2,80(sp)
20107472:	c6a2                	sw	s0,76(sp)
20107474:	c4aa                	sw	a0,72(sp)
20107476:	c2ae                	sw	a1,68(sp)
20107478:	c0b2                	sw	a2,64(sp)
2010747a:	de36                	sw	a3,60(sp)
2010747c:	dc3a                	sw	a4,56(sp)
2010747e:	da3e                	sw	a5,52(sp)
20107480:	d842                	sw	a6,48(sp)
20107482:	d646                	sw	a7,44(sp)
20107484:	d472                	sw	t3,40(sp)
20107486:	d276                	sw	t4,36(sp)
20107488:	d07a                	sw	t5,32(sp)
2010748a:	ce7e                	sw	t6,28(sp)
2010748c:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
2010748e:	3391                	jal	201071d2 <__metal_myhart_id>
20107490:	872a                	mv	a4,a0
20107492:	800017b7          	lui	a5,0x80001
20107496:	070a                	sll	a4,a4,0x2
20107498:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
2010749c:	97ba                	add	a5,a5,a4
2010749e:	439c                	lw	a5,0(a5)
201074a0:	faf42623          	sw	a5,-84(s0)
201074a4:	fac42783          	lw	a5,-84(s0)
201074a8:	c78d                	beqz	a5,201074d2 <metal_timer_interrupt_vector_handler+0x6a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
201074aa:	fac42503          	lw	a0,-84(s0)
201074ae:	ca7ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201074b2:	faa42423          	sw	a0,-88(s0)
201074b6:	fa842783          	lw	a5,-88(s0)
201074ba:	1407a783          	lw	a5,320(a5)
201074be:	faf42223          	sw	a5,-92(s0)
201074c2:	fa842783          	lw	a5,-88(s0)
201074c6:	1387a783          	lw	a5,312(a5)
201074ca:	fa442583          	lw	a1,-92(s0)
201074ce:	451d                	li	a0,7
201074d0:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:150
}
201074d2:	0001                	nop
201074d4:	40f6                	lw	ra,92(sp)
201074d6:	42e6                	lw	t0,88(sp)
201074d8:	4356                	lw	t1,84(sp)
201074da:	43c6                	lw	t2,80(sp)
201074dc:	4436                	lw	s0,76(sp)
201074de:	4526                	lw	a0,72(sp)
201074e0:	4596                	lw	a1,68(sp)
201074e2:	4606                	lw	a2,64(sp)
201074e4:	56f2                	lw	a3,60(sp)
201074e6:	5762                	lw	a4,56(sp)
201074e8:	57d2                	lw	a5,52(sp)
201074ea:	5842                	lw	a6,48(sp)
201074ec:	58b2                	lw	a7,44(sp)
201074ee:	5e22                	lw	t3,40(sp)
201074f0:	5e92                	lw	t4,36(sp)
201074f2:	5f02                	lw	t5,32(sp)
201074f4:	4ff2                	lw	t6,28(sp)
201074f6:	6125                	add	sp,sp,96
201074f8:	30200073          	mret

201074fc <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
201074fc:	1101                	add	sp,sp,-32
201074fe:	ce22                	sw	s0,28(sp)
20107500:	1000                	add	s0,sp,32
20107502:	fea42623          	sw	a0,-20(s0)
20107506:	feb42423          	sw	a1,-24(s0)
2010750a:	0001                	nop
2010750c:	4472                	lw	s0,28(sp)
2010750e:	6105                	add	sp,sp,32
20107510:	8082                	ret

20107512 <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20107512:	7179                	add	sp,sp,-48
20107514:	d606                	sw	ra,44(sp)
20107516:	d422                	sw	s0,40(sp)
20107518:	1800                	add	s0,sp,48
2010751a:	fca42e23          	sw	a0,-36(s0)
2010751e:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20107522:	cb1ff0ef          	jal	201071d2 <__metal_myhart_id>
20107526:	87aa                	mv	a5,a0
20107528:	853e                	mv	a0,a5
2010752a:	c79ff0ef          	jal	201071a2 <__metal_driver_cpu_get>
2010752e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20107532:	fec42503          	lw	a0,-20(s0)
20107536:	270010ef          	jal	201087a6 <__metal_driver_cpu_mtime_get>
2010753a:	fea42023          	sw	a0,-32(s0)
2010753e:	feb42223          	sw	a1,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20107542:	fe042703          	lw	a4,-32(s0)
20107546:	fe442783          	lw	a5,-28(s0)
2010754a:	4529                	li	a0,10
2010754c:	4581                	li	a1,0
2010754e:	00a70633          	add	a2,a4,a0
20107552:	8832                	mv	a6,a2
20107554:	00e83833          	sltu	a6,a6,a4
20107558:	00b786b3          	add	a3,a5,a1
2010755c:	00d807b3          	add	a5,a6,a3
20107560:	86be                	mv	a3,a5
20107562:	8732                	mv	a4,a2
20107564:	87b6                	mv	a5,a3
20107566:	85ba                	mv	a1,a4
20107568:	863e                	mv	a2,a5
2010756a:	fec42503          	lw	a0,-20(s0)
2010756e:	29e010ef          	jal	2010880c <__metal_driver_cpu_mtimecmp_set>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:160
}
20107572:	0001                	nop
20107574:	50b2                	lw	ra,44(sp)
20107576:	5422                	lw	s0,40(sp)
20107578:	6145                	add	sp,sp,48
2010757a:	8082                	ret
2010757c:	0000                	unimp
	...

20107580 <__metal_exception_handler>:
__metal_exception_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20107580:	7119                	add	sp,sp,-128
20107582:	de86                	sw	ra,124(sp)
20107584:	dc96                	sw	t0,120(sp)
20107586:	da9a                	sw	t1,116(sp)
20107588:	d89e                	sw	t2,112(sp)
2010758a:	d6a2                	sw	s0,108(sp)
2010758c:	d4aa                	sw	a0,104(sp)
2010758e:	d2ae                	sw	a1,100(sp)
20107590:	d0b2                	sw	a2,96(sp)
20107592:	ceb6                	sw	a3,92(sp)
20107594:	ccba                	sw	a4,88(sp)
20107596:	cabe                	sw	a5,84(sp)
20107598:	c8c2                	sw	a6,80(sp)
2010759a:	c6c6                	sw	a7,76(sp)
2010759c:	c4f2                	sw	t3,72(sp)
2010759e:	c2f6                	sw	t4,68(sp)
201075a0:	c0fa                	sw	t5,64(sp)
201075a2:	de7e                	sw	t6,60(sp)
201075a4:	0100                	add	s0,sp,128
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
201075a6:	c2dff0ef          	jal	201071d2 <__metal_myhart_id>
201075aa:	872a                	mv	a4,a0
201075ac:	800017b7          	lui	a5,0x80001
201075b0:	070a                	sll	a4,a4,0x2
201075b2:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
201075b6:	97ba                	add	a5,a5,a4
201075b8:	439c                	lw	a5,0(a5)
201075ba:	faf42623          	sw	a5,-84(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
201075be:	342027f3          	csrr	a5,mcause
201075c2:	faf42423          	sw	a5,-88(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
201075c6:	341027f3          	csrr	a5,mepc
201075ca:	faf42223          	sw	a5,-92(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
201075ce:	343027f3          	csrr	a5,mtval
201075d2:	faf42023          	sw	a5,-96(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
201075d6:	305027f3          	csrr	a5,mtvec
201075da:	f8f42e23          	sw	a5,-100(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
201075de:	fac42783          	lw	a5,-84(s0)
201075e2:	cbfd                	beqz	a5,201076d8 <__metal_exception_handler+0x158>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
201075e4:	fac42503          	lw	a0,-84(s0)
201075e8:	b6dff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201075ec:	f8a42c23          	sw	a0,-104(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
201075f0:	fa842783          	lw	a5,-88(s0)
201075f4:	3ff7f793          	and	a5,a5,1023
201075f8:	f8f42a23          	sw	a5,-108(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
201075fc:	fa842783          	lw	a5,-88(s0)
20107600:	0a07de63          	bgez	a5,201076bc <__metal_exception_handler+0x13c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20107604:	f9442703          	lw	a4,-108(s0)
20107608:	08000793          	li	a5,128
2010760c:	02f71263          	bne	a4,a5,20107630 <__metal_exception_handler+0xb0>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20107610:	f9842783          	lw	a5,-104(s0)
20107614:	3987a783          	lw	a5,920(a5)
20107618:	f8f42623          	sw	a5,-116(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2010761c:	f9842783          	lw	a5,-104(s0)
20107620:	3907a783          	lw	a5,912(a5)
20107624:	f8c42583          	lw	a1,-116(s0)
20107628:	f9442503          	lw	a0,-108(s0)
2010762c:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
2010762e:	a06d                	j	201076d8 <__metal_exception_handler+0x158>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20107630:	f9442703          	lw	a4,-108(s0)
20107634:	47ad                	li	a5,11
20107636:	00e7d763          	bge	a5,a4,20107644 <__metal_exception_handler+0xc4>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2010763a:	f9c42783          	lw	a5,-100(s0)
2010763e:	03f7f793          	and	a5,a5,63
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20107642:	ef9d                	bnez	a5,20107680 <__metal_exception_handler+0x100>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20107644:	f9842683          	lw	a3,-104(s0)
20107648:	f9442703          	lw	a4,-108(s0)
2010764c:	87ba                	mv	a5,a4
2010764e:	0786                	sll	a5,a5,0x1
20107650:	97ba                	add	a5,a5,a4
20107652:	078e                	sll	a5,a5,0x3
20107654:	97b6                	add	a5,a5,a3
20107656:	0987a783          	lw	a5,152(a5)
2010765a:	f8f42623          	sw	a5,-116(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
2010765e:	f9842683          	lw	a3,-104(s0)
20107662:	f9442703          	lw	a4,-108(s0)
20107666:	87ba                	mv	a5,a4
20107668:	0786                	sll	a5,a5,0x1
2010766a:	97ba                	add	a5,a5,a4
2010766c:	078e                	sll	a5,a5,0x3
2010766e:	97b6                	add	a5,a5,a3
20107670:	0907a783          	lw	a5,144(a5)
20107674:	f8c42583          	lw	a1,-116(s0)
20107678:	f9442503          	lw	a0,-108(s0)
2010767c:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
2010767e:	a8a9                	j	201076d8 <__metal_exception_handler+0x158>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20107680:	f9c42783          	lw	a5,-100(s0)
20107684:	03f7f713          	and	a4,a5,63
20107688:	4789                	li	a5,2
2010768a:	04f71763          	bne	a4,a5,201076d8 <__metal_exception_handler+0x158>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2010768e:	307027f3          	csrr	a5,mtvt
20107692:	f8f42823          	sw	a5,-112(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20107696:	f9842783          	lw	a5,-104(s0)
2010769a:	0dc7a783          	lw	a5,220(a5)
2010769e:	f8f42623          	sw	a5,-116(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
201076a2:	f9042783          	lw	a5,-112(s0)
201076a6:	439c                	lw	a5,0(a5)
201076a8:	f8f42423          	sw	a5,-120(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
201076ac:	f8842783          	lw	a5,-120(s0)
201076b0:	f8c42583          	lw	a1,-116(s0)
201076b4:	f9442503          	lw	a0,-108(s0)
201076b8:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
201076ba:	a839                	j	201076d8 <__metal_exception_handler+0x158>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
201076bc:	f9842703          	lw	a4,-104(s0)
201076c0:	f9442783          	lw	a5,-108(s0)
201076c4:	0e878793          	add	a5,a5,232
201076c8:	078a                	sll	a5,a5,0x2
201076ca:	97ba                	add	a5,a5,a4
201076cc:	439c                	lw	a5,0(a5)
201076ce:	f9442583          	lw	a1,-108(s0)
201076d2:	fac42503          	lw	a0,-84(s0)
201076d6:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
201076d8:	50f6                	lw	ra,124(sp)
201076da:	52e6                	lw	t0,120(sp)
201076dc:	5356                	lw	t1,116(sp)
201076de:	53c6                	lw	t2,112(sp)
201076e0:	5436                	lw	s0,108(sp)
201076e2:	5526                	lw	a0,104(sp)
201076e4:	5596                	lw	a1,100(sp)
201076e6:	5606                	lw	a2,96(sp)
201076e8:	46f6                	lw	a3,92(sp)
201076ea:	4766                	lw	a4,88(sp)
201076ec:	47d6                	lw	a5,84(sp)
201076ee:	4846                	lw	a6,80(sp)
201076f0:	48b6                	lw	a7,76(sp)
201076f2:	4e26                	lw	t3,72(sp)
201076f4:	4e96                	lw	t4,68(sp)
201076f6:	4f06                	lw	t5,64(sp)
201076f8:	5ff2                	lw	t6,60(sp)
201076fa:	6109                	add	sp,sp,128
201076fc:	30200073          	mret
	...

2010777a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
2010777a:	711d                	add	sp,sp,-96
2010777c:	ce86                	sw	ra,92(sp)
2010777e:	cc96                	sw	t0,88(sp)
20107780:	ca9a                	sw	t1,84(sp)
20107782:	c89e                	sw	t2,80(sp)
20107784:	c6a2                	sw	s0,76(sp)
20107786:	c4aa                	sw	a0,72(sp)
20107788:	c2ae                	sw	a1,68(sp)
2010778a:	c0b2                	sw	a2,64(sp)
2010778c:	de36                	sw	a3,60(sp)
2010778e:	dc3a                	sw	a4,56(sp)
20107790:	da3e                	sw	a5,52(sp)
20107792:	d842                	sw	a6,48(sp)
20107794:	d646                	sw	a7,44(sp)
20107796:	d472                	sw	t3,40(sp)
20107798:	d276                	sw	t4,36(sp)
2010779a:	d07a                	sw	t5,32(sp)
2010779c:	ce7e                	sw	t6,28(sp)
2010779e:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
201077a0:	a33ff0ef          	jal	201071d2 <__metal_myhart_id>
201077a4:	872a                	mv	a4,a0
201077a6:	800017b7          	lui	a5,0x80001
201077aa:	070a                	sll	a4,a4,0x2
201077ac:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
201077b0:	97ba                	add	a5,a5,a4
201077b2:	439c                	lw	a5,0(a5)
201077b4:	faf42623          	sw	a5,-84(s0)
201077b8:	fac42783          	lw	a5,-84(s0)
201077bc:	c78d                	beqz	a5,201077e6 <metal_lc0_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
201077be:	fac42503          	lw	a0,-84(s0)
201077c2:	993ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201077c6:	faa42423          	sw	a0,-88(s0)
201077ca:	fa842783          	lw	a5,-88(s0)
201077ce:	2187a783          	lw	a5,536(a5)
201077d2:	faf42223          	sw	a5,-92(s0)
201077d6:	fa842783          	lw	a5,-88(s0)
201077da:	2107a783          	lw	a5,528(a5)
201077de:	fa442583          	lw	a1,-92(s0)
201077e2:	4541                	li	a0,16
201077e4:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:216
}
201077e6:	0001                	nop
201077e8:	40f6                	lw	ra,92(sp)
201077ea:	42e6                	lw	t0,88(sp)
201077ec:	4356                	lw	t1,84(sp)
201077ee:	43c6                	lw	t2,80(sp)
201077f0:	4436                	lw	s0,76(sp)
201077f2:	4526                	lw	a0,72(sp)
201077f4:	4596                	lw	a1,68(sp)
201077f6:	4606                	lw	a2,64(sp)
201077f8:	56f2                	lw	a3,60(sp)
201077fa:	5762                	lw	a4,56(sp)
201077fc:	57d2                	lw	a5,52(sp)
201077fe:	5842                	lw	a6,48(sp)
20107800:	58b2                	lw	a7,44(sp)
20107802:	5e22                	lw	t3,40(sp)
20107804:	5e92                	lw	t4,36(sp)
20107806:	5f02                	lw	t5,32(sp)
20107808:	4ff2                	lw	t6,28(sp)
2010780a:	6125                	add	sp,sp,96
2010780c:	30200073          	mret

20107810 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20107810:	711d                	add	sp,sp,-96
20107812:	ce86                	sw	ra,92(sp)
20107814:	cc96                	sw	t0,88(sp)
20107816:	ca9a                	sw	t1,84(sp)
20107818:	c89e                	sw	t2,80(sp)
2010781a:	c6a2                	sw	s0,76(sp)
2010781c:	c4aa                	sw	a0,72(sp)
2010781e:	c2ae                	sw	a1,68(sp)
20107820:	c0b2                	sw	a2,64(sp)
20107822:	de36                	sw	a3,60(sp)
20107824:	dc3a                	sw	a4,56(sp)
20107826:	da3e                	sw	a5,52(sp)
20107828:	d842                	sw	a6,48(sp)
2010782a:	d646                	sw	a7,44(sp)
2010782c:	d472                	sw	t3,40(sp)
2010782e:	d276                	sw	t4,36(sp)
20107830:	d07a                	sw	t5,32(sp)
20107832:	ce7e                	sw	t6,28(sp)
20107834:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20107836:	99dff0ef          	jal	201071d2 <__metal_myhart_id>
2010783a:	872a                	mv	a4,a0
2010783c:	800017b7          	lui	a5,0x80001
20107840:	070a                	sll	a4,a4,0x2
20107842:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107846:	97ba                	add	a5,a5,a4
20107848:	439c                	lw	a5,0(a5)
2010784a:	faf42623          	sw	a5,-84(s0)
2010784e:	fac42783          	lw	a5,-84(s0)
20107852:	c78d                	beqz	a5,2010787c <metal_lc1_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20107854:	fac42503          	lw	a0,-84(s0)
20107858:	8fdff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
2010785c:	faa42423          	sw	a0,-88(s0)
20107860:	fa842783          	lw	a5,-88(s0)
20107864:	2307a783          	lw	a5,560(a5)
20107868:	faf42223          	sw	a5,-92(s0)
2010786c:	fa842783          	lw	a5,-88(s0)
20107870:	2287a783          	lw	a5,552(a5)
20107874:	fa442583          	lw	a1,-92(s0)
20107878:	4545                	li	a0,17
2010787a:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:221
}
2010787c:	0001                	nop
2010787e:	40f6                	lw	ra,92(sp)
20107880:	42e6                	lw	t0,88(sp)
20107882:	4356                	lw	t1,84(sp)
20107884:	43c6                	lw	t2,80(sp)
20107886:	4436                	lw	s0,76(sp)
20107888:	4526                	lw	a0,72(sp)
2010788a:	4596                	lw	a1,68(sp)
2010788c:	4606                	lw	a2,64(sp)
2010788e:	56f2                	lw	a3,60(sp)
20107890:	5762                	lw	a4,56(sp)
20107892:	57d2                	lw	a5,52(sp)
20107894:	5842                	lw	a6,48(sp)
20107896:	58b2                	lw	a7,44(sp)
20107898:	5e22                	lw	t3,40(sp)
2010789a:	5e92                	lw	t4,36(sp)
2010789c:	5f02                	lw	t5,32(sp)
2010789e:	4ff2                	lw	t6,28(sp)
201078a0:	6125                	add	sp,sp,96
201078a2:	30200073          	mret

201078a6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
201078a6:	711d                	add	sp,sp,-96
201078a8:	ce86                	sw	ra,92(sp)
201078aa:	cc96                	sw	t0,88(sp)
201078ac:	ca9a                	sw	t1,84(sp)
201078ae:	c89e                	sw	t2,80(sp)
201078b0:	c6a2                	sw	s0,76(sp)
201078b2:	c4aa                	sw	a0,72(sp)
201078b4:	c2ae                	sw	a1,68(sp)
201078b6:	c0b2                	sw	a2,64(sp)
201078b8:	de36                	sw	a3,60(sp)
201078ba:	dc3a                	sw	a4,56(sp)
201078bc:	da3e                	sw	a5,52(sp)
201078be:	d842                	sw	a6,48(sp)
201078c0:	d646                	sw	a7,44(sp)
201078c2:	d472                	sw	t3,40(sp)
201078c4:	d276                	sw	t4,36(sp)
201078c6:	d07a                	sw	t5,32(sp)
201078c8:	ce7e                	sw	t6,28(sp)
201078ca:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
201078cc:	907ff0ef          	jal	201071d2 <__metal_myhart_id>
201078d0:	872a                	mv	a4,a0
201078d2:	800017b7          	lui	a5,0x80001
201078d6:	070a                	sll	a4,a4,0x2
201078d8:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
201078dc:	97ba                	add	a5,a5,a4
201078de:	439c                	lw	a5,0(a5)
201078e0:	faf42623          	sw	a5,-84(s0)
201078e4:	fac42783          	lw	a5,-84(s0)
201078e8:	c78d                	beqz	a5,20107912 <metal_lc2_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
201078ea:	fac42503          	lw	a0,-84(s0)
201078ee:	867ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201078f2:	faa42423          	sw	a0,-88(s0)
201078f6:	fa842783          	lw	a5,-88(s0)
201078fa:	2487a783          	lw	a5,584(a5)
201078fe:	faf42223          	sw	a5,-92(s0)
20107902:	fa842783          	lw	a5,-88(s0)
20107906:	2407a783          	lw	a5,576(a5)
2010790a:	fa442583          	lw	a1,-92(s0)
2010790e:	4549                	li	a0,18
20107910:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:226
}
20107912:	0001                	nop
20107914:	40f6                	lw	ra,92(sp)
20107916:	42e6                	lw	t0,88(sp)
20107918:	4356                	lw	t1,84(sp)
2010791a:	43c6                	lw	t2,80(sp)
2010791c:	4436                	lw	s0,76(sp)
2010791e:	4526                	lw	a0,72(sp)
20107920:	4596                	lw	a1,68(sp)
20107922:	4606                	lw	a2,64(sp)
20107924:	56f2                	lw	a3,60(sp)
20107926:	5762                	lw	a4,56(sp)
20107928:	57d2                	lw	a5,52(sp)
2010792a:	5842                	lw	a6,48(sp)
2010792c:	58b2                	lw	a7,44(sp)
2010792e:	5e22                	lw	t3,40(sp)
20107930:	5e92                	lw	t4,36(sp)
20107932:	5f02                	lw	t5,32(sp)
20107934:	4ff2                	lw	t6,28(sp)
20107936:	6125                	add	sp,sp,96
20107938:	30200073          	mret

2010793c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2010793c:	711d                	add	sp,sp,-96
2010793e:	ce86                	sw	ra,92(sp)
20107940:	cc96                	sw	t0,88(sp)
20107942:	ca9a                	sw	t1,84(sp)
20107944:	c89e                	sw	t2,80(sp)
20107946:	c6a2                	sw	s0,76(sp)
20107948:	c4aa                	sw	a0,72(sp)
2010794a:	c2ae                	sw	a1,68(sp)
2010794c:	c0b2                	sw	a2,64(sp)
2010794e:	de36                	sw	a3,60(sp)
20107950:	dc3a                	sw	a4,56(sp)
20107952:	da3e                	sw	a5,52(sp)
20107954:	d842                	sw	a6,48(sp)
20107956:	d646                	sw	a7,44(sp)
20107958:	d472                	sw	t3,40(sp)
2010795a:	d276                	sw	t4,36(sp)
2010795c:	d07a                	sw	t5,32(sp)
2010795e:	ce7e                	sw	t6,28(sp)
20107960:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20107962:	871ff0ef          	jal	201071d2 <__metal_myhart_id>
20107966:	872a                	mv	a4,a0
20107968:	800017b7          	lui	a5,0x80001
2010796c:	070a                	sll	a4,a4,0x2
2010796e:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107972:	97ba                	add	a5,a5,a4
20107974:	439c                	lw	a5,0(a5)
20107976:	faf42623          	sw	a5,-84(s0)
2010797a:	fac42783          	lw	a5,-84(s0)
2010797e:	c78d                	beqz	a5,201079a8 <metal_lc3_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20107980:	fac42503          	lw	a0,-84(s0)
20107984:	fd0ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107988:	faa42423          	sw	a0,-88(s0)
2010798c:	fa842783          	lw	a5,-88(s0)
20107990:	2607a783          	lw	a5,608(a5)
20107994:	faf42223          	sw	a5,-92(s0)
20107998:	fa842783          	lw	a5,-88(s0)
2010799c:	2587a783          	lw	a5,600(a5)
201079a0:	fa442583          	lw	a1,-92(s0)
201079a4:	454d                	li	a0,19
201079a6:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:231
}
201079a8:	0001                	nop
201079aa:	40f6                	lw	ra,92(sp)
201079ac:	42e6                	lw	t0,88(sp)
201079ae:	4356                	lw	t1,84(sp)
201079b0:	43c6                	lw	t2,80(sp)
201079b2:	4436                	lw	s0,76(sp)
201079b4:	4526                	lw	a0,72(sp)
201079b6:	4596                	lw	a1,68(sp)
201079b8:	4606                	lw	a2,64(sp)
201079ba:	56f2                	lw	a3,60(sp)
201079bc:	5762                	lw	a4,56(sp)
201079be:	57d2                	lw	a5,52(sp)
201079c0:	5842                	lw	a6,48(sp)
201079c2:	58b2                	lw	a7,44(sp)
201079c4:	5e22                	lw	t3,40(sp)
201079c6:	5e92                	lw	t4,36(sp)
201079c8:	5f02                	lw	t5,32(sp)
201079ca:	4ff2                	lw	t6,28(sp)
201079cc:	6125                	add	sp,sp,96
201079ce:	30200073          	mret

201079d2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
201079d2:	711d                	add	sp,sp,-96
201079d4:	ce86                	sw	ra,92(sp)
201079d6:	cc96                	sw	t0,88(sp)
201079d8:	ca9a                	sw	t1,84(sp)
201079da:	c89e                	sw	t2,80(sp)
201079dc:	c6a2                	sw	s0,76(sp)
201079de:	c4aa                	sw	a0,72(sp)
201079e0:	c2ae                	sw	a1,68(sp)
201079e2:	c0b2                	sw	a2,64(sp)
201079e4:	de36                	sw	a3,60(sp)
201079e6:	dc3a                	sw	a4,56(sp)
201079e8:	da3e                	sw	a5,52(sp)
201079ea:	d842                	sw	a6,48(sp)
201079ec:	d646                	sw	a7,44(sp)
201079ee:	d472                	sw	t3,40(sp)
201079f0:	d276                	sw	t4,36(sp)
201079f2:	d07a                	sw	t5,32(sp)
201079f4:	ce7e                	sw	t6,28(sp)
201079f6:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
201079f8:	fdaff0ef          	jal	201071d2 <__metal_myhart_id>
201079fc:	872a                	mv	a4,a0
201079fe:	800017b7          	lui	a5,0x80001
20107a02:	070a                	sll	a4,a4,0x2
20107a04:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107a08:	97ba                	add	a5,a5,a4
20107a0a:	439c                	lw	a5,0(a5)
20107a0c:	faf42623          	sw	a5,-84(s0)
20107a10:	fac42783          	lw	a5,-84(s0)
20107a14:	c78d                	beqz	a5,20107a3e <metal_lc4_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20107a16:	fac42503          	lw	a0,-84(s0)
20107a1a:	f3aff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107a1e:	faa42423          	sw	a0,-88(s0)
20107a22:	fa842783          	lw	a5,-88(s0)
20107a26:	2787a783          	lw	a5,632(a5)
20107a2a:	faf42223          	sw	a5,-92(s0)
20107a2e:	fa842783          	lw	a5,-88(s0)
20107a32:	2707a783          	lw	a5,624(a5)
20107a36:	fa442583          	lw	a1,-92(s0)
20107a3a:	4551                	li	a0,20
20107a3c:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:236
}
20107a3e:	0001                	nop
20107a40:	40f6                	lw	ra,92(sp)
20107a42:	42e6                	lw	t0,88(sp)
20107a44:	4356                	lw	t1,84(sp)
20107a46:	43c6                	lw	t2,80(sp)
20107a48:	4436                	lw	s0,76(sp)
20107a4a:	4526                	lw	a0,72(sp)
20107a4c:	4596                	lw	a1,68(sp)
20107a4e:	4606                	lw	a2,64(sp)
20107a50:	56f2                	lw	a3,60(sp)
20107a52:	5762                	lw	a4,56(sp)
20107a54:	57d2                	lw	a5,52(sp)
20107a56:	5842                	lw	a6,48(sp)
20107a58:	58b2                	lw	a7,44(sp)
20107a5a:	5e22                	lw	t3,40(sp)
20107a5c:	5e92                	lw	t4,36(sp)
20107a5e:	5f02                	lw	t5,32(sp)
20107a60:	4ff2                	lw	t6,28(sp)
20107a62:	6125                	add	sp,sp,96
20107a64:	30200073          	mret

20107a68 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20107a68:	711d                	add	sp,sp,-96
20107a6a:	ce86                	sw	ra,92(sp)
20107a6c:	cc96                	sw	t0,88(sp)
20107a6e:	ca9a                	sw	t1,84(sp)
20107a70:	c89e                	sw	t2,80(sp)
20107a72:	c6a2                	sw	s0,76(sp)
20107a74:	c4aa                	sw	a0,72(sp)
20107a76:	c2ae                	sw	a1,68(sp)
20107a78:	c0b2                	sw	a2,64(sp)
20107a7a:	de36                	sw	a3,60(sp)
20107a7c:	dc3a                	sw	a4,56(sp)
20107a7e:	da3e                	sw	a5,52(sp)
20107a80:	d842                	sw	a6,48(sp)
20107a82:	d646                	sw	a7,44(sp)
20107a84:	d472                	sw	t3,40(sp)
20107a86:	d276                	sw	t4,36(sp)
20107a88:	d07a                	sw	t5,32(sp)
20107a8a:	ce7e                	sw	t6,28(sp)
20107a8c:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20107a8e:	f44ff0ef          	jal	201071d2 <__metal_myhart_id>
20107a92:	872a                	mv	a4,a0
20107a94:	800017b7          	lui	a5,0x80001
20107a98:	070a                	sll	a4,a4,0x2
20107a9a:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107a9e:	97ba                	add	a5,a5,a4
20107aa0:	439c                	lw	a5,0(a5)
20107aa2:	faf42623          	sw	a5,-84(s0)
20107aa6:	fac42783          	lw	a5,-84(s0)
20107aaa:	c78d                	beqz	a5,20107ad4 <metal_lc5_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20107aac:	fac42503          	lw	a0,-84(s0)
20107ab0:	ea4ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107ab4:	faa42423          	sw	a0,-88(s0)
20107ab8:	fa842783          	lw	a5,-88(s0)
20107abc:	2907a783          	lw	a5,656(a5)
20107ac0:	faf42223          	sw	a5,-92(s0)
20107ac4:	fa842783          	lw	a5,-88(s0)
20107ac8:	2887a783          	lw	a5,648(a5)
20107acc:	fa442583          	lw	a1,-92(s0)
20107ad0:	4555                	li	a0,21
20107ad2:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:241
}
20107ad4:	0001                	nop
20107ad6:	40f6                	lw	ra,92(sp)
20107ad8:	42e6                	lw	t0,88(sp)
20107ada:	4356                	lw	t1,84(sp)
20107adc:	43c6                	lw	t2,80(sp)
20107ade:	4436                	lw	s0,76(sp)
20107ae0:	4526                	lw	a0,72(sp)
20107ae2:	4596                	lw	a1,68(sp)
20107ae4:	4606                	lw	a2,64(sp)
20107ae6:	56f2                	lw	a3,60(sp)
20107ae8:	5762                	lw	a4,56(sp)
20107aea:	57d2                	lw	a5,52(sp)
20107aec:	5842                	lw	a6,48(sp)
20107aee:	58b2                	lw	a7,44(sp)
20107af0:	5e22                	lw	t3,40(sp)
20107af2:	5e92                	lw	t4,36(sp)
20107af4:	5f02                	lw	t5,32(sp)
20107af6:	4ff2                	lw	t6,28(sp)
20107af8:	6125                	add	sp,sp,96
20107afa:	30200073          	mret

20107afe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
20107afe:	711d                	add	sp,sp,-96
20107b00:	ce86                	sw	ra,92(sp)
20107b02:	cc96                	sw	t0,88(sp)
20107b04:	ca9a                	sw	t1,84(sp)
20107b06:	c89e                	sw	t2,80(sp)
20107b08:	c6a2                	sw	s0,76(sp)
20107b0a:	c4aa                	sw	a0,72(sp)
20107b0c:	c2ae                	sw	a1,68(sp)
20107b0e:	c0b2                	sw	a2,64(sp)
20107b10:	de36                	sw	a3,60(sp)
20107b12:	dc3a                	sw	a4,56(sp)
20107b14:	da3e                	sw	a5,52(sp)
20107b16:	d842                	sw	a6,48(sp)
20107b18:	d646                	sw	a7,44(sp)
20107b1a:	d472                	sw	t3,40(sp)
20107b1c:	d276                	sw	t4,36(sp)
20107b1e:	d07a                	sw	t5,32(sp)
20107b20:	ce7e                	sw	t6,28(sp)
20107b22:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20107b24:	eaeff0ef          	jal	201071d2 <__metal_myhart_id>
20107b28:	872a                	mv	a4,a0
20107b2a:	800017b7          	lui	a5,0x80001
20107b2e:	070a                	sll	a4,a4,0x2
20107b30:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107b34:	97ba                	add	a5,a5,a4
20107b36:	439c                	lw	a5,0(a5)
20107b38:	faf42623          	sw	a5,-84(s0)
20107b3c:	fac42783          	lw	a5,-84(s0)
20107b40:	c78d                	beqz	a5,20107b6a <metal_lc6_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20107b42:	fac42503          	lw	a0,-84(s0)
20107b46:	e0eff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107b4a:	faa42423          	sw	a0,-88(s0)
20107b4e:	fa842783          	lw	a5,-88(s0)
20107b52:	2a87a783          	lw	a5,680(a5)
20107b56:	faf42223          	sw	a5,-92(s0)
20107b5a:	fa842783          	lw	a5,-88(s0)
20107b5e:	2a07a783          	lw	a5,672(a5)
20107b62:	fa442583          	lw	a1,-92(s0)
20107b66:	4559                	li	a0,22
20107b68:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:246
}
20107b6a:	0001                	nop
20107b6c:	40f6                	lw	ra,92(sp)
20107b6e:	42e6                	lw	t0,88(sp)
20107b70:	4356                	lw	t1,84(sp)
20107b72:	43c6                	lw	t2,80(sp)
20107b74:	4436                	lw	s0,76(sp)
20107b76:	4526                	lw	a0,72(sp)
20107b78:	4596                	lw	a1,68(sp)
20107b7a:	4606                	lw	a2,64(sp)
20107b7c:	56f2                	lw	a3,60(sp)
20107b7e:	5762                	lw	a4,56(sp)
20107b80:	57d2                	lw	a5,52(sp)
20107b82:	5842                	lw	a6,48(sp)
20107b84:	58b2                	lw	a7,44(sp)
20107b86:	5e22                	lw	t3,40(sp)
20107b88:	5e92                	lw	t4,36(sp)
20107b8a:	5f02                	lw	t5,32(sp)
20107b8c:	4ff2                	lw	t6,28(sp)
20107b8e:	6125                	add	sp,sp,96
20107b90:	30200073          	mret

20107b94 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20107b94:	711d                	add	sp,sp,-96
20107b96:	ce86                	sw	ra,92(sp)
20107b98:	cc96                	sw	t0,88(sp)
20107b9a:	ca9a                	sw	t1,84(sp)
20107b9c:	c89e                	sw	t2,80(sp)
20107b9e:	c6a2                	sw	s0,76(sp)
20107ba0:	c4aa                	sw	a0,72(sp)
20107ba2:	c2ae                	sw	a1,68(sp)
20107ba4:	c0b2                	sw	a2,64(sp)
20107ba6:	de36                	sw	a3,60(sp)
20107ba8:	dc3a                	sw	a4,56(sp)
20107baa:	da3e                	sw	a5,52(sp)
20107bac:	d842                	sw	a6,48(sp)
20107bae:	d646                	sw	a7,44(sp)
20107bb0:	d472                	sw	t3,40(sp)
20107bb2:	d276                	sw	t4,36(sp)
20107bb4:	d07a                	sw	t5,32(sp)
20107bb6:	ce7e                	sw	t6,28(sp)
20107bb8:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20107bba:	e18ff0ef          	jal	201071d2 <__metal_myhart_id>
20107bbe:	872a                	mv	a4,a0
20107bc0:	800017b7          	lui	a5,0x80001
20107bc4:	070a                	sll	a4,a4,0x2
20107bc6:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107bca:	97ba                	add	a5,a5,a4
20107bcc:	439c                	lw	a5,0(a5)
20107bce:	faf42623          	sw	a5,-84(s0)
20107bd2:	fac42783          	lw	a5,-84(s0)
20107bd6:	c78d                	beqz	a5,20107c00 <metal_lc7_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20107bd8:	fac42503          	lw	a0,-84(s0)
20107bdc:	d78ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107be0:	faa42423          	sw	a0,-88(s0)
20107be4:	fa842783          	lw	a5,-88(s0)
20107be8:	2c07a783          	lw	a5,704(a5)
20107bec:	faf42223          	sw	a5,-92(s0)
20107bf0:	fa842783          	lw	a5,-88(s0)
20107bf4:	2b87a783          	lw	a5,696(a5)
20107bf8:	fa442583          	lw	a1,-92(s0)
20107bfc:	455d                	li	a0,23
20107bfe:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:251
}
20107c00:	0001                	nop
20107c02:	40f6                	lw	ra,92(sp)
20107c04:	42e6                	lw	t0,88(sp)
20107c06:	4356                	lw	t1,84(sp)
20107c08:	43c6                	lw	t2,80(sp)
20107c0a:	4436                	lw	s0,76(sp)
20107c0c:	4526                	lw	a0,72(sp)
20107c0e:	4596                	lw	a1,68(sp)
20107c10:	4606                	lw	a2,64(sp)
20107c12:	56f2                	lw	a3,60(sp)
20107c14:	5762                	lw	a4,56(sp)
20107c16:	57d2                	lw	a5,52(sp)
20107c18:	5842                	lw	a6,48(sp)
20107c1a:	58b2                	lw	a7,44(sp)
20107c1c:	5e22                	lw	t3,40(sp)
20107c1e:	5e92                	lw	t4,36(sp)
20107c20:	5f02                	lw	t5,32(sp)
20107c22:	4ff2                	lw	t6,28(sp)
20107c24:	6125                	add	sp,sp,96
20107c26:	30200073          	mret

20107c2a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20107c2a:	711d                	add	sp,sp,-96
20107c2c:	ce86                	sw	ra,92(sp)
20107c2e:	cc96                	sw	t0,88(sp)
20107c30:	ca9a                	sw	t1,84(sp)
20107c32:	c89e                	sw	t2,80(sp)
20107c34:	c6a2                	sw	s0,76(sp)
20107c36:	c4aa                	sw	a0,72(sp)
20107c38:	c2ae                	sw	a1,68(sp)
20107c3a:	c0b2                	sw	a2,64(sp)
20107c3c:	de36                	sw	a3,60(sp)
20107c3e:	dc3a                	sw	a4,56(sp)
20107c40:	da3e                	sw	a5,52(sp)
20107c42:	d842                	sw	a6,48(sp)
20107c44:	d646                	sw	a7,44(sp)
20107c46:	d472                	sw	t3,40(sp)
20107c48:	d276                	sw	t4,36(sp)
20107c4a:	d07a                	sw	t5,32(sp)
20107c4c:	ce7e                	sw	t6,28(sp)
20107c4e:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20107c50:	d82ff0ef          	jal	201071d2 <__metal_myhart_id>
20107c54:	872a                	mv	a4,a0
20107c56:	800017b7          	lui	a5,0x80001
20107c5a:	070a                	sll	a4,a4,0x2
20107c5c:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107c60:	97ba                	add	a5,a5,a4
20107c62:	439c                	lw	a5,0(a5)
20107c64:	faf42623          	sw	a5,-84(s0)
20107c68:	fac42783          	lw	a5,-84(s0)
20107c6c:	c78d                	beqz	a5,20107c96 <metal_lc8_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20107c6e:	fac42503          	lw	a0,-84(s0)
20107c72:	ce2ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107c76:	faa42423          	sw	a0,-88(s0)
20107c7a:	fa842783          	lw	a5,-88(s0)
20107c7e:	2d87a783          	lw	a5,728(a5)
20107c82:	faf42223          	sw	a5,-92(s0)
20107c86:	fa842783          	lw	a5,-88(s0)
20107c8a:	2d07a783          	lw	a5,720(a5)
20107c8e:	fa442583          	lw	a1,-92(s0)
20107c92:	4561                	li	a0,24
20107c94:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:256
}
20107c96:	0001                	nop
20107c98:	40f6                	lw	ra,92(sp)
20107c9a:	42e6                	lw	t0,88(sp)
20107c9c:	4356                	lw	t1,84(sp)
20107c9e:	43c6                	lw	t2,80(sp)
20107ca0:	4436                	lw	s0,76(sp)
20107ca2:	4526                	lw	a0,72(sp)
20107ca4:	4596                	lw	a1,68(sp)
20107ca6:	4606                	lw	a2,64(sp)
20107ca8:	56f2                	lw	a3,60(sp)
20107caa:	5762                	lw	a4,56(sp)
20107cac:	57d2                	lw	a5,52(sp)
20107cae:	5842                	lw	a6,48(sp)
20107cb0:	58b2                	lw	a7,44(sp)
20107cb2:	5e22                	lw	t3,40(sp)
20107cb4:	5e92                	lw	t4,36(sp)
20107cb6:	5f02                	lw	t5,32(sp)
20107cb8:	4ff2                	lw	t6,28(sp)
20107cba:	6125                	add	sp,sp,96
20107cbc:	30200073          	mret

20107cc0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20107cc0:	711d                	add	sp,sp,-96
20107cc2:	ce86                	sw	ra,92(sp)
20107cc4:	cc96                	sw	t0,88(sp)
20107cc6:	ca9a                	sw	t1,84(sp)
20107cc8:	c89e                	sw	t2,80(sp)
20107cca:	c6a2                	sw	s0,76(sp)
20107ccc:	c4aa                	sw	a0,72(sp)
20107cce:	c2ae                	sw	a1,68(sp)
20107cd0:	c0b2                	sw	a2,64(sp)
20107cd2:	de36                	sw	a3,60(sp)
20107cd4:	dc3a                	sw	a4,56(sp)
20107cd6:	da3e                	sw	a5,52(sp)
20107cd8:	d842                	sw	a6,48(sp)
20107cda:	d646                	sw	a7,44(sp)
20107cdc:	d472                	sw	t3,40(sp)
20107cde:	d276                	sw	t4,36(sp)
20107ce0:	d07a                	sw	t5,32(sp)
20107ce2:	ce7e                	sw	t6,28(sp)
20107ce4:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20107ce6:	cecff0ef          	jal	201071d2 <__metal_myhart_id>
20107cea:	872a                	mv	a4,a0
20107cec:	800017b7          	lui	a5,0x80001
20107cf0:	070a                	sll	a4,a4,0x2
20107cf2:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107cf6:	97ba                	add	a5,a5,a4
20107cf8:	439c                	lw	a5,0(a5)
20107cfa:	faf42623          	sw	a5,-84(s0)
20107cfe:	fac42783          	lw	a5,-84(s0)
20107d02:	c78d                	beqz	a5,20107d2c <metal_lc9_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20107d04:	fac42503          	lw	a0,-84(s0)
20107d08:	c4cff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107d0c:	faa42423          	sw	a0,-88(s0)
20107d10:	fa842783          	lw	a5,-88(s0)
20107d14:	2f07a783          	lw	a5,752(a5)
20107d18:	faf42223          	sw	a5,-92(s0)
20107d1c:	fa842783          	lw	a5,-88(s0)
20107d20:	2e87a783          	lw	a5,744(a5)
20107d24:	fa442583          	lw	a1,-92(s0)
20107d28:	4565                	li	a0,25
20107d2a:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:261
}
20107d2c:	0001                	nop
20107d2e:	40f6                	lw	ra,92(sp)
20107d30:	42e6                	lw	t0,88(sp)
20107d32:	4356                	lw	t1,84(sp)
20107d34:	43c6                	lw	t2,80(sp)
20107d36:	4436                	lw	s0,76(sp)
20107d38:	4526                	lw	a0,72(sp)
20107d3a:	4596                	lw	a1,68(sp)
20107d3c:	4606                	lw	a2,64(sp)
20107d3e:	56f2                	lw	a3,60(sp)
20107d40:	5762                	lw	a4,56(sp)
20107d42:	57d2                	lw	a5,52(sp)
20107d44:	5842                	lw	a6,48(sp)
20107d46:	58b2                	lw	a7,44(sp)
20107d48:	5e22                	lw	t3,40(sp)
20107d4a:	5e92                	lw	t4,36(sp)
20107d4c:	5f02                	lw	t5,32(sp)
20107d4e:	4ff2                	lw	t6,28(sp)
20107d50:	6125                	add	sp,sp,96
20107d52:	30200073          	mret

20107d56 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20107d56:	711d                	add	sp,sp,-96
20107d58:	ce86                	sw	ra,92(sp)
20107d5a:	cc96                	sw	t0,88(sp)
20107d5c:	ca9a                	sw	t1,84(sp)
20107d5e:	c89e                	sw	t2,80(sp)
20107d60:	c6a2                	sw	s0,76(sp)
20107d62:	c4aa                	sw	a0,72(sp)
20107d64:	c2ae                	sw	a1,68(sp)
20107d66:	c0b2                	sw	a2,64(sp)
20107d68:	de36                	sw	a3,60(sp)
20107d6a:	dc3a                	sw	a4,56(sp)
20107d6c:	da3e                	sw	a5,52(sp)
20107d6e:	d842                	sw	a6,48(sp)
20107d70:	d646                	sw	a7,44(sp)
20107d72:	d472                	sw	t3,40(sp)
20107d74:	d276                	sw	t4,36(sp)
20107d76:	d07a                	sw	t5,32(sp)
20107d78:	ce7e                	sw	t6,28(sp)
20107d7a:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20107d7c:	c56ff0ef          	jal	201071d2 <__metal_myhart_id>
20107d80:	872a                	mv	a4,a0
20107d82:	800017b7          	lui	a5,0x80001
20107d86:	070a                	sll	a4,a4,0x2
20107d88:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107d8c:	97ba                	add	a5,a5,a4
20107d8e:	439c                	lw	a5,0(a5)
20107d90:	faf42623          	sw	a5,-84(s0)
20107d94:	fac42783          	lw	a5,-84(s0)
20107d98:	c78d                	beqz	a5,20107dc2 <metal_lc10_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20107d9a:	fac42503          	lw	a0,-84(s0)
20107d9e:	bb6ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107da2:	faa42423          	sw	a0,-88(s0)
20107da6:	fa842783          	lw	a5,-88(s0)
20107daa:	3087a783          	lw	a5,776(a5)
20107dae:	faf42223          	sw	a5,-92(s0)
20107db2:	fa842783          	lw	a5,-88(s0)
20107db6:	3007a783          	lw	a5,768(a5)
20107dba:	fa442583          	lw	a1,-92(s0)
20107dbe:	4569                	li	a0,26
20107dc0:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:267
}
20107dc2:	0001                	nop
20107dc4:	40f6                	lw	ra,92(sp)
20107dc6:	42e6                	lw	t0,88(sp)
20107dc8:	4356                	lw	t1,84(sp)
20107dca:	43c6                	lw	t2,80(sp)
20107dcc:	4436                	lw	s0,76(sp)
20107dce:	4526                	lw	a0,72(sp)
20107dd0:	4596                	lw	a1,68(sp)
20107dd2:	4606                	lw	a2,64(sp)
20107dd4:	56f2                	lw	a3,60(sp)
20107dd6:	5762                	lw	a4,56(sp)
20107dd8:	57d2                	lw	a5,52(sp)
20107dda:	5842                	lw	a6,48(sp)
20107ddc:	58b2                	lw	a7,44(sp)
20107dde:	5e22                	lw	t3,40(sp)
20107de0:	5e92                	lw	t4,36(sp)
20107de2:	5f02                	lw	t5,32(sp)
20107de4:	4ff2                	lw	t6,28(sp)
20107de6:	6125                	add	sp,sp,96
20107de8:	30200073          	mret

20107dec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20107dec:	711d                	add	sp,sp,-96
20107dee:	ce86                	sw	ra,92(sp)
20107df0:	cc96                	sw	t0,88(sp)
20107df2:	ca9a                	sw	t1,84(sp)
20107df4:	c89e                	sw	t2,80(sp)
20107df6:	c6a2                	sw	s0,76(sp)
20107df8:	c4aa                	sw	a0,72(sp)
20107dfa:	c2ae                	sw	a1,68(sp)
20107dfc:	c0b2                	sw	a2,64(sp)
20107dfe:	de36                	sw	a3,60(sp)
20107e00:	dc3a                	sw	a4,56(sp)
20107e02:	da3e                	sw	a5,52(sp)
20107e04:	d842                	sw	a6,48(sp)
20107e06:	d646                	sw	a7,44(sp)
20107e08:	d472                	sw	t3,40(sp)
20107e0a:	d276                	sw	t4,36(sp)
20107e0c:	d07a                	sw	t5,32(sp)
20107e0e:	ce7e                	sw	t6,28(sp)
20107e10:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20107e12:	bc0ff0ef          	jal	201071d2 <__metal_myhart_id>
20107e16:	872a                	mv	a4,a0
20107e18:	800017b7          	lui	a5,0x80001
20107e1c:	070a                	sll	a4,a4,0x2
20107e1e:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107e22:	97ba                	add	a5,a5,a4
20107e24:	439c                	lw	a5,0(a5)
20107e26:	faf42623          	sw	a5,-84(s0)
20107e2a:	fac42783          	lw	a5,-84(s0)
20107e2e:	c78d                	beqz	a5,20107e58 <metal_lc11_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20107e30:	fac42503          	lw	a0,-84(s0)
20107e34:	b20ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107e38:	faa42423          	sw	a0,-88(s0)
20107e3c:	fa842783          	lw	a5,-88(s0)
20107e40:	3207a783          	lw	a5,800(a5)
20107e44:	faf42223          	sw	a5,-92(s0)
20107e48:	fa842783          	lw	a5,-88(s0)
20107e4c:	3187a783          	lw	a5,792(a5)
20107e50:	fa442583          	lw	a1,-92(s0)
20107e54:	456d                	li	a0,27
20107e56:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:273
}
20107e58:	0001                	nop
20107e5a:	40f6                	lw	ra,92(sp)
20107e5c:	42e6                	lw	t0,88(sp)
20107e5e:	4356                	lw	t1,84(sp)
20107e60:	43c6                	lw	t2,80(sp)
20107e62:	4436                	lw	s0,76(sp)
20107e64:	4526                	lw	a0,72(sp)
20107e66:	4596                	lw	a1,68(sp)
20107e68:	4606                	lw	a2,64(sp)
20107e6a:	56f2                	lw	a3,60(sp)
20107e6c:	5762                	lw	a4,56(sp)
20107e6e:	57d2                	lw	a5,52(sp)
20107e70:	5842                	lw	a6,48(sp)
20107e72:	58b2                	lw	a7,44(sp)
20107e74:	5e22                	lw	t3,40(sp)
20107e76:	5e92                	lw	t4,36(sp)
20107e78:	5f02                	lw	t5,32(sp)
20107e7a:	4ff2                	lw	t6,28(sp)
20107e7c:	6125                	add	sp,sp,96
20107e7e:	30200073          	mret

20107e82 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20107e82:	711d                	add	sp,sp,-96
20107e84:	ce86                	sw	ra,92(sp)
20107e86:	cc96                	sw	t0,88(sp)
20107e88:	ca9a                	sw	t1,84(sp)
20107e8a:	c89e                	sw	t2,80(sp)
20107e8c:	c6a2                	sw	s0,76(sp)
20107e8e:	c4aa                	sw	a0,72(sp)
20107e90:	c2ae                	sw	a1,68(sp)
20107e92:	c0b2                	sw	a2,64(sp)
20107e94:	de36                	sw	a3,60(sp)
20107e96:	dc3a                	sw	a4,56(sp)
20107e98:	da3e                	sw	a5,52(sp)
20107e9a:	d842                	sw	a6,48(sp)
20107e9c:	d646                	sw	a7,44(sp)
20107e9e:	d472                	sw	t3,40(sp)
20107ea0:	d276                	sw	t4,36(sp)
20107ea2:	d07a                	sw	t5,32(sp)
20107ea4:	ce7e                	sw	t6,28(sp)
20107ea6:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20107ea8:	b2aff0ef          	jal	201071d2 <__metal_myhart_id>
20107eac:	872a                	mv	a4,a0
20107eae:	800017b7          	lui	a5,0x80001
20107eb2:	070a                	sll	a4,a4,0x2
20107eb4:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107eb8:	97ba                	add	a5,a5,a4
20107eba:	439c                	lw	a5,0(a5)
20107ebc:	faf42623          	sw	a5,-84(s0)
20107ec0:	fac42783          	lw	a5,-84(s0)
20107ec4:	c78d                	beqz	a5,20107eee <metal_lc12_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20107ec6:	fac42503          	lw	a0,-84(s0)
20107eca:	a8aff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107ece:	faa42423          	sw	a0,-88(s0)
20107ed2:	fa842783          	lw	a5,-88(s0)
20107ed6:	3387a783          	lw	a5,824(a5)
20107eda:	faf42223          	sw	a5,-92(s0)
20107ede:	fa842783          	lw	a5,-88(s0)
20107ee2:	3307a783          	lw	a5,816(a5)
20107ee6:	fa442583          	lw	a1,-92(s0)
20107eea:	4571                	li	a0,28
20107eec:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:279
}
20107eee:	0001                	nop
20107ef0:	40f6                	lw	ra,92(sp)
20107ef2:	42e6                	lw	t0,88(sp)
20107ef4:	4356                	lw	t1,84(sp)
20107ef6:	43c6                	lw	t2,80(sp)
20107ef8:	4436                	lw	s0,76(sp)
20107efa:	4526                	lw	a0,72(sp)
20107efc:	4596                	lw	a1,68(sp)
20107efe:	4606                	lw	a2,64(sp)
20107f00:	56f2                	lw	a3,60(sp)
20107f02:	5762                	lw	a4,56(sp)
20107f04:	57d2                	lw	a5,52(sp)
20107f06:	5842                	lw	a6,48(sp)
20107f08:	58b2                	lw	a7,44(sp)
20107f0a:	5e22                	lw	t3,40(sp)
20107f0c:	5e92                	lw	t4,36(sp)
20107f0e:	5f02                	lw	t5,32(sp)
20107f10:	4ff2                	lw	t6,28(sp)
20107f12:	6125                	add	sp,sp,96
20107f14:	30200073          	mret

20107f18 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20107f18:	711d                	add	sp,sp,-96
20107f1a:	ce86                	sw	ra,92(sp)
20107f1c:	cc96                	sw	t0,88(sp)
20107f1e:	ca9a                	sw	t1,84(sp)
20107f20:	c89e                	sw	t2,80(sp)
20107f22:	c6a2                	sw	s0,76(sp)
20107f24:	c4aa                	sw	a0,72(sp)
20107f26:	c2ae                	sw	a1,68(sp)
20107f28:	c0b2                	sw	a2,64(sp)
20107f2a:	de36                	sw	a3,60(sp)
20107f2c:	dc3a                	sw	a4,56(sp)
20107f2e:	da3e                	sw	a5,52(sp)
20107f30:	d842                	sw	a6,48(sp)
20107f32:	d646                	sw	a7,44(sp)
20107f34:	d472                	sw	t3,40(sp)
20107f36:	d276                	sw	t4,36(sp)
20107f38:	d07a                	sw	t5,32(sp)
20107f3a:	ce7e                	sw	t6,28(sp)
20107f3c:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20107f3e:	a94ff0ef          	jal	201071d2 <__metal_myhart_id>
20107f42:	872a                	mv	a4,a0
20107f44:	800017b7          	lui	a5,0x80001
20107f48:	070a                	sll	a4,a4,0x2
20107f4a:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107f4e:	97ba                	add	a5,a5,a4
20107f50:	439c                	lw	a5,0(a5)
20107f52:	faf42623          	sw	a5,-84(s0)
20107f56:	fac42783          	lw	a5,-84(s0)
20107f5a:	c78d                	beqz	a5,20107f84 <metal_lc13_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20107f5c:	fac42503          	lw	a0,-84(s0)
20107f60:	9f4ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107f64:	faa42423          	sw	a0,-88(s0)
20107f68:	fa842783          	lw	a5,-88(s0)
20107f6c:	3507a783          	lw	a5,848(a5)
20107f70:	faf42223          	sw	a5,-92(s0)
20107f74:	fa842783          	lw	a5,-88(s0)
20107f78:	3487a783          	lw	a5,840(a5)
20107f7c:	fa442583          	lw	a1,-92(s0)
20107f80:	4575                	li	a0,29
20107f82:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:285
}
20107f84:	0001                	nop
20107f86:	40f6                	lw	ra,92(sp)
20107f88:	42e6                	lw	t0,88(sp)
20107f8a:	4356                	lw	t1,84(sp)
20107f8c:	43c6                	lw	t2,80(sp)
20107f8e:	4436                	lw	s0,76(sp)
20107f90:	4526                	lw	a0,72(sp)
20107f92:	4596                	lw	a1,68(sp)
20107f94:	4606                	lw	a2,64(sp)
20107f96:	56f2                	lw	a3,60(sp)
20107f98:	5762                	lw	a4,56(sp)
20107f9a:	57d2                	lw	a5,52(sp)
20107f9c:	5842                	lw	a6,48(sp)
20107f9e:	58b2                	lw	a7,44(sp)
20107fa0:	5e22                	lw	t3,40(sp)
20107fa2:	5e92                	lw	t4,36(sp)
20107fa4:	5f02                	lw	t5,32(sp)
20107fa6:	4ff2                	lw	t6,28(sp)
20107fa8:	6125                	add	sp,sp,96
20107faa:	30200073          	mret

20107fae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20107fae:	711d                	add	sp,sp,-96
20107fb0:	ce86                	sw	ra,92(sp)
20107fb2:	cc96                	sw	t0,88(sp)
20107fb4:	ca9a                	sw	t1,84(sp)
20107fb6:	c89e                	sw	t2,80(sp)
20107fb8:	c6a2                	sw	s0,76(sp)
20107fba:	c4aa                	sw	a0,72(sp)
20107fbc:	c2ae                	sw	a1,68(sp)
20107fbe:	c0b2                	sw	a2,64(sp)
20107fc0:	de36                	sw	a3,60(sp)
20107fc2:	dc3a                	sw	a4,56(sp)
20107fc4:	da3e                	sw	a5,52(sp)
20107fc6:	d842                	sw	a6,48(sp)
20107fc8:	d646                	sw	a7,44(sp)
20107fca:	d472                	sw	t3,40(sp)
20107fcc:	d276                	sw	t4,36(sp)
20107fce:	d07a                	sw	t5,32(sp)
20107fd0:	ce7e                	sw	t6,28(sp)
20107fd2:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20107fd4:	9feff0ef          	jal	201071d2 <__metal_myhart_id>
20107fd8:	872a                	mv	a4,a0
20107fda:	800017b7          	lui	a5,0x80001
20107fde:	070a                	sll	a4,a4,0x2
20107fe0:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
20107fe4:	97ba                	add	a5,a5,a4
20107fe6:	439c                	lw	a5,0(a5)
20107fe8:	faf42623          	sw	a5,-84(s0)
20107fec:	fac42783          	lw	a5,-84(s0)
20107ff0:	c78d                	beqz	a5,2010801a <metal_lc14_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20107ff2:	fac42503          	lw	a0,-84(s0)
20107ff6:	95eff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20107ffa:	faa42423          	sw	a0,-88(s0)
20107ffe:	fa842783          	lw	a5,-88(s0)
20108002:	3687a783          	lw	a5,872(a5)
20108006:	faf42223          	sw	a5,-92(s0)
2010800a:	fa842783          	lw	a5,-88(s0)
2010800e:	3607a783          	lw	a5,864(a5)
20108012:	fa442583          	lw	a1,-92(s0)
20108016:	4579                	li	a0,30
20108018:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:291
}
2010801a:	0001                	nop
2010801c:	40f6                	lw	ra,92(sp)
2010801e:	42e6                	lw	t0,88(sp)
20108020:	4356                	lw	t1,84(sp)
20108022:	43c6                	lw	t2,80(sp)
20108024:	4436                	lw	s0,76(sp)
20108026:	4526                	lw	a0,72(sp)
20108028:	4596                	lw	a1,68(sp)
2010802a:	4606                	lw	a2,64(sp)
2010802c:	56f2                	lw	a3,60(sp)
2010802e:	5762                	lw	a4,56(sp)
20108030:	57d2                	lw	a5,52(sp)
20108032:	5842                	lw	a6,48(sp)
20108034:	58b2                	lw	a7,44(sp)
20108036:	5e22                	lw	t3,40(sp)
20108038:	5e92                	lw	t4,36(sp)
2010803a:	5f02                	lw	t5,32(sp)
2010803c:	4ff2                	lw	t6,28(sp)
2010803e:	6125                	add	sp,sp,96
20108040:	30200073          	mret

20108044 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20108044:	711d                	add	sp,sp,-96
20108046:	ce86                	sw	ra,92(sp)
20108048:	cc96                	sw	t0,88(sp)
2010804a:	ca9a                	sw	t1,84(sp)
2010804c:	c89e                	sw	t2,80(sp)
2010804e:	c6a2                	sw	s0,76(sp)
20108050:	c4aa                	sw	a0,72(sp)
20108052:	c2ae                	sw	a1,68(sp)
20108054:	c0b2                	sw	a2,64(sp)
20108056:	de36                	sw	a3,60(sp)
20108058:	dc3a                	sw	a4,56(sp)
2010805a:	da3e                	sw	a5,52(sp)
2010805c:	d842                	sw	a6,48(sp)
2010805e:	d646                	sw	a7,44(sp)
20108060:	d472                	sw	t3,40(sp)
20108062:	d276                	sw	t4,36(sp)
20108064:	d07a                	sw	t5,32(sp)
20108066:	ce7e                	sw	t6,28(sp)
20108068:	1080                	add	s0,sp,96
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
2010806a:	968ff0ef          	jal	201071d2 <__metal_myhart_id>
2010806e:	872a                	mv	a4,a0
20108070:	800017b7          	lui	a5,0x80001
20108074:	070a                	sll	a4,a4,0x2
20108076:	a8478793          	add	a5,a5,-1404 # 80000a84 <__metal_cpu_table>
2010807a:	97ba                	add	a5,a5,a4
2010807c:	439c                	lw	a5,0(a5)
2010807e:	faf42623          	sw	a5,-84(s0)
20108082:	fac42783          	lw	a5,-84(s0)
20108086:	c78d                	beqz	a5,201080b0 <metal_lc15_interrupt_vector_handler+0x6c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20108088:	fac42503          	lw	a0,-84(s0)
2010808c:	8c8ff0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20108090:	faa42423          	sw	a0,-88(s0)
20108094:	fa842783          	lw	a5,-88(s0)
20108098:	3807a783          	lw	a5,896(a5)
2010809c:	faf42223          	sw	a5,-92(s0)
201080a0:	fa842783          	lw	a5,-88(s0)
201080a4:	3787a783          	lw	a5,888(a5)
201080a8:	fa442583          	lw	a1,-92(s0)
201080ac:	457d                	li	a0,31
201080ae:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:297
}
201080b0:	0001                	nop
201080b2:	40f6                	lw	ra,92(sp)
201080b4:	42e6                	lw	t0,88(sp)
201080b6:	4356                	lw	t1,84(sp)
201080b8:	43c6                	lw	t2,80(sp)
201080ba:	4436                	lw	s0,76(sp)
201080bc:	4526                	lw	a0,72(sp)
201080be:	4596                	lw	a1,68(sp)
201080c0:	4606                	lw	a2,64(sp)
201080c2:	56f2                	lw	a3,60(sp)
201080c4:	5762                	lw	a4,56(sp)
201080c6:	57d2                	lw	a5,52(sp)
201080c8:	5842                	lw	a6,48(sp)
201080ca:	58b2                	lw	a7,44(sp)
201080cc:	5e22                	lw	t3,40(sp)
201080ce:	5e92                	lw	t4,36(sp)
201080d0:	5f02                	lw	t5,32(sp)
201080d2:	4ff2                	lw	t6,28(sp)
201080d4:	6125                	add	sp,sp,96
201080d6:	30200073          	mret

201080da <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
201080da:	1101                	add	sp,sp,-32
201080dc:	ce22                	sw	s0,28(sp)
201080de:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
201080e0:	305027f3          	csrr	a5,mtvec
201080e4:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
201080e8:	fec42783          	lw	a5,-20(s0)
201080ec:	03f7f793          	and	a5,a5,63
201080f0:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
201080f4:	fec42703          	lw	a4,-20(s0)
201080f8:	478d                	li	a5,3
201080fa:	02f70363          	beq	a4,a5,20108120 <__metal_controller_interrupt_vector_mode+0x46>
201080fe:	fec42703          	lw	a4,-20(s0)
20108102:	478d                	li	a5,3
20108104:	02e7e263          	bltu	a5,a4,20108128 <__metal_controller_interrupt_vector_mode+0x4e>
20108108:	fec42703          	lw	a4,-20(s0)
2010810c:	4785                	li	a5,1
2010810e:	00f70b63          	beq	a4,a5,20108124 <__metal_controller_interrupt_vector_mode+0x4a>
20108112:	fec42703          	lw	a4,-20(s0)
20108116:	4789                	li	a5,2
20108118:	00f71863          	bne	a4,a5,20108128 <__metal_controller_interrupt_vector_mode+0x4e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2010811c:	478d                	li	a5,3
2010811e:	a031                	j	2010812a <__metal_controller_interrupt_vector_mode+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20108120:	4791                	li	a5,4
20108122:	a021                	j	2010812a <__metal_controller_interrupt_vector_mode+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20108124:	4785                	li	a5,1
20108126:	a011                	j	2010812a <__metal_controller_interrupt_vector_mode+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20108128:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:314
}
2010812a:	853e                	mv	a0,a5
2010812c:	4472                	lw	s0,28(sp)
2010812e:	6105                	add	sp,sp,32
20108130:	8082                	ret

20108132 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20108132:	7179                	add	sp,sp,-48
20108134:	d622                	sw	s0,44(sp)
20108136:	1800                	add	s0,sp,48
20108138:	fca42e23          	sw	a0,-36(s0)
2010813c:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20108140:	305027f3          	csrr	a5,mtvec
20108144:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20108148:	fec42783          	lw	a5,-20(s0)
2010814c:	fc07f793          	and	a5,a5,-64
20108150:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20108154:	fd842783          	lw	a5,-40(s0)
20108158:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
2010815c:	fdc42703          	lw	a4,-36(s0)
20108160:	4791                	li	a5,4
20108162:	04f70563          	beq	a4,a5,201081ac <__metal_controller_interrupt_vector+0x7a>
20108166:	fdc42703          	lw	a4,-36(s0)
2010816a:	4791                	li	a5,4
2010816c:	06e7e863          	bltu	a5,a4,201081dc <__metal_controller_interrupt_vector+0xaa>
20108170:	fdc42703          	lw	a4,-36(s0)
20108174:	478d                	li	a5,3
20108176:	06e7e363          	bltu	a5,a4,201081dc <__metal_controller_interrupt_vector+0xaa>
2010817a:	fdc42703          	lw	a4,-36(s0)
2010817e:	4789                	li	a5,2
20108180:	00f77b63          	bgeu	a4,a5,20108196 <__metal_controller_interrupt_vector+0x64>
20108184:	fdc42783          	lw	a5,-36(s0)
20108188:	c7a1                	beqz	a5,201081d0 <__metal_controller_interrupt_vector+0x9e>
2010818a:	fdc42703          	lw	a4,-36(s0)
2010818e:	4785                	li	a5,1
20108190:	02f70963          	beq	a4,a5,201081c2 <__metal_controller_interrupt_vector+0x90>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20108194:	a0a1                	j	201081dc <__metal_controller_interrupt_vector+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20108196:	fe842783          	lw	a5,-24(s0)
2010819a:	30779073          	csrw	mtvt,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2010819e:	fec42783          	lw	a5,-20(s0)
201081a2:	0027e793          	or	a5,a5,2
201081a6:	30579073          	csrw	mtvec,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
201081aa:	a80d                	j	201081dc <__metal_controller_interrupt_vector+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
201081ac:	fe842783          	lw	a5,-24(s0)
201081b0:	30779073          	csrw	mtvt,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
201081b4:	fec42783          	lw	a5,-20(s0)
201081b8:	0037e793          	or	a5,a5,3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
201081bc:	30579073          	csrw	mtvec,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
201081c0:	a831                	j	201081dc <__metal_controller_interrupt_vector+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
201081c2:	fe842783          	lw	a5,-24(s0)
201081c6:	0017e793          	or	a5,a5,1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
201081ca:	30579073          	csrw	mtvec,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
201081ce:	a039                	j	201081dc <__metal_controller_interrupt_vector+0xaa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
201081d0:	fe842783          	lw	a5,-24(s0)
201081d4:	9bf1                	and	a5,a5,-4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
201081d6:	30579073          	csrw	mtvec,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
201081da:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:344
}
201081dc:	0001                	nop
201081de:	5432                	lw	s0,44(sp)
201081e0:	6145                	add	sp,sp,48
201081e2:	8082                	ret

201081e4 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
201081e4:	1101                	add	sp,sp,-32
201081e6:	ce22                	sw	s0,28(sp)
201081e8:	1000                	add	s0,sp,32
201081ea:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
201081ee:	fec42703          	lw	a4,-20(s0)
201081f2:	47fd                	li	a5,31
201081f4:	02e7c563          	blt	a5,a4,2010821e <__metal_valid_interrupt_id+0x3a>
201081f8:	fec42703          	lw	a4,-20(s0)
201081fc:	478d                	li	a5,3
201081fe:	02f74863          	blt	a4,a5,2010822e <__metal_valid_interrupt_id+0x4a>
20108202:	fec42783          	lw	a5,-20(s0)
20108206:	7745                	lui	a4,0xffff1
20108208:	88870713          	add	a4,a4,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffef118>
2010820c:	00f757b3          	srl	a5,a4,a5
20108210:	8b85                	and	a5,a5,1
20108212:	00f037b3          	snez	a5,a5
20108216:	0ff7f793          	zext.b	a5,a5
2010821a:	eb81                	bnez	a5,2010822a <__metal_valid_interrupt_id+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2010821c:	a809                	j	2010822e <__metal_valid_interrupt_id+0x4a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2010821e:	fec42703          	lw	a4,-20(s0)
20108222:	08000793          	li	a5,128
20108226:	00f71463          	bne	a4,a5,2010822e <__metal_valid_interrupt_id+0x4a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
2010822a:	4785                	li	a5,1
2010822c:	a019                	j	20108232 <__metal_valid_interrupt_id+0x4e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
2010822e:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20108230:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:374
}
20108232:	853e                	mv	a0,a5
20108234:	4472                	lw	s0,28(sp)
20108236:	6105                	add	sp,sp,32
20108238:	8082                	ret

2010823a <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
2010823a:	7179                	add	sp,sp,-48
2010823c:	d606                	sw	ra,44(sp)
2010823e:	d422                	sw	s0,40(sp)
20108240:	1800                	add	s0,sp,48
20108242:	fca42e23          	sw	a0,-36(s0)
20108246:	fcb42c23          	sw	a1,-40(s0)
2010824a:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
2010824e:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20108252:	fdc42783          	lw	a5,-36(s0)
20108256:	e399                	bnez	a5,2010825c <__metal_local_interrupt_enable+0x22>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20108258:	57fd                	li	a5,-1
2010825a:	a849                	j	201082ec <__metal_local_interrupt_enable+0xb2>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
2010825c:	fd842703          	lw	a4,-40(s0)
20108260:	47fd                	li	a5,31
20108262:	08e7e063          	bltu	a5,a4,201082e2 <__metal_local_interrupt_enable+0xa8>
20108266:	fd842783          	lw	a5,-40(s0)
2010826a:	00279713          	sll	a4,a5,0x2
2010826e:	201047b7          	lui	a5,0x20104
20108272:	e8c78793          	add	a5,a5,-372 # 20103e8c <__metal_driver_vtable_riscv_clint0+0x64>
20108276:	97ba                	add	a5,a5,a4
20108278:	439c                	lw	a5,0(a5)
2010827a:	8782                	jr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
2010827c:	fd442783          	lw	a5,-44(s0)
20108280:	c781                	beqz	a5,20108288 <__metal_local_interrupt_enable+0x4e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20108282:	f6bfe0ef          	jal	201071ec <__metal_interrupt_global_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20108286:	a08d                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20108288:	f7dfe0ef          	jal	20107204 <__metal_interrupt_global_disable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2010828c:	a8b1                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2010828e:	fd442783          	lw	a5,-44(s0)
20108292:	c781                	beqz	a5,2010829a <__metal_local_interrupt_enable+0x60>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20108294:	f89fe0ef          	jal	2010721c <__metal_interrupt_software_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20108298:	a881                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2010829a:	f9bfe0ef          	jal	20107234 <__metal_interrupt_software_disable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
2010829e:	a0a9                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
201082a0:	fd442783          	lw	a5,-44(s0)
201082a4:	c781                	beqz	a5,201082ac <__metal_local_interrupt_enable+0x72>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
201082a6:	fa7fe0ef          	jal	2010724c <__metal_interrupt_timer_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
201082aa:	a83d                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
201082ac:	fbbfe0ef          	jal	20107266 <__metal_interrupt_timer_disable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
201082b0:	a825                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
201082b2:	fd442783          	lw	a5,-44(s0)
201082b6:	c781                	beqz	a5,201082be <__metal_local_interrupt_enable+0x84>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
201082b8:	fc9fe0ef          	jal	20107280 <__metal_interrupt_external_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
201082bc:	a035                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
201082be:	fdffe0ef          	jal	2010729c <__metal_interrupt_external_disable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
201082c2:	a01d                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
201082c4:	fd442783          	lw	a5,-44(s0)
201082c8:	c799                	beqz	a5,201082d6 <__metal_local_interrupt_enable+0x9c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
201082ca:	fd842783          	lw	a5,-40(s0)
201082ce:	853e                	mv	a0,a5
201082d0:	fe9fe0ef          	jal	201072b8 <__metal_interrupt_local_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
201082d4:	a811                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
201082d6:	fd842783          	lw	a5,-40(s0)
201082da:	853e                	mv	a0,a5
201082dc:	808ff0ef          	jal	201072e4 <__metal_interrupt_local_disable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
201082e0:	a021                	j	201082e8 <__metal_local_interrupt_enable+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
201082e2:	57fd                	li	a5,-1
201082e4:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
201082e8:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:439
}
201082ec:	853e                	mv	a0,a5
201082ee:	50b2                	lw	ra,44(sp)
201082f0:	5422                	lw	s0,40(sp)
201082f2:	6145                	add	sp,sp,48
201082f4:	8082                	ret

201082f6 <__metal_exception_register>:
__metal_exception_register():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
201082f6:	7179                	add	sp,sp,-48
201082f8:	d622                	sw	s0,44(sp)
201082fa:	1800                	add	s0,sp,48
201082fc:	fca42e23          	sw	a0,-36(s0)
20108300:	fcb42c23          	sw	a1,-40(s0)
20108304:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20108308:	fdc42783          	lw	a5,-36(s0)
2010830c:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20108310:	fd842703          	lw	a4,-40(s0)
20108314:	47ad                	li	a5,11
20108316:	02e7c263          	blt	a5,a4,2010833a <__metal_exception_register+0x44>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2010831a:	fd442783          	lw	a5,-44(s0)
2010831e:	cf91                	beqz	a5,2010833a <__metal_exception_register+0x44>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20108320:	fec42703          	lw	a4,-20(s0)
20108324:	fd842783          	lw	a5,-40(s0)
20108328:	0e878793          	add	a5,a5,232
2010832c:	078a                	sll	a5,a5,0x2
2010832e:	97ba                	add	a5,a5,a4
20108330:	fd442703          	lw	a4,-44(s0)
20108334:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20108336:	4781                	li	a5,0
20108338:	a011                	j	2010833c <__metal_exception_register+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
2010833a:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:450
}
2010833c:	853e                	mv	a0,a5
2010833e:	5432                	lw	s0,44(sp)
20108340:	6145                	add	sp,sp,48
20108342:	8082                	ret

20108344 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20108344:	7179                	add	sp,sp,-48
20108346:	d606                	sw	ra,44(sp)
20108348:	d422                	sw	s0,40(sp)
2010834a:	1800                	add	s0,sp,48
2010834c:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20108350:	fdc42783          	lw	a5,-36(s0)
20108354:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20108358:	fe442783          	lw	a5,-28(s0)
2010835c:	43dc                	lw	a5,4(a5)
2010835e:	e3e1                	bnez	a5,2010841e <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20108360:	fe042623          	sw	zero,-20(s0)
20108364:	a0b9                	j	201083b2 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20108366:	fe442683          	lw	a3,-28(s0)
2010836a:	fec42703          	lw	a4,-20(s0)
2010836e:	87ba                	mv	a5,a4
20108370:	0786                	sll	a5,a5,0x1
20108372:	97ba                	add	a5,a5,a4
20108374:	078e                	sll	a5,a5,0x3
20108376:	97b6                	add	a5,a5,a3
20108378:	0807a823          	sw	zero,144(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
2010837c:	fe442683          	lw	a3,-28(s0)
20108380:	fec42703          	lw	a4,-20(s0)
20108384:	87ba                	mv	a5,a4
20108386:	0786                	sll	a5,a5,0x1
20108388:	97ba                	add	a5,a5,a4
2010838a:	078e                	sll	a5,a5,0x3
2010838c:	97b6                	add	a5,a5,a3
2010838e:	0807aa23          	sw	zero,148(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20108392:	fe442683          	lw	a3,-28(s0)
20108396:	fec42703          	lw	a4,-20(s0)
2010839a:	87ba                	mv	a5,a4
2010839c:	0786                	sll	a5,a5,0x1
2010839e:	97ba                	add	a5,a5,a4
201083a0:	078e                	sll	a5,a5,0x3
201083a2:	97b6                	add	a5,a5,a3
201083a4:	0807ac23          	sw	zero,152(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
201083a8:	fec42783          	lw	a5,-20(s0)
201083ac:	0785                	add	a5,a5,1
201083ae:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
201083b2:	fec42703          	lw	a4,-20(s0)
201083b6:	47fd                	li	a5,31
201083b8:	fae7d7e3          	bge	a5,a4,20108366 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
201083bc:	fe042423          	sw	zero,-24(s0)
201083c0:	a01d                	j	201083e6 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
201083c2:	fe442703          	lw	a4,-28(s0)
201083c6:	fe842783          	lw	a5,-24(s0)
201083ca:	0e878793          	add	a5,a5,232
201083ce:	078a                	sll	a5,a5,0x2
201083d0:	97ba                	add	a5,a5,a4
201083d2:	20107737          	lui	a4,0x20107
201083d6:	31070713          	add	a4,a4,784 # 20107310 <__metal_default_exception_handler>
201083da:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
201083dc:	fe842783          	lw	a5,-24(s0)
201083e0:	0785                	add	a5,a5,1
201083e2:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
201083e6:	fe842703          	lw	a4,-24(s0)
201083ea:	47ad                	li	a5,11
201083ec:	fce7dbe3          	bge	a5,a4,201083c2 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
201083f0:	305027f3          	csrr	a5,mtvec
201083f4:	fef42023          	sw	a5,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
201083f8:	201007b7          	lui	a5,0x20100
201083fc:	13478793          	add	a5,a5,308 # 20100134 <early_trap_vector>
20108400:	fe042703          	lw	a4,-32(s0)
20108404:	00f71963          	bne	a4,a5,20108416 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20108408:	201077b7          	lui	a5,0x20107
2010840c:	58078593          	add	a1,a5,1408 # 20107580 <__metal_exception_handler>
20108410:	4501                	li	a0,0
20108412:	d21ff0ef          	jal	20108132 <__metal_controller_interrupt_vector>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20108416:	fe442783          	lw	a5,-28(s0)
2010841a:	4705                	li	a4,1
2010841c:	c3d8                	sw	a4,4(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
2010841e:	0001                	nop
20108420:	50b2                	lw	ra,44(sp)
20108422:	5422                	lw	s0,40(sp)
20108424:	6145                	add	sp,sp,48
20108426:	8082                	ret

20108428 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20108428:	7179                	add	sp,sp,-48
2010842a:	d606                	sw	ra,44(sp)
2010842c:	d422                	sw	s0,40(sp)
2010842e:	1800                	add	s0,sp,48
20108430:	fca42e23          	sw	a0,-36(s0)
20108434:	fcb42c23          	sw	a1,-40(s0)
20108438:	fcc42a23          	sw	a2,-44(s0)
2010843c:	fcd42823          	sw	a3,-48(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20108440:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20108444:	fdc42783          	lw	a5,-36(s0)
20108448:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
2010844c:	fd842503          	lw	a0,-40(s0)
20108450:	d95ff0ef          	jal	201081e4 <__metal_valid_interrupt_id>
20108454:	87aa                	mv	a5,a0
20108456:	e399                	bnez	a5,2010845c <__metal_driver_riscv_cpu_controller_interrupt_register+0x34>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20108458:	57d5                	li	a5,-11
2010845a:	a265                	j	20108602 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1da>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
2010845c:	fd842703          	lw	a4,-40(s0)
20108460:	08000793          	li	a5,128
20108464:	00f71863          	bne	a4,a5,20108474 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20108468:	c73ff0ef          	jal	201080da <__metal_controller_interrupt_vector_mode>
2010846c:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
2010846e:	c399                	beqz	a5,20108474 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20108470:	57cd                	li	a5,-13
20108472:	aa41                	j	20108602 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1da>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20108474:	fd442783          	lw	a5,-44(s0)
20108478:	cfb9                	beqz	a5,201084d6 <__metal_driver_riscv_cpu_controller_interrupt_register+0xae>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
2010847a:	fd842703          	lw	a4,-40(s0)
2010847e:	08000793          	li	a5,128
20108482:	00f71f63          	bne	a4,a5,201084a0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x78>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20108486:	fe842783          	lw	a5,-24(s0)
2010848a:	fd442703          	lw	a4,-44(s0)
2010848e:	38e7a823          	sw	a4,912(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20108492:	fe842783          	lw	a5,-24(s0)
20108496:	fd042703          	lw	a4,-48(s0)
2010849a:	38e7ac23          	sw	a4,920(a5)
2010849e:	a285                	j	201085fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
201084a0:	fe842683          	lw	a3,-24(s0)
201084a4:	fd842703          	lw	a4,-40(s0)
201084a8:	87ba                	mv	a5,a4
201084aa:	0786                	sll	a5,a5,0x1
201084ac:	97ba                	add	a5,a5,a4
201084ae:	078e                	sll	a5,a5,0x3
201084b0:	97b6                	add	a5,a5,a3
201084b2:	fd442703          	lw	a4,-44(s0)
201084b6:	08e7a823          	sw	a4,144(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
201084ba:	fe842683          	lw	a3,-24(s0)
201084be:	fd842703          	lw	a4,-40(s0)
201084c2:	87ba                	mv	a5,a4
201084c4:	0786                	sll	a5,a5,0x1
201084c6:	97ba                	add	a5,a5,a4
201084c8:	078e                	sll	a5,a5,0x3
201084ca:	97b6                	add	a5,a5,a3
201084cc:	fd042703          	lw	a4,-48(s0)
201084d0:	08e7ac23          	sw	a4,152(a5)
201084d4:	a22d                	j	201085fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
201084d6:	fd842703          	lw	a4,-40(s0)
201084da:	08000793          	li	a5,128
201084de:	0cf70163          	beq	a4,a5,201085a0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x178>
201084e2:	fd842703          	lw	a4,-40(s0)
201084e6:	08000793          	li	a5,128
201084ea:	10e7c763          	blt	a5,a4,201085f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
201084ee:	fd842703          	lw	a4,-40(s0)
201084f2:	47fd                	li	a5,31
201084f4:	10e7c263          	blt	a5,a4,201085f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
201084f8:	fd842703          	lw	a4,-40(s0)
201084fc:	47c1                	li	a5,16
201084fe:	0cf75063          	bge	a4,a5,201085be <__metal_driver_riscv_cpu_controller_interrupt_register+0x196>
20108502:	fd842703          	lw	a4,-40(s0)
20108506:	47ad                	li	a5,11
20108508:	0af70b63          	beq	a4,a5,201085be <__metal_driver_riscv_cpu_controller_interrupt_register+0x196>
2010850c:	fd842703          	lw	a4,-40(s0)
20108510:	47ad                	li	a5,11
20108512:	0ee7c363          	blt	a5,a4,201085f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
20108516:	fd842703          	lw	a4,-40(s0)
2010851a:	478d                	li	a5,3
2010851c:	00f70863          	beq	a4,a5,2010852c <__metal_driver_riscv_cpu_controller_interrupt_register+0x104>
20108520:	fd842703          	lw	a4,-40(s0)
20108524:	479d                	li	a5,7
20108526:	04f70063          	beq	a4,a5,20108566 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13e>
2010852a:	a0f9                	j	201085f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
2010852c:	fe842683          	lw	a3,-24(s0)
20108530:	fd842703          	lw	a4,-40(s0)
20108534:	87ba                	mv	a5,a4
20108536:	0786                	sll	a5,a5,0x1
20108538:	97ba                	add	a5,a5,a4
2010853a:	078e                	sll	a5,a5,0x3
2010853c:	97b6                	add	a5,a5,a3
2010853e:	20107737          	lui	a4,0x20107
20108542:	40070713          	add	a4,a4,1024 # 20107400 <__metal_default_sw_handler>
20108546:	08e7a823          	sw	a4,144(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
2010854a:	fe842683          	lw	a3,-24(s0)
2010854e:	fd842703          	lw	a4,-40(s0)
20108552:	87ba                	mv	a5,a4
20108554:	0786                	sll	a5,a5,0x1
20108556:	97ba                	add	a5,a5,a4
20108558:	078e                	sll	a5,a5,0x3
2010855a:	97b6                	add	a5,a5,a3
2010855c:	fd042703          	lw	a4,-48(s0)
20108560:	08e7aa23          	sw	a4,148(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20108564:	a869                	j	201085fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20108566:	fe842683          	lw	a3,-24(s0)
2010856a:	fd842703          	lw	a4,-40(s0)
2010856e:	87ba                	mv	a5,a4
20108570:	0786                	sll	a5,a5,0x1
20108572:	97ba                	add	a5,a5,a4
20108574:	078e                	sll	a5,a5,0x3
20108576:	97b6                	add	a5,a5,a3
20108578:	20107737          	lui	a4,0x20107
2010857c:	51270713          	add	a4,a4,1298 # 20107512 <__metal_default_timer_handler>
20108580:	08e7a823          	sw	a4,144(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20108584:	fe842683          	lw	a3,-24(s0)
20108588:	fd842703          	lw	a4,-40(s0)
2010858c:	87ba                	mv	a5,a4
2010858e:	0786                	sll	a5,a5,0x1
20108590:	97ba                	add	a5,a5,a4
20108592:	078e                	sll	a5,a5,0x3
20108594:	97b6                	add	a5,a5,a3
20108596:	fd042703          	lw	a4,-48(s0)
2010859a:	08e7aa23          	sw	a4,148(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
2010859e:	a085                	j	201085fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
201085a0:	fe842783          	lw	a5,-24(s0)
201085a4:	20107737          	lui	a4,0x20107
201085a8:	4fc70713          	add	a4,a4,1276 # 201074fc <__metal_default_beu_handler>
201085ac:	38e7a823          	sw	a4,912(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
201085b0:	fe842783          	lw	a5,-24(s0)
201085b4:	fd042703          	lw	a4,-48(s0)
201085b8:	38e7ac23          	sw	a4,920(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
201085bc:	a089                	j	201085fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
201085be:	fe842683          	lw	a3,-24(s0)
201085c2:	fd842703          	lw	a4,-40(s0)
201085c6:	87ba                	mv	a5,a4
201085c8:	0786                	sll	a5,a5,0x1
201085ca:	97ba                	add	a5,a5,a4
201085cc:	078e                	sll	a5,a5,0x3
201085ce:	97b6                	add	a5,a5,a3
201085d0:	20107737          	lui	a4,0x20107
201085d4:	32870713          	add	a4,a4,808 # 20107328 <__metal_default_interrupt_handler>
201085d8:	08e7a823          	sw	a4,144(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
201085dc:	fe842683          	lw	a3,-24(s0)
201085e0:	fd842703          	lw	a4,-40(s0)
201085e4:	87ba                	mv	a5,a4
201085e6:	0786                	sll	a5,a5,0x1
201085e8:	97ba                	add	a5,a5,a4
201085ea:	078e                	sll	a5,a5,0x3
201085ec:	97b6                	add	a5,a5,a3
201085ee:	fd042703          	lw	a4,-48(s0)
201085f2:	08e7aa23          	sw	a4,148(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
201085f6:	a021                	j	201085fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
201085f8:	57d1                	li	a5,-12
201085fa:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
201085fe:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:549
}
20108602:	853e                	mv	a0,a5
20108604:	50b2                	lw	ra,44(sp)
20108606:	5422                	lw	s0,40(sp)
20108608:	6145                	add	sp,sp,48
2010860a:	8082                	ret

2010860c <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
2010860c:	1101                	add	sp,sp,-32
2010860e:	ce06                	sw	ra,28(sp)
20108610:	cc22                	sw	s0,24(sp)
20108612:	1000                	add	s0,sp,32
20108614:	fea42623          	sw	a0,-20(s0)
20108618:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
2010861c:	fe842783          	lw	a5,-24(s0)
20108620:	4605                	li	a2,1
20108622:	85be                	mv	a1,a5
20108624:	fec42503          	lw	a0,-20(s0)
20108628:	c13ff0ef          	jal	2010823a <__metal_local_interrupt_enable>
2010862c:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:554
}
2010862e:	853e                	mv	a0,a5
20108630:	40f2                	lw	ra,28(sp)
20108632:	4462                	lw	s0,24(sp)
20108634:	6105                	add	sp,sp,32
20108636:	8082                	ret

20108638 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20108638:	1101                	add	sp,sp,-32
2010863a:	ce06                	sw	ra,28(sp)
2010863c:	cc22                	sw	s0,24(sp)
2010863e:	1000                	add	s0,sp,32
20108640:	fea42623          	sw	a0,-20(s0)
20108644:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20108648:	fe842783          	lw	a5,-24(s0)
2010864c:	4601                	li	a2,0
2010864e:	85be                	mv	a1,a5
20108650:	fec42503          	lw	a0,-20(s0)
20108654:	be7ff0ef          	jal	2010823a <__metal_local_interrupt_enable>
20108658:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:559
}
2010865a:	853e                	mv	a0,a5
2010865c:	40f2                	lw	ra,28(sp)
2010865e:	4462                	lw	s0,24(sp)
20108660:	6105                	add	sp,sp,32
20108662:	8082                	ret

20108664 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20108664:	1101                	add	sp,sp,-32
20108666:	ce06                	sw	ra,28(sp)
20108668:	cc22                	sw	s0,24(sp)
2010866a:	1000                	add	s0,sp,32
2010866c:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20108670:	a6bff0ef          	jal	201080da <__metal_controller_interrupt_vector_mode>
20108674:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:593
}
20108676:	853e                	mv	a0,a5
20108678:	40f2                	lw	ra,28(sp)
2010867a:	4462                	lw	s0,24(sp)
2010867c:	6105                	add	sp,sp,32
2010867e:	8082                	ret

20108680 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20108680:	1101                	add	sp,sp,-32
20108682:	ce06                	sw	ra,28(sp)
20108684:	cc22                	sw	s0,24(sp)
20108686:	1000                	add	s0,sp,32
20108688:	fea42623          	sw	a0,-20(s0)
2010868c:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20108690:	fe842783          	lw	a5,-24(s0)
20108694:	eb99                	bnez	a5,201086aa <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20108696:	201077b7          	lui	a5,0x20107
2010869a:	58078593          	add	a1,a5,1408 # 20107580 <__metal_exception_handler>
2010869e:	fe842503          	lw	a0,-24(s0)
201086a2:	a91ff0ef          	jal	20108132 <__metal_controller_interrupt_vector>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
201086a6:	4781                	li	a5,0
201086a8:	a00d                	j	201086ca <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
201086aa:	fe842703          	lw	a4,-24(s0)
201086ae:	4785                	li	a5,1
201086b0:	00f71c63          	bne	a4,a5,201086c8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
201086b4:	2010b7b7          	lui	a5,0x2010b
201086b8:	20078593          	add	a1,a5,512 # 2010b200 <__metal_vector_table>
201086bc:	fe842503          	lw	a0,-24(s0)
201086c0:	a73ff0ef          	jal	20108132 <__metal_controller_interrupt_vector>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
201086c4:	4781                	li	a5,0
201086c6:	a011                	j	201086ca <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
201086c8:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:609
}
201086ca:	853e                	mv	a0,a5
201086cc:	40f2                	lw	ra,28(sp)
201086ce:	4462                	lw	s0,24(sp)
201086d0:	6105                	add	sp,sp,32
201086d2:	8082                	ret

201086d4 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
201086d4:	1101                	add	sp,sp,-32
201086d6:	ce22                	sw	s0,28(sp)
201086d8:	1000                	add	s0,sp,32
201086da:	fea42623          	sw	a0,-20(s0)
201086de:	feb42423          	sw	a1,-24(s0)
201086e2:	fec42223          	sw	a2,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
201086e6:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:616
}
201086e8:	853e                	mv	a0,a5
201086ea:	4472                	lw	s0,28(sp)
201086ec:	6105                	add	sp,sp,32
201086ee:	8082                	ret

201086f0 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
201086f0:	7139                	add	sp,sp,-64
201086f2:	de22                	sw	s0,60(sp)
201086f4:	0080                	add	s0,sp,64
201086f6:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
201086fa:	4501                	li	a0,0
201086fc:	4581                	li	a1,0
201086fe:	fea42423          	sw	a0,-24(s0)
20108702:	feb42623          	sw	a1,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20108706:	b80025f3          	csrr	a1,mcycleh
2010870a:	feb42223          	sw	a1,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
2010870e:	b00025f3          	csrr	a1,mcycle
20108712:	feb42023          	sw	a1,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20108716:	b80025f3          	csrr	a1,mcycleh
2010871a:	fcb42e23          	sw	a1,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
2010871e:	fe442503          	lw	a0,-28(s0)
20108722:	fdc42583          	lw	a1,-36(s0)
20108726:	feb510e3          	bne	a0,a1,20108706 <__metal_driver_cpu_mcycle_get+0x16>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
2010872a:	fe442583          	lw	a1,-28(s0)
2010872e:	882e                	mv	a6,a1
20108730:	4881                	li	a7,0
20108732:	00081793          	sll	a5,a6,0x0
20108736:	4701                	li	a4,0
20108738:	fe042583          	lw	a1,-32(s0)
2010873c:	862e                	mv	a2,a1
2010873e:	4681                	li	a3,0
20108740:	00c765b3          	or	a1,a4,a2
20108744:	feb42423          	sw	a1,-24(s0)
20108748:	8fd5                	or	a5,a5,a3
2010874a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
2010874e:	fe842703          	lw	a4,-24(s0)
20108752:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:640
}
20108756:	853a                	mv	a0,a4
20108758:	85be                	mv	a1,a5
2010875a:	5472                	lw	s0,60(sp)
2010875c:	6121                	add	sp,sp,64
2010875e:	8082                	ret

20108760 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20108760:	7179                	add	sp,sp,-48
20108762:	d606                	sw	ra,44(sp)
20108764:	d422                	sw	s0,40(sp)
20108766:	d24a                	sw	s2,36(sp)
20108768:	d04e                	sw	s3,32(sp)
2010876a:	1800                	add	s0,sp,48
2010876c:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20108770:	fdc42783          	lw	a5,-36(s0)
20108774:	e781                	bnez	a5,2010877c <__metal_driver_cpu_timebase_get+0x1c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20108776:	4901                	li	s2,0
20108778:	4981                	li	s3,0
2010877a:	a821                	j	20108792 <__metal_driver_cpu_timebase_get+0x32>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
2010877c:	fdc42503          	lw	a0,-36(s0)
20108780:	9abfe0ef          	jal	2010712a <__metal_driver_cpu_timebase>
20108784:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20108788:	fec42783          	lw	a5,-20(s0)
2010878c:	893e                	mv	s2,a5
2010878e:	87fd                	sra	a5,a5,0x1f
20108790:	89be                	mv	s3,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:650
}
20108792:	874a                	mv	a4,s2
20108794:	87ce                	mv	a5,s3
20108796:	853a                	mv	a0,a4
20108798:	85be                	mv	a1,a5
2010879a:	50b2                	lw	ra,44(sp)
2010879c:	5422                	lw	s0,40(sp)
2010879e:	5912                	lw	s2,36(sp)
201087a0:	5982                	lw	s3,32(sp)
201087a2:	6145                	add	sp,sp,48
201087a4:	8082                	ret

201087a6 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
201087a6:	7179                	add	sp,sp,-48
201087a8:	d606                	sw	ra,44(sp)
201087aa:	d422                	sw	s0,40(sp)
201087ac:	1800                	add	s0,sp,48
201087ae:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
201087b2:	4781                	li	a5,0
201087b4:	4801                	li	a6,0
201087b6:	fef42023          	sw	a5,-32(s0)
201087ba:	ff042223          	sw	a6,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
201087be:	fdc42503          	lw	a0,-36(s0)
201087c2:	993fe0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201087c6:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
201087ca:	fec42783          	lw	a5,-20(s0)
201087ce:	c78d                	beqz	a5,201087f8 <__metal_driver_cpu_mtime_get+0x52>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
201087d0:	fec42783          	lw	a5,-20(s0)
201087d4:	13c7a783          	lw	a5,316(a5)
201087d8:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
201087dc:	fe842783          	lw	a5,-24(s0)
201087e0:	cf81                	beqz	a5,201087f8 <__metal_driver_cpu_mtime_get+0x52>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
201087e2:	fe842783          	lw	a5,-24(s0)
201087e6:	439c                	lw	a5,0(a5)
201087e8:	47fc                	lw	a5,76(a5)
201087ea:	fe040713          	add	a4,s0,-32
201087ee:	863a                	mv	a2,a4
201087f0:	4585                	li	a1,1
201087f2:	fe842503          	lw	a0,-24(s0)
201087f6:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
201087f8:	fe042703          	lw	a4,-32(s0)
201087fc:	fe442783          	lw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:667
}
20108800:	853a                	mv	a0,a4
20108802:	85be                	mv	a1,a5
20108804:	50b2                	lw	ra,44(sp)
20108806:	5422                	lw	s0,40(sp)
20108808:	6145                	add	sp,sp,48
2010880a:	8082                	ret

2010880c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
2010880c:	7179                	add	sp,sp,-48
2010880e:	d606                	sw	ra,44(sp)
20108810:	d422                	sw	s0,40(sp)
20108812:	d226                	sw	s1,36(sp)
20108814:	1800                	add	s0,sp,48
20108816:	fca42e23          	sw	a0,-36(s0)
2010881a:	fcb42823          	sw	a1,-48(s0)
2010881e:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20108822:	57fd                	li	a5,-1
20108824:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20108828:	fdc42503          	lw	a0,-36(s0)
2010882c:	929fe0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20108830:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20108834:	fe842783          	lw	a5,-24(s0)
20108838:	cf8d                	beqz	a5,20108872 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
2010883a:	fe842783          	lw	a5,-24(s0)
2010883e:	13c7a783          	lw	a5,316(a5)
20108842:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20108846:	fe442783          	lw	a5,-28(s0)
2010884a:	c785                	beqz	a5,20108872 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
2010884c:	fe442783          	lw	a5,-28(s0)
20108850:	439c                	lw	a5,0(a5)
20108852:	4ba4                	lw	s1,80(a5)
20108854:	fdc42503          	lw	a0,-36(s0)
20108858:	8affe0ef          	jal	20107106 <__metal_driver_cpu_hartid>
2010885c:	87aa                	mv	a5,a0
2010885e:	fd042603          	lw	a2,-48(s0)
20108862:	fd442683          	lw	a3,-44(s0)
20108866:	85be                	mv	a1,a5
20108868:	fe442503          	lw	a0,-28(s0)
2010886c:	9482                	jalr	s1
2010886e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20108872:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:685
}
20108876:	853e                	mv	a0,a5
20108878:	50b2                	lw	ra,44(sp)
2010887a:	5422                	lw	s0,40(sp)
2010887c:	5492                	lw	s1,36(sp)
2010887e:	6145                	add	sp,sp,48
20108880:	8082                	ret

20108882 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20108882:	1101                	add	sp,sp,-32
20108884:	ce22                	sw	s0,28(sp)
20108886:	1000                	add	s0,sp,32
20108888:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2010888c:	800017b7          	lui	a5,0x80001
20108890:	a8878793          	add	a5,a5,-1400 # 80000a88 <__metal_dt_clint_2000000>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20108894:	853e                	mv	a0,a5
20108896:	4472                	lw	s0,28(sp)
20108898:	6105                	add	sp,sp,32
2010889a:	8082                	ret

2010889c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
2010889c:	1101                	add	sp,sp,-32
2010889e:	ce22                	sw	s0,28(sp)
201088a0:	1000                	add	s0,sp,32
201088a2:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
201088a6:	479d                	li	a5,7
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:703
}
201088a8:	853e                	mv	a0,a5
201088aa:	4472                	lw	s0,28(sp)
201088ac:	6105                	add	sp,sp,32
201088ae:	8082                	ret

201088b0 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
201088b0:	1101                	add	sp,sp,-32
201088b2:	ce22                	sw	s0,28(sp)
201088b4:	1000                	add	s0,sp,32
201088b6:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
201088ba:	800017b7          	lui	a5,0x80001
201088be:	a8878793          	add	a5,a5,-1400 # 80000a88 <__metal_dt_clint_2000000>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
201088c2:	853e                	mv	a0,a5
201088c4:	4472                	lw	s0,28(sp)
201088c6:	6105                	add	sp,sp,32
201088c8:	8082                	ret

201088ca <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
201088ca:	1101                	add	sp,sp,-32
201088cc:	ce22                	sw	s0,28(sp)
201088ce:	1000                	add	s0,sp,32
201088d0:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
201088d4:	478d                	li	a5,3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:721
}
201088d6:	853e                	mv	a0,a5
201088d8:	4472                	lw	s0,28(sp)
201088da:	6105                	add	sp,sp,32
201088dc:	8082                	ret

201088de <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
201088de:	7179                	add	sp,sp,-48
201088e0:	d606                	sw	ra,44(sp)
201088e2:	d422                	sw	s0,40(sp)
201088e4:	1800                	add	s0,sp,48
201088e6:	fca42e23          	sw	a0,-36(s0)
201088ea:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
201088ee:	57fd                	li	a5,-1
201088f0:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
201088f4:	fdc42503          	lw	a0,-36(s0)
201088f8:	85dfe0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201088fc:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20108900:	fe842783          	lw	a5,-24(s0)
20108904:	c79d                	beqz	a5,20108932 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20108906:	fe842783          	lw	a5,-24(s0)
2010890a:	0dc7a783          	lw	a5,220(a5)
2010890e:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20108912:	fe442783          	lw	a5,-28(s0)
20108916:	cf91                	beqz	a5,20108932 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20108918:	fe442783          	lw	a5,-28(s0)
2010891c:	439c                	lw	a5,0(a5)
2010891e:	47fc                	lw	a5,76(a5)
20108920:	fd840713          	add	a4,s0,-40
20108924:	863a                	mv	a2,a4
20108926:	458d                	li	a1,3
20108928:	fe442503          	lw	a0,-28(s0)
2010892c:	9782                	jalr	a5
2010892e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20108932:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:738
}
20108936:	853e                	mv	a0,a5
20108938:	50b2                	lw	ra,44(sp)
2010893a:	5422                	lw	s0,40(sp)
2010893c:	6145                	add	sp,sp,48
2010893e:	8082                	ret

20108940 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20108940:	7179                	add	sp,sp,-48
20108942:	d606                	sw	ra,44(sp)
20108944:	d422                	sw	s0,40(sp)
20108946:	1800                	add	s0,sp,48
20108948:	fca42e23          	sw	a0,-36(s0)
2010894c:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20108950:	57fd                	li	a5,-1
20108952:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20108956:	fdc42503          	lw	a0,-36(s0)
2010895a:	ffafe0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
2010895e:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20108962:	fe842783          	lw	a5,-24(s0)
20108966:	c79d                	beqz	a5,20108994 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20108968:	fe842783          	lw	a5,-24(s0)
2010896c:	0dc7a783          	lw	a5,220(a5)
20108970:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20108974:	fe442783          	lw	a5,-28(s0)
20108978:	cf91                	beqz	a5,20108994 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
2010897a:	fe442783          	lw	a5,-28(s0)
2010897e:	439c                	lw	a5,0(a5)
20108980:	47fc                	lw	a5,76(a5)
20108982:	fd840713          	add	a4,s0,-40
20108986:	863a                	mv	a2,a4
20108988:	4589                	li	a1,2
2010898a:	fe442503          	lw	a0,-28(s0)
2010898e:	9782                	jalr	a5
20108990:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20108994:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:755
}
20108998:	853e                	mv	a0,a5
2010899a:	50b2                	lw	ra,44(sp)
2010899c:	5422                	lw	s0,40(sp)
2010899e:	6145                	add	sp,sp,48
201089a0:	8082                	ret

201089a2 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
201089a2:	7179                	add	sp,sp,-48
201089a4:	d606                	sw	ra,44(sp)
201089a6:	d422                	sw	s0,40(sp)
201089a8:	1800                	add	s0,sp,48
201089aa:	fca42e23          	sw	a0,-36(s0)
201089ae:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
201089b2:	fe042623          	sw	zero,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
201089b6:	fdc42503          	lw	a0,-36(s0)
201089ba:	f9afe0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
201089be:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
201089c2:	fe842783          	lw	a5,-24(s0)
201089c6:	c79d                	beqz	a5,201089f4 <__metal_driver_cpu_get_msip+0x52>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
201089c8:	fe842783          	lw	a5,-24(s0)
201089cc:	0dc7a783          	lw	a5,220(a5)
201089d0:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
201089d4:	fe442783          	lw	a5,-28(s0)
201089d8:	cf91                	beqz	a5,201089f4 <__metal_driver_cpu_get_msip+0x52>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
201089da:	fe442783          	lw	a5,-28(s0)
201089de:	439c                	lw	a5,0(a5)
201089e0:	47fc                	lw	a5,76(a5)
201089e2:	fd840713          	add	a4,s0,-40
201089e6:	863a                	mv	a2,a4
201089e8:	4591                	li	a1,4
201089ea:	fe442503          	lw	a0,-28(s0)
201089ee:	9782                	jalr	a5
201089f0:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
201089f4:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:772
}
201089f8:	853e                	mv	a0,a5
201089fa:	50b2                	lw	ra,44(sp)
201089fc:	5422                	lw	s0,40(sp)
201089fe:	6145                	add	sp,sp,48
20108a00:	8082                	ret

20108a02 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20108a02:	1101                	add	sp,sp,-32
20108a04:	ce06                	sw	ra,28(sp)
20108a06:	cc22                	sw	s0,24(sp)
20108a08:	1000                	add	s0,sp,32
20108a0a:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20108a0e:	fec42503          	lw	a0,-20(s0)
20108a12:	f42fe0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20108a16:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:777
}
20108a18:	853e                	mv	a0,a5
20108a1a:	40f2                	lw	ra,28(sp)
20108a1c:	4462                	lw	s0,24(sp)
20108a1e:	6105                	add	sp,sp,32
20108a20:	8082                	ret

20108a22 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20108a22:	7179                	add	sp,sp,-48
20108a24:	d606                	sw	ra,44(sp)
20108a26:	d422                	sw	s0,40(sp)
20108a28:	1800                	add	s0,sp,48
20108a2a:	fca42e23          	sw	a0,-36(s0)
20108a2e:	fcb42c23          	sw	a1,-40(s0)
20108a32:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20108a36:	fdc42503          	lw	a0,-36(s0)
20108a3a:	f1afe0ef          	jal	20107154 <__metal_driver_cpu_interrupt_controller>
20108a3e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20108a42:	fec42783          	lw	a5,-20(s0)
20108a46:	cb99                	beqz	a5,20108a5c <__metal_driver_cpu_exception_register+0x3a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20108a48:	fd442603          	lw	a2,-44(s0)
20108a4c:	fd842583          	lw	a1,-40(s0)
20108a50:	fec42503          	lw	a0,-20(s0)
20108a54:	8a3ff0ef          	jal	201082f6 <__metal_exception_register>
20108a58:	87aa                	mv	a5,a0
20108a5a:	a011                	j	20108a5e <__metal_driver_cpu_exception_register+0x3c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20108a5c:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:808
}
20108a5e:	853e                	mv	a0,a5
20108a60:	50b2                	lw	ra,44(sp)
20108a62:	5422                	lw	s0,40(sp)
20108a64:	6145                	add	sp,sp,48
20108a66:	8082                	ret

20108a68 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20108a68:	1101                	add	sp,sp,-32
20108a6a:	ce22                	sw	s0,28(sp)
20108a6c:	1000                	add	s0,sp,32
20108a6e:	fea42623          	sw	a0,-20(s0)
20108a72:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20108a76:	fe842783          	lw	a5,-24(s0)
20108a7a:	0007d783          	lhu	a5,0(a5)
20108a7e:	0037f713          	and	a4,a5,3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20108a82:	478d                	li	a5,3
20108a84:	00f71463          	bne	a4,a5,20108a8c <__metal_driver_cpu_get_instruction_length+0x24>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20108a88:	4791                	li	a5,4
20108a8a:	a011                	j	20108a8e <__metal_driver_cpu_get_instruction_length+0x26>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20108a8c:	4789                	li	a5,2
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20108a8e:	853e                	mv	a0,a5
20108a90:	4472                	lw	s0,28(sp)
20108a92:	6105                	add	sp,sp,32
20108a94:	8082                	ret

20108a96 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20108a96:	7179                	add	sp,sp,-48
20108a98:	d622                	sw	s0,44(sp)
20108a9a:	1800                	add	s0,sp,48
20108a9c:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20108aa0:	341027f3          	csrr	a5,mepc
20108aa4:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20108aa8:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:827
}
20108aac:	853e                	mv	a0,a5
20108aae:	5432                	lw	s0,44(sp)
20108ab0:	6145                	add	sp,sp,48
20108ab2:	8082                	ret

20108ab4 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20108ab4:	1101                	add	sp,sp,-32
20108ab6:	ce22                	sw	s0,28(sp)
20108ab8:	1000                	add	s0,sp,32
20108aba:	fea42623          	sw	a0,-20(s0)
20108abe:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20108ac2:	fe842783          	lw	a5,-24(s0)
20108ac6:	34179073          	csrw	mepc,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20108aca:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:832
}
20108acc:	853e                	mv	a0,a5
20108ace:	4472                	lw	s0,28(sp)
20108ad0:	6105                	add	sp,sp,32
20108ad2:	8082                	ret

20108ad4 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20108ad4:	1101                	add	sp,sp,-32
20108ad6:	ce06                	sw	ra,28(sp)
20108ad8:	cc22                	sw	s0,24(sp)
20108ada:	1000                	add	s0,sp,32
20108adc:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20108ae0:	fec42503          	lw	a0,-20(s0)
20108ae4:	e9afe0ef          	jal	2010717e <__metal_driver_cpu_buserror>
20108ae8:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_cpu.c:836
}
20108aea:	853e                	mv	a0,a5
20108aec:	40f2                	lw	ra,28(sp)
20108aee:	4462                	lw	s0,24(sp)
20108af0:	6105                	add	sp,sp,32
20108af2:	8082                	ret

20108af4 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:320



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20108af4:	1101                	add	sp,sp,-32
20108af6:	ce22                	sw	s0,28(sp)
20108af8:	1000                	add	s0,sp,32
20108afa:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:321
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20108afe:	fec42703          	lw	a4,-20(s0)
20108b02:	800007b7          	lui	a5,0x80000
20108b06:	46078793          	add	a5,a5,1120 # 80000460 <__metal_dt_interrupt_controller_c000000>
20108b0a:	00f71563          	bne	a4,a5,20108b14 <__metal_driver_sifive_plic0_control_base+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:322
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20108b0e:	0c0007b7          	lui	a5,0xc000
20108b12:	a011                	j	20108b16 <__metal_driver_sifive_plic0_control_base+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:325
	}
	else {
		return 0;
20108b14:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:327
	}
}
20108b16:	853e                	mv	a0,a5
20108b18:	4472                	lw	s0,28(sp)
20108b1a:	6105                	add	sp,sp,32
20108b1c:	8082                	ret

20108b1e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:340
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20108b1e:	1101                	add	sp,sp,-32
20108b20:	ce22                	sw	s0,28(sp)
20108b22:	1000                	add	s0,sp,32
20108b24:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:341
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20108b28:	fec42703          	lw	a4,-20(s0)
20108b2c:	800007b7          	lui	a5,0x80000
20108b30:	46078793          	add	a5,a5,1120 # 80000460 <__metal_dt_interrupt_controller_c000000>
20108b34:	00f71563          	bne	a4,a5,20108b3e <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:342
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20108b38:	03500793          	li	a5,53
20108b3c:	a011                	j	20108b40 <__metal_driver_sifive_plic0_num_interrupts+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:345
	}
	else {
		return 0;
20108b3e:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:347
	}
}
20108b40:	853e                	mv	a0,a5
20108b42:	4472                	lw	s0,28(sp)
20108b44:	6105                	add	sp,sp,32
20108b46:	8082                	ret

20108b48 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:350

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20108b48:	1101                	add	sp,sp,-32
20108b4a:	ce22                	sw	s0,28(sp)
20108b4c:	1000                	add	s0,sp,32
20108b4e:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:351
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20108b52:	fec42703          	lw	a4,-20(s0)
20108b56:	800007b7          	lui	a5,0x80000
20108b5a:	46078793          	add	a5,a5,1120 # 80000460 <__metal_dt_interrupt_controller_c000000>
20108b5e:	00f71463          	bne	a4,a5,20108b66 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:352
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20108b62:	479d                	li	a5,7
20108b64:	a011                	j	20108b68 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:355
	}
	else {
		return 0;
20108b66:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:357
	}
}
20108b68:	853e                	mv	a0,a5
20108b6a:	4472                	lw	s0,28(sp)
20108b6c:	6105                	add	sp,sp,32
20108b6e:	8082                	ret

20108b70 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:360

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20108b70:	1101                	add	sp,sp,-32
20108b72:	ce22                	sw	s0,28(sp)
20108b74:	1000                	add	s0,sp,32
20108b76:	fea42623          	sw	a0,-20(s0)
20108b7a:	feb42423          	sw	a1,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:361
	if (idx == 0) {
20108b7e:	fe842783          	lw	a5,-24(s0)
20108b82:	e791                	bnez	a5,20108b8e <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:362
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20108b84:	800007b7          	lui	a5,0x80000
20108b88:	09078793          	add	a5,a5,144 # 80000090 <__metal_dt_cpu_0_interrupt_controller>
20108b8c:	a011                	j	20108b90 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:365
	}
	else {
		return NULL;
20108b8e:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:367
	}
}
20108b90:	853e                	mv	a0,a5
20108b92:	4472                	lw	s0,28(sp)
20108b94:	6105                	add	sp,sp,32
20108b96:	8082                	ret

20108b98 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:370

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20108b98:	1101                	add	sp,sp,-32
20108b9a:	ce22                	sw	s0,28(sp)
20108b9c:	1000                	add	s0,sp,32
20108b9e:	fea42623          	sw	a0,-20(s0)
20108ba2:	feb42423          	sw	a1,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:371
	if (idx == 0) {
20108ba6:	fe842783          	lw	a5,-24(s0)
20108baa:	e399                	bnez	a5,20108bb0 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:372
		return 11;
20108bac:	47ad                	li	a5,11
20108bae:	a011                	j	20108bb2 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:375
	}
	else {
		return 0;
20108bb0:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:377
	}
}
20108bb2:	853e                	mv	a0,a5
20108bb4:	4472                	lw	s0,28(sp)
20108bb6:	6105                	add	sp,sp,32
20108bb8:	8082                	ret

20108bba <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:380

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20108bba:	1101                	add	sp,sp,-32
20108bbc:	ce22                	sw	s0,28(sp)
20108bbe:	1000                	add	s0,sp,32
20108bc0:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:381
	if (hartid == 0) {
20108bc4:	fec42783          	lw	a5,-20(s0)
20108bc8:	e399                	bnez	a5,20108bce <__metal_driver_sifive_plic0_context_ids+0x14>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:382
		return 0;
20108bca:	4781                	li	a5,0
20108bcc:	a011                	j	20108bd0 <__metal_driver_sifive_plic0_context_ids+0x16>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:385
	}
	else {
		return -1;
20108bce:	57fd                	li	a5,-1
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:387
	}
}
20108bd0:	853e                	mv	a0,a5
20108bd2:	4472                	lw	s0,28(sp)
20108bd4:	6105                	add	sp,sp,32
20108bd6:	8082                	ret

20108bd8 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20108bd8:	7179                	add	sp,sp,-48
20108bda:	d606                	sw	ra,44(sp)
20108bdc:	d422                	sw	s0,40(sp)
20108bde:	1800                	add	s0,sp,48
20108be0:	fca42e23          	sw	a0,-36(s0)
20108be4:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20108be8:	fdc42503          	lw	a0,-36(s0)
20108bec:	3721                	jal	20108af4 <__metal_driver_sifive_plic0_control_base>
20108bee:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20108bf2:	fd842783          	lw	a5,-40(s0)
20108bf6:	00c79713          	sll	a4,a5,0xc
20108bfa:	fec42783          	lw	a5,-20(s0)
20108bfe:	973e                	add	a4,a4,a5
20108c00:	002007b7          	lui	a5,0x200
20108c04:	0791                	add	a5,a5,4 # 200004 <__heap_size+0x1ff804>
20108c06:	97ba                	add	a5,a5,a4
20108c08:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20108c0a:	853e                	mv	a0,a5
20108c0c:	50b2                	lw	ra,44(sp)
20108c0e:	5422                	lw	s0,40(sp)
20108c10:	6145                	add	sp,sp,48
20108c12:	8082                	ret

20108c14 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20108c14:	7179                	add	sp,sp,-48
20108c16:	d606                	sw	ra,44(sp)
20108c18:	d422                	sw	s0,40(sp)
20108c1a:	1800                	add	s0,sp,48
20108c1c:	fca42e23          	sw	a0,-36(s0)
20108c20:	fcb42c23          	sw	a1,-40(s0)
20108c24:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20108c28:	fdc42503          	lw	a0,-36(s0)
20108c2c:	35e1                	jal	20108af4 <__metal_driver_sifive_plic0_control_base>
20108c2e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20108c32:	fd842783          	lw	a5,-40(s0)
20108c36:	00c79713          	sll	a4,a5,0xc
20108c3a:	fec42783          	lw	a5,-20(s0)
20108c3e:	973e                	add	a4,a4,a5
20108c40:	002007b7          	lui	a5,0x200
20108c44:	0791                	add	a5,a5,4 # 200004 <__heap_size+0x1ff804>
20108c46:	97ba                	add	a5,a5,a4
20108c48:	873e                	mv	a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20108c4a:	fd442783          	lw	a5,-44(s0)
20108c4e:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:35
}
20108c50:	0001                	nop
20108c52:	50b2                	lw	ra,44(sp)
20108c54:	5422                	lw	s0,40(sp)
20108c56:	6145                	add	sp,sp,48
20108c58:	8082                	ret

20108c5a <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20108c5a:	7179                	add	sp,sp,-48
20108c5c:	d606                	sw	ra,44(sp)
20108c5e:	d422                	sw	s0,40(sp)
20108c60:	1800                	add	s0,sp,48
20108c62:	fca42e23          	sw	a0,-36(s0)
20108c66:	fcb42c23          	sw	a1,-40(s0)
20108c6a:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20108c6e:	fdc42503          	lw	a0,-36(s0)
20108c72:	e83ff0ef          	jal	20108af4 <__metal_driver_sifive_plic0_control_base>
20108c76:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20108c7a:	fd842783          	lw	a5,-40(s0)
20108c7e:	00c79713          	sll	a4,a5,0xc
20108c82:	fec42783          	lw	a5,-20(s0)
20108c86:	973e                	add	a4,a4,a5
20108c88:	002007b7          	lui	a5,0x200
20108c8c:	97ba                	add	a5,a5,a4
20108c8e:	873e                	mv	a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20108c90:	fd442783          	lw	a5,-44(s0)
20108c94:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20108c96:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:46
}
20108c98:	853e                	mv	a0,a5
20108c9a:	50b2                	lw	ra,44(sp)
20108c9c:	5422                	lw	s0,40(sp)
20108c9e:	6145                	add	sp,sp,48
20108ca0:	8082                	ret

20108ca2 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20108ca2:	7179                	add	sp,sp,-48
20108ca4:	d606                	sw	ra,44(sp)
20108ca6:	d422                	sw	s0,40(sp)
20108ca8:	1800                	add	s0,sp,48
20108caa:	fca42e23          	sw	a0,-36(s0)
20108cae:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20108cb2:	fdc42503          	lw	a0,-36(s0)
20108cb6:	e3fff0ef          	jal	20108af4 <__metal_driver_sifive_plic0_control_base>
20108cba:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20108cbe:	fd842783          	lw	a5,-40(s0)
20108cc2:	00c79713          	sll	a4,a5,0xc
20108cc6:	fec42783          	lw	a5,-20(s0)
20108cca:	973e                	add	a4,a4,a5
20108ccc:	002007b7          	lui	a5,0x200
20108cd0:	97ba                	add	a5,a5,a4
20108cd2:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20108cd4:	853e                	mv	a0,a5
20108cd6:	50b2                	lw	ra,44(sp)
20108cd8:	5422                	lw	s0,40(sp)
20108cda:	6145                	add	sp,sp,48
20108cdc:	8082                	ret

20108cde <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20108cde:	7179                	add	sp,sp,-48
20108ce0:	d606                	sw	ra,44(sp)
20108ce2:	d422                	sw	s0,40(sp)
20108ce4:	1800                	add	s0,sp,48
20108ce6:	fca42e23          	sw	a0,-36(s0)
20108cea:	fcb42c23          	sw	a1,-40(s0)
20108cee:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20108cf2:	fdc42503          	lw	a0,-36(s0)
20108cf6:	dffff0ef          	jal	20108af4 <__metal_driver_sifive_plic0_control_base>
20108cfa:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20108cfe:	fdc42503          	lw	a0,-36(s0)
20108d02:	e47ff0ef          	jal	20108b48 <__metal_driver_sifive_plic0_max_priority>
20108d06:	87aa                	mv	a5,a0
20108d08:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20108d0c:	fe842783          	lw	a5,-24(s0)
20108d10:	c785                	beqz	a5,20108d38 <__metal_driver_riscv_plic0_set_priority+0x5a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20108d12:	fd442703          	lw	a4,-44(s0)
20108d16:	fe842783          	lw	a5,-24(s0)
20108d1a:	00f77f63          	bgeu	a4,a5,20108d38 <__metal_driver_riscv_plic0_set_priority+0x5a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20108d1e:	fd842783          	lw	a5,-40(s0)
20108d22:	078a                	sll	a5,a5,0x2
20108d24:	873e                	mv	a4,a5
20108d26:	fec42783          	lw	a5,-20(s0)
20108d2a:	97ba                	add	a5,a5,a4
20108d2c:	873e                	mv	a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20108d2e:	fd442783          	lw	a5,-44(s0)
20108d32:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20108d34:	4781                	li	a5,0
20108d36:	a011                	j	20108d3a <__metal_driver_riscv_plic0_set_priority+0x5c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20108d38:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:72
}
20108d3a:	853e                	mv	a0,a5
20108d3c:	50b2                	lw	ra,44(sp)
20108d3e:	5422                	lw	s0,40(sp)
20108d40:	6145                	add	sp,sp,48
20108d42:	8082                	ret

20108d44 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20108d44:	7179                	add	sp,sp,-48
20108d46:	d606                	sw	ra,44(sp)
20108d48:	d422                	sw	s0,40(sp)
20108d4a:	1800                	add	s0,sp,48
20108d4c:	fca42e23          	sw	a0,-36(s0)
20108d50:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20108d54:	fdc42503          	lw	a0,-36(s0)
20108d58:	d9dff0ef          	jal	20108af4 <__metal_driver_sifive_plic0_control_base>
20108d5c:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20108d60:	fd842783          	lw	a5,-40(s0)
20108d64:	078a                	sll	a5,a5,0x2
20108d66:	873e                	mv	a4,a5
20108d68:	fec42783          	lw	a5,-20(s0)
20108d6c:	97ba                	add	a5,a5,a4
20108d6e:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20108d70:	853e                	mv	a0,a5
20108d72:	50b2                	lw	ra,44(sp)
20108d74:	5422                	lw	s0,40(sp)
20108d76:	6145                	add	sp,sp,48
20108d78:	8082                	ret

20108d7a <__metal_plic0_enable>:
__metal_plic0_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20108d7a:	7179                	add	sp,sp,-48
20108d7c:	d606                	sw	ra,44(sp)
20108d7e:	d422                	sw	s0,40(sp)
20108d80:	1800                	add	s0,sp,48
20108d82:	fca42e23          	sw	a0,-36(s0)
20108d86:	fcb42c23          	sw	a1,-40(s0)
20108d8a:	fcc42a23          	sw	a2,-44(s0)
20108d8e:	fcd42823          	sw	a3,-48(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20108d92:	fdc42503          	lw	a0,-36(s0)
20108d96:	d5fff0ef          	jal	20108af4 <__metal_driver_sifive_plic0_control_base>
20108d9a:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20108d9e:	fd842783          	lw	a5,-40(s0)
20108da2:	00779713          	sll	a4,a5,0x7
20108da6:	fec42783          	lw	a5,-20(s0)
20108daa:	97ba                	add	a5,a5,a4
20108dac:	fd442703          	lw	a4,-44(s0)
20108db0:	8715                	sra	a4,a4,0x5
20108db2:	070a                	sll	a4,a4,0x2
20108db4:	973e                	add	a4,a4,a5
20108db6:	6789                	lui	a5,0x2
20108db8:	97ba                	add	a5,a5,a4
20108dba:	439c                	lw	a5,0(a5)
20108dbc:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20108dc0:	fd042783          	lw	a5,-48(s0)
20108dc4:	cf81                	beqz	a5,20108ddc <__metal_plic0_enable+0x62>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20108dc6:	fd442783          	lw	a5,-44(s0)
20108dca:	8bfd                	and	a5,a5,31
20108dcc:	4705                	li	a4,1
20108dce:	00f717b3          	sll	a5,a4,a5
20108dd2:	873e                	mv	a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20108dd4:	fe842783          	lw	a5,-24(s0)
20108dd8:	8fd9                	or	a5,a5,a4
20108dda:	a829                	j	20108df4 <__metal_plic0_enable+0x7a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20108ddc:	fd442783          	lw	a5,-44(s0)
20108de0:	8bfd                	and	a5,a5,31
20108de2:	4705                	li	a4,1
20108de4:	00f717b3          	sll	a5,a4,a5
20108de8:	fff7c793          	not	a5,a5
20108dec:	873e                	mv	a4,a5
20108dee:	fe842783          	lw	a5,-24(s0)
20108df2:	8ff9                	and	a5,a5,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20108df4:	fd842703          	lw	a4,-40(s0)
20108df8:	00771693          	sll	a3,a4,0x7
20108dfc:	fec42703          	lw	a4,-20(s0)
20108e00:	9736                	add	a4,a4,a3
20108e02:	fd442683          	lw	a3,-44(s0)
20108e06:	8695                	sra	a3,a3,0x5
20108e08:	068a                	sll	a3,a3,0x2
20108e0a:	96ba                	add	a3,a3,a4
20108e0c:	6709                	lui	a4,0x2
20108e0e:	9736                	add	a4,a4,a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20108e10:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20108e12:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:103
}
20108e14:	853e                	mv	a0,a5
20108e16:	50b2                	lw	ra,44(sp)
20108e18:	5422                	lw	s0,40(sp)
20108e1a:	6145                	add	sp,sp,48
20108e1c:	8082                	ret

20108e1e <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20108e1e:	1101                	add	sp,sp,-32
20108e20:	ce06                	sw	ra,28(sp)
20108e22:	cc22                	sw	s0,24(sp)
20108e24:	1000                	add	s0,sp,32
20108e26:	fea42623          	sw	a0,-20(s0)
20108e2a:	feb42423          	sw	a1,-24(s0)
20108e2e:	12c00513          	li	a0,300
20108e32:	312020ef          	jal	2010b144 <metal_shutdown>

20108e36 <__metal_plic0_handler>:
__metal_plic0_handler():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20108e36:	7179                	add	sp,sp,-48
20108e38:	d606                	sw	ra,44(sp)
20108e3a:	d422                	sw	s0,40(sp)
20108e3c:	1800                	add	s0,sp,48
20108e3e:	fca42e23          	sw	a0,-36(s0)
20108e42:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20108e46:	fd842783          	lw	a5,-40(s0)
20108e4a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20108e4e:	b84fe0ef          	jal	201071d2 <__metal_myhart_id>
20108e52:	87aa                	mv	a5,a0
20108e54:	853e                	mv	a0,a5
20108e56:	d65ff0ef          	jal	20108bba <__metal_driver_sifive_plic0_context_ids>
20108e5a:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20108e5e:	fe842583          	lw	a1,-24(s0)
20108e62:	fec42503          	lw	a0,-20(s0)
20108e66:	d73ff0ef          	jal	20108bd8 <__metal_plic0_claim_interrupt>
20108e6a:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20108e6e:	fec42503          	lw	a0,-20(s0)
20108e72:	cadff0ef          	jal	20108b1e <__metal_driver_sifive_plic0_num_interrupts>
20108e76:	87aa                	mv	a5,a0
20108e78:	fef42023          	sw	a5,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20108e7c:	fe442703          	lw	a4,-28(s0)
20108e80:	fe042783          	lw	a5,-32(s0)
20108e84:	04f77063          	bgeu	a4,a5,20108ec4 <__metal_plic0_handler+0x8e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20108e88:	fec42703          	lw	a4,-20(s0)
20108e8c:	fe442783          	lw	a5,-28(s0)
20108e90:	078a                	sll	a5,a5,0x2
20108e92:	97ba                	add	a5,a5,a4
20108e94:	479c                	lw	a5,8(a5)
20108e96:	c79d                	beqz	a5,20108ec4 <__metal_plic0_handler+0x8e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20108e98:	fec42703          	lw	a4,-20(s0)
20108e9c:	fe442783          	lw	a5,-28(s0)
20108ea0:	078a                	sll	a5,a5,0x2
20108ea2:	97ba                	add	a5,a5,a4
20108ea4:	4794                	lw	a3,8(a5)
20108ea6:	fe442503          	lw	a0,-28(s0)
20108eaa:	fec42603          	lw	a2,-20(s0)
20108eae:	fe442703          	lw	a4,-28(s0)
20108eb2:	87ba                	mv	a5,a4
20108eb4:	0786                	sll	a5,a5,0x1
20108eb6:	97ba                	add	a5,a5,a4
20108eb8:	078e                	sll	a5,a5,0x3
20108eba:	97b2                	add	a5,a5,a2
20108ebc:	0f07a783          	lw	a5,240(a5) # 20f0 <__heap_size+0x18f0>
20108ec0:	85be                	mv	a1,a5
20108ec2:	9682                	jalr	a3
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20108ec4:	fe442603          	lw	a2,-28(s0)
20108ec8:	fe842583          	lw	a1,-24(s0)
20108ecc:	fec42503          	lw	a0,-20(s0)
20108ed0:	d45ff0ef          	jal	20108c14 <__metal_plic0_complete_interrupt>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:121
}
20108ed4:	0001                	nop
20108ed6:	50b2                	lw	ra,44(sp)
20108ed8:	5422                	lw	s0,40(sp)
20108eda:	6145                	add	sp,sp,48
20108edc:	8082                	ret

20108ede <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20108ede:	7139                	add	sp,sp,-64
20108ee0:	de06                	sw	ra,60(sp)
20108ee2:	dc22                	sw	s0,56(sp)
20108ee4:	0080                	add	s0,sp,64
20108ee6:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20108eea:	fcc42783          	lw	a5,-52(s0)
20108eee:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20108ef2:	fe442783          	lw	a5,-28(s0)
20108ef6:	43dc                	lw	a5,4(a5)
20108ef8:	12079c63          	bnez	a5,20109030 <__metal_driver_riscv_plic0_init+0x152>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20108efc:	fe042623          	sw	zero,-20(s0)
20108f00:	a205                	j	20109020 <__metal_driver_riscv_plic0_init+0x142>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20108f02:	fcc42503          	lw	a0,-52(s0)
20108f06:	c19ff0ef          	jal	20108b1e <__metal_driver_sifive_plic0_num_interrupts>
20108f0a:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20108f0e:	fec42583          	lw	a1,-20(s0)
20108f12:	fcc42503          	lw	a0,-52(s0)
20108f16:	c5bff0ef          	jal	20108b70 <__metal_driver_sifive_plic0_interrupt_parents>
20108f1a:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20108f1e:	fec42583          	lw	a1,-20(s0)
20108f22:	fcc42503          	lw	a0,-52(s0)
20108f26:	c73ff0ef          	jal	20108b98 <__metal_driver_sifive_plic0_interrupt_lines>
20108f2a:	fca42c23          	sw	a0,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20108f2e:	fdc42783          	lw	a5,-36(s0)
20108f32:	439c                	lw	a5,0(a5)
20108f34:	439c                	lw	a5,0(a5)
20108f36:	fdc42503          	lw	a0,-36(s0)
20108f3a:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20108f3c:	fe042423          	sw	zero,-24(s0)
20108f40:	a895                	j	20108fb4 <__metal_driver_riscv_plic0_init+0xd6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20108f42:	4681                	li	a3,0
20108f44:	fe842603          	lw	a2,-24(s0)
20108f48:	fec42583          	lw	a1,-20(s0)
20108f4c:	fe442503          	lw	a0,-28(s0)
20108f50:	e2bff0ef          	jal	20108d7a <__metal_plic0_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20108f54:	fe842703          	lw	a4,-24(s0)
20108f58:	fe042783          	lw	a5,-32(s0)
20108f5c:	04f75763          	bge	a4,a5,20108faa <__metal_driver_riscv_plic0_init+0xcc>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20108f60:	4601                	li	a2,0
20108f62:	fe842583          	lw	a1,-24(s0)
20108f66:	fcc42503          	lw	a0,-52(s0)
20108f6a:	d75ff0ef          	jal	20108cde <__metal_driver_riscv_plic0_set_priority>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20108f6e:	fe442703          	lw	a4,-28(s0)
20108f72:	fe842783          	lw	a5,-24(s0)
20108f76:	078a                	sll	a5,a5,0x2
20108f78:	97ba                	add	a5,a5,a4
20108f7a:	0007a423          	sw	zero,8(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20108f7e:	fe442683          	lw	a3,-28(s0)
20108f82:	fe842703          	lw	a4,-24(s0)
20108f86:	87ba                	mv	a5,a4
20108f88:	0786                	sll	a5,a5,0x1
20108f8a:	97ba                	add	a5,a5,a4
20108f8c:	078e                	sll	a5,a5,0x3
20108f8e:	97b6                	add	a5,a5,a3
20108f90:	0e07a623          	sw	zero,236(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20108f94:	fe442683          	lw	a3,-28(s0)
20108f98:	fe842703          	lw	a4,-24(s0)
20108f9c:	87ba                	mv	a5,a4
20108f9e:	0786                	sll	a5,a5,0x1
20108fa0:	97ba                	add	a5,a5,a4
20108fa2:	078e                	sll	a5,a5,0x3
20108fa4:	97b6                	add	a5,a5,a3
20108fa6:	0e07a823          	sw	zero,240(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20108faa:	fe842783          	lw	a5,-24(s0)
20108fae:	0785                	add	a5,a5,1
20108fb0:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20108fb4:	fe842703          	lw	a4,-24(s0)
20108fb8:	3ff00793          	li	a5,1023
20108fbc:	f8e7d3e3          	bge	a5,a4,20108f42 <__metal_driver_riscv_plic0_init+0x64>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20108fc0:	4601                	li	a2,0
20108fc2:	fec42583          	lw	a1,-20(s0)
20108fc6:	fcc42503          	lw	a0,-52(s0)
20108fca:	c91ff0ef          	jal	20108c5a <__metal_plic0_set_threshold>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20108fce:	fdc42783          	lw	a5,-36(s0)
20108fd2:	439c                	lw	a5,0(a5)
20108fd4:	4fdc                	lw	a5,28(a5)
20108fd6:	fe442683          	lw	a3,-28(s0)
20108fda:	4601                	li	a2,0
20108fdc:	fd842583          	lw	a1,-40(s0)
20108fe0:	fdc42503          	lw	a0,-36(s0)
20108fe4:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20108fe6:	fdc42783          	lw	a5,-36(s0)
20108fea:	439c                	lw	a5,0(a5)
20108fec:	4fdc                	lw	a5,28(a5)
20108fee:	fe442683          	lw	a3,-28(s0)
20108ff2:	20109737          	lui	a4,0x20109
20108ff6:	e3670613          	add	a2,a4,-458 # 20108e36 <__metal_plic0_handler>
20108ffa:	fd842583          	lw	a1,-40(s0)
20108ffe:	fdc42503          	lw	a0,-36(s0)
20109002:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20109004:	fdc42783          	lw	a5,-36(s0)
20109008:	439c                	lw	a5,0(a5)
2010900a:	53dc                	lw	a5,36(a5)
2010900c:	fd842583          	lw	a1,-40(s0)
20109010:	fdc42503          	lw	a0,-36(s0)
20109014:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20109016:	fec42783          	lw	a5,-20(s0)
2010901a:	0785                	add	a5,a5,1
2010901c:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20109020:	fec42783          	lw	a5,-20(s0)
20109024:	ecf05fe3          	blez	a5,20108f02 <__metal_driver_riscv_plic0_init+0x24>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20109028:	fe442783          	lw	a5,-28(s0)
2010902c:	4705                	li	a4,1
2010902e:	c3d8                	sw	a4,4(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20109030:	0001                	nop
20109032:	50f2                	lw	ra,60(sp)
20109034:	5462                	lw	s0,56(sp)
20109036:	6121                	add	sp,sp,64
20109038:	8082                	ret

2010903a <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
2010903a:	7179                	add	sp,sp,-48
2010903c:	d606                	sw	ra,44(sp)
2010903e:	d422                	sw	s0,40(sp)
20109040:	1800                	add	s0,sp,48
20109042:	fca42e23          	sw	a0,-36(s0)
20109046:	fcb42c23          	sw	a1,-40(s0)
2010904a:	fcc42a23          	sw	a2,-44(s0)
2010904e:	fcd42823          	sw	a3,-48(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20109052:	fdc42783          	lw	a5,-36(s0)
20109056:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2010905a:	fdc42503          	lw	a0,-36(s0)
2010905e:	ac1ff0ef          	jal	20108b1e <__metal_driver_sifive_plic0_num_interrupts>
20109062:	872a                	mv	a4,a0
20109064:	fd842783          	lw	a5,-40(s0)
20109068:	00e7c463          	blt	a5,a4,20109070 <__metal_driver_riscv_plic0_register+0x36>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
2010906c:	57fd                	li	a5,-1
2010906e:	a051                	j	201090f2 <__metal_driver_riscv_plic0_register+0xb8>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20109070:	fd442783          	lw	a5,-44(s0)
20109074:	cf9d                	beqz	a5,201090b2 <__metal_driver_riscv_plic0_register+0x78>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20109076:	4609                	li	a2,2
20109078:	fd842583          	lw	a1,-40(s0)
2010907c:	fdc42503          	lw	a0,-36(s0)
20109080:	c5fff0ef          	jal	20108cde <__metal_driver_riscv_plic0_set_priority>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20109084:	fec42703          	lw	a4,-20(s0)
20109088:	fd842783          	lw	a5,-40(s0)
2010908c:	078a                	sll	a5,a5,0x2
2010908e:	97ba                	add	a5,a5,a4
20109090:	fd442703          	lw	a4,-44(s0)
20109094:	c798                	sw	a4,8(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20109096:	fec42683          	lw	a3,-20(s0)
2010909a:	fd842703          	lw	a4,-40(s0)
2010909e:	87ba                	mv	a5,a4
201090a0:	0786                	sll	a5,a5,0x1
201090a2:	97ba                	add	a5,a5,a4
201090a4:	078e                	sll	a5,a5,0x3
201090a6:	97b6                	add	a5,a5,a3
201090a8:	fd042703          	lw	a4,-48(s0)
201090ac:	0ee7a823          	sw	a4,240(a5)
201090b0:	a081                	j	201090f0 <__metal_driver_riscv_plic0_register+0xb6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
201090b2:	4605                	li	a2,1
201090b4:	fd842583          	lw	a1,-40(s0)
201090b8:	fdc42503          	lw	a0,-36(s0)
201090bc:	c23ff0ef          	jal	20108cde <__metal_driver_riscv_plic0_set_priority>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
201090c0:	fec42703          	lw	a4,-20(s0)
201090c4:	fd842783          	lw	a5,-40(s0)
201090c8:	078a                	sll	a5,a5,0x2
201090ca:	97ba                	add	a5,a5,a4
201090cc:	20109737          	lui	a4,0x20109
201090d0:	e1e70713          	add	a4,a4,-482 # 20108e1e <__metal_plic0_default_handler>
201090d4:	c798                	sw	a4,8(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
201090d6:	fec42683          	lw	a3,-20(s0)
201090da:	fd842703          	lw	a4,-40(s0)
201090de:	87ba                	mv	a5,a4
201090e0:	0786                	sll	a5,a5,0x1
201090e2:	97ba                	add	a5,a5,a4
201090e4:	078e                	sll	a5,a5,0x3
201090e6:	97b6                	add	a5,a5,a3
201090e8:	fd042703          	lw	a4,-48(s0)
201090ec:	0ee7a623          	sw	a4,236(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
201090f0:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:185
}
201090f2:	853e                	mv	a0,a5
201090f4:	50b2                	lw	ra,44(sp)
201090f6:	5422                	lw	s0,40(sp)
201090f8:	6145                	add	sp,sp,48
201090fa:	8082                	ret

201090fc <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
201090fc:	7179                	add	sp,sp,-48
201090fe:	d606                	sw	ra,44(sp)
20109100:	d422                	sw	s0,40(sp)
20109102:	1800                	add	s0,sp,48
20109104:	fca42e23          	sw	a0,-36(s0)
20109108:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010910c:	fdc42783          	lw	a5,-36(s0)
20109110:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20109114:	fdc42503          	lw	a0,-36(s0)
20109118:	a07ff0ef          	jal	20108b1e <__metal_driver_sifive_plic0_num_interrupts>
2010911c:	872a                	mv	a4,a0
2010911e:	fd842783          	lw	a5,-40(s0)
20109122:	00e7c463          	blt	a5,a4,2010912a <__metal_driver_riscv_plic0_enable+0x2e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20109126:	57fd                	li	a5,-1
20109128:	a829                	j	20109142 <__metal_driver_riscv_plic0_enable+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
2010912a:	8a8fe0ef          	jal	201071d2 <__metal_myhart_id>
2010912e:	87aa                	mv	a5,a0
20109130:	4685                	li	a3,1
20109132:	fd842603          	lw	a2,-40(s0)
20109136:	85be                	mv	a1,a5
20109138:	fec42503          	lw	a0,-20(s0)
2010913c:	c3fff0ef          	jal	20108d7a <__metal_plic0_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20109140:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:197
}
20109142:	853e                	mv	a0,a5
20109144:	50b2                	lw	ra,44(sp)
20109146:	5422                	lw	s0,40(sp)
20109148:	6145                	add	sp,sp,48
2010914a:	8082                	ret

2010914c <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
2010914c:	7179                	add	sp,sp,-48
2010914e:	d606                	sw	ra,44(sp)
20109150:	d422                	sw	s0,40(sp)
20109152:	1800                	add	s0,sp,48
20109154:	fca42e23          	sw	a0,-36(s0)
20109158:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010915c:	fdc42783          	lw	a5,-36(s0)
20109160:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20109164:	fdc42503          	lw	a0,-36(s0)
20109168:	9b7ff0ef          	jal	20108b1e <__metal_driver_sifive_plic0_num_interrupts>
2010916c:	872a                	mv	a4,a0
2010916e:	fd842783          	lw	a5,-40(s0)
20109172:	00e7c463          	blt	a5,a4,2010917a <__metal_driver_riscv_plic0_disable+0x2e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20109176:	57fd                	li	a5,-1
20109178:	a829                	j	20109192 <__metal_driver_riscv_plic0_disable+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
2010917a:	858fe0ef          	jal	201071d2 <__metal_myhart_id>
2010917e:	87aa                	mv	a5,a0
20109180:	4681                	li	a3,0
20109182:	fd842603          	lw	a2,-40(s0)
20109186:	85be                	mv	a1,a5
20109188:	fec42503          	lw	a0,-20(s0)
2010918c:	befff0ef          	jal	20108d7a <__metal_plic0_enable>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20109190:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:208
}
20109192:	853e                	mv	a0,a5
20109194:	50b2                	lw	ra,44(sp)
20109196:	5422                	lw	s0,40(sp)
20109198:	6145                	add	sp,sp,48
2010919a:	8082                	ret

2010919c <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
2010919c:	1101                	add	sp,sp,-32
2010919e:	ce06                	sw	ra,28(sp)
201091a0:	cc22                	sw	s0,24(sp)
201091a2:	1000                	add	s0,sp,32
201091a4:	fea42623          	sw	a0,-20(s0)
201091a8:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
201091ac:	826fe0ef          	jal	201071d2 <__metal_myhart_id>
201091b0:	87aa                	mv	a5,a0
201091b2:	fe842603          	lw	a2,-24(s0)
201091b6:	85be                	mv	a1,a5
201091b8:	fec42503          	lw	a0,-20(s0)
201091bc:	a9fff0ef          	jal	20108c5a <__metal_plic0_set_threshold>
201091c0:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
201091c2:	853e                	mv	a0,a5
201091c4:	40f2                	lw	ra,28(sp)
201091c6:	4462                	lw	s0,24(sp)
201091c8:	6105                	add	sp,sp,32
201091ca:	8082                	ret

201091cc <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
201091cc:	1101                	add	sp,sp,-32
201091ce:	ce06                	sw	ra,28(sp)
201091d0:	cc22                	sw	s0,24(sp)
201091d2:	1000                	add	s0,sp,32
201091d4:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
201091d8:	ffbfd0ef          	jal	201071d2 <__metal_myhart_id>
201091dc:	87aa                	mv	a5,a0
201091de:	85be                	mv	a1,a5
201091e0:	fec42503          	lw	a0,-20(s0)
201091e4:	abfff0ef          	jal	20108ca2 <__metal_plic0_get_threshold>
201091e8:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:219
}
201091ea:	853e                	mv	a0,a5
201091ec:	40f2                	lw	ra,28(sp)
201091ee:	4462                	lw	s0,24(sp)
201091f0:	6105                	add	sp,sp,32
201091f2:	8082                	ret

201091f4 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
201091f4:	7179                	add	sp,sp,-48
201091f6:	d606                	sw	ra,44(sp)
201091f8:	d422                	sw	s0,40(sp)
201091fa:	1800                	add	s0,sp,48
201091fc:	fca42e23          	sw	a0,-36(s0)
20109200:	fcb42c23          	sw	a1,-40(s0)
20109204:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20109208:	fe042223          	sw	zero,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010920c:	fdc42783          	lw	a5,-36(s0)
20109210:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20109214:	fdc42503          	lw	a0,-36(s0)
20109218:	907ff0ef          	jal	20108b1e <__metal_driver_sifive_plic0_num_interrupts>
2010921c:	872a                	mv	a4,a0
2010921e:	fd442783          	lw	a5,-44(s0)
20109222:	00e7c863          	blt	a5,a4,20109232 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20109226:	57fd                	li	a5,-1
20109228:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
2010922c:	fe442783          	lw	a5,-28(s0)
20109230:	a899                	j	20109286 <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20109232:	fe042623          	sw	zero,-20(s0)
20109236:	a099                	j	2010927c <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20109238:	fec42783          	lw	a5,-20(s0)
2010923c:	c795                	beqz	a5,20109268 <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
2010923e:	4685                	li	a3,1
20109240:	fd442603          	lw	a2,-44(s0)
20109244:	fec42583          	lw	a1,-20(s0)
20109248:	fe842503          	lw	a0,-24(s0)
2010924c:	b2fff0ef          	jal	20108d7a <__metal_plic0_enable>
20109250:	87aa                	mv	a5,a0
20109252:	0017f713          	and	a4,a5,1
20109256:	fec42783          	lw	a5,-20(s0)
2010925a:	00f71733          	sll	a4,a4,a5
2010925e:	fe442783          	lw	a5,-28(s0)
20109262:	8fd9                	or	a5,a5,a4
20109264:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20109268:	fec42783          	lw	a5,-20(s0)
2010926c:	0785                	add	a5,a5,1
2010926e:	fef42623          	sw	a5,-20(s0)
20109272:	fd842783          	lw	a5,-40(s0)
20109276:	8385                	srl	a5,a5,0x1
20109278:	fcf42c23          	sw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
2010927c:	fd842783          	lw	a5,-40(s0)
20109280:	ffc5                	bnez	a5,20109238 <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20109282:	fe442783          	lw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20109286:	853e                	mv	a0,a5
20109288:	50b2                	lw	ra,44(sp)
2010928a:	5422                	lw	s0,40(sp)
2010928c:	6145                	add	sp,sp,48
2010928e:	8082                	ret

20109290 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20109290:	7179                	add	sp,sp,-48
20109292:	d606                	sw	ra,44(sp)
20109294:	d422                	sw	s0,40(sp)
20109296:	1800                	add	s0,sp,48
20109298:	fca42e23          	sw	a0,-36(s0)
2010929c:	fcb42c23          	sw	a1,-40(s0)
201092a0:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
201092a4:	fe042223          	sw	zero,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
201092a8:	fdc42783          	lw	a5,-36(s0)
201092ac:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
201092b0:	fdc42503          	lw	a0,-36(s0)
201092b4:	86bff0ef          	jal	20108b1e <__metal_driver_sifive_plic0_num_interrupts>
201092b8:	872a                	mv	a4,a0
201092ba:	fd442783          	lw	a5,-44(s0)
201092be:	00e7c863          	blt	a5,a4,201092ce <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
201092c2:	57fd                	li	a5,-1
201092c4:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
201092c8:	fe442783          	lw	a5,-28(s0)
201092cc:	a899                	j	20109322 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
201092ce:	fe042623          	sw	zero,-20(s0)
201092d2:	a099                	j	20109318 <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
201092d4:	fec42783          	lw	a5,-20(s0)
201092d8:	c795                	beqz	a5,20109304 <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
201092da:	4681                	li	a3,0
201092dc:	fd442603          	lw	a2,-44(s0)
201092e0:	fec42583          	lw	a1,-20(s0)
201092e4:	fe842503          	lw	a0,-24(s0)
201092e8:	a93ff0ef          	jal	20108d7a <__metal_plic0_enable>
201092ec:	87aa                	mv	a5,a0
201092ee:	0017f713          	and	a4,a5,1
201092f2:	fec42783          	lw	a5,-20(s0)
201092f6:	00f71733          	sll	a4,a4,a5
201092fa:	fe442783          	lw	a5,-28(s0)
201092fe:	8fd9                	or	a5,a5,a4
20109300:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20109304:	fec42783          	lw	a5,-20(s0)
20109308:	0785                	add	a5,a5,1
2010930a:	fef42623          	sw	a5,-20(s0)
2010930e:	fd842783          	lw	a5,-40(s0)
20109312:	8385                	srl	a5,a5,0x1
20109314:	fcf42c23          	sw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20109318:	fd842783          	lw	a5,-40(s0)
2010931c:	ffc5                	bnez	a5,201092d4 <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
2010931e:	fe442783          	lw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20109322:	853e                	mv	a0,a5
20109324:	50b2                	lw	ra,44(sp)
20109326:	5422                	lw	s0,40(sp)
20109328:	6145                	add	sp,sp,48
2010932a:	8082                	ret

2010932c <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
2010932c:	7179                	add	sp,sp,-48
2010932e:	d606                	sw	ra,44(sp)
20109330:	d422                	sw	s0,40(sp)
20109332:	1800                	add	s0,sp,48
20109334:	fca42e23          	sw	a0,-36(s0)
20109338:	fcb42c23          	sw	a1,-40(s0)
2010933c:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20109340:	fe042423          	sw	zero,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20109344:	fe042623          	sw	zero,-20(s0)
20109348:	a091                	j	2010938c <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
2010934a:	fec42783          	lw	a5,-20(s0)
2010934e:	c78d                	beqz	a5,20109378 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20109350:	fd442603          	lw	a2,-44(s0)
20109354:	fec42583          	lw	a1,-20(s0)
20109358:	fdc42503          	lw	a0,-36(s0)
2010935c:	8ffff0ef          	jal	20108c5a <__metal_plic0_set_threshold>
20109360:	87aa                	mv	a5,a0
20109362:	0017f713          	and	a4,a5,1
20109366:	fec42783          	lw	a5,-20(s0)
2010936a:	00f71733          	sll	a4,a4,a5
2010936e:	fe842783          	lw	a5,-24(s0)
20109372:	8fd9                	or	a5,a5,a4
20109374:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20109378:	fec42783          	lw	a5,-20(s0)
2010937c:	0785                	add	a5,a5,1
2010937e:	fef42623          	sw	a5,-20(s0)
20109382:	fd842783          	lw	a5,-40(s0)
20109386:	8385                	srl	a5,a5,0x1
20109388:	fcf42c23          	sw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
2010938c:	fd842783          	lw	a5,-40(s0)
20109390:	ffcd                	bnez	a5,2010934a <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20109392:	fe842783          	lw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:281
}
20109396:	853e                	mv	a0,a5
20109398:	50b2                	lw	ra,44(sp)
2010939a:	5422                	lw	s0,40(sp)
2010939c:	6145                	add	sp,sp,48
2010939e:	8082                	ret

201093a0 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
201093a0:	1101                	add	sp,sp,-32
201093a2:	ce06                	sw	ra,28(sp)
201093a4:	cc22                	sw	s0,24(sp)
201093a6:	1000                	add	s0,sp,32
201093a8:	fea42623          	sw	a0,-20(s0)
201093ac:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
201093b0:	fe842583          	lw	a1,-24(s0)
201093b4:	fec42503          	lw	a0,-20(s0)
201093b8:	8ebff0ef          	jal	20108ca2 <__metal_plic0_get_threshold>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
201093bc:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/riscv_plic0.c:287
}
201093be:	853e                	mv	a0,a5
201093c0:	40f2                	lw	ra,28(sp)
201093c2:	4462                	lw	s0,24(sp)
201093c4:	6105                	add	sp,sp,32
201093c6:	8082                	ret

201093c8 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1107



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
201093c8:	1101                	add	sp,sp,-32
201093ca:	ce22                	sw	s0,28(sp)
201093cc:	1000                	add	s0,sp,32
201093ce:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1108
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
201093d2:	800007b7          	lui	a5,0x80000
201093d6:	07878793          	add	a5,a5,120 # 80000078 <__metal_dt_clock_2>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1109
}
201093da:	853e                	mv	a0,a5
201093dc:	4472                	lw	s0,28(sp)
201093de:	6105                	add	sp,sp,32
201093e0:	8082                	ret

201093e2 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1112

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
201093e2:	1101                	add	sp,sp,-32
201093e4:	ce22                	sw	s0,28(sp)
201093e6:	1000                	add	s0,sp,32
201093e8:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1113
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
201093ec:	82818793          	add	a5,gp,-2008 # 80000aa8 <__metal_dt_prci_10008000>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1114
}
201093f0:	853e                	mv	a0,a5
201093f2:	4472                	lw	s0,28(sp)
201093f4:	6105                	add	sp,sp,32
201093f6:	8082                	ret

201093f8 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1122
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
201093f8:	1101                	add	sp,sp,-32
201093fa:	ce22                	sw	s0,28(sp)
201093fc:	1000                	add	s0,sp,32
201093fe:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1123
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20109402:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1124
}
20109404:	853e                	mv	a0,a5
20109406:	4472                	lw	s0,28(sp)
20109408:	6105                	add	sp,sp,32
2010940a:	8082                	ret

2010940c <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1239
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
2010940c:	1141                	add	sp,sp,-16
2010940e:	c622                	sw	s0,12(sp)
20109410:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20109412:	201057b7          	lui	a5,0x20105
20109416:	df078793          	add	a5,a5,-528 # 20104df0 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1241
}
2010941a:	853e                	mv	a0,a5
2010941c:	4432                	lw	s0,12(sp)
2010941e:	0141                	add	sp,sp,16
20109420:	8082                	ret

20109422 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20109422:	7139                	add	sp,sp,-64
20109424:	de06                	sw	ra,60(sp)
20109426:	dc22                	sw	s0,56(sp)
20109428:	0080                	add	s0,sp,64
2010942a:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
2010942e:	fcc42503          	lw	a0,-52(s0)
20109432:	3f59                	jal	201093c8 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20109434:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20109438:	fcc42503          	lw	a0,-52(s0)
2010943c:	3f75                	jal	201093f8 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
2010943e:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20109442:	fcc42503          	lw	a0,-52(s0)
20109446:	3f71                	jal	201093e2 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20109448:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2010944c:	37c1                	jal	2010940c <__metal_driver_sifive_fe310_g000_prci_vtable>
2010944e:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20109452:	fe042783          	lw	a5,-32(s0)
20109456:	439c                	lw	a5,0(a5)
20109458:	fe842583          	lw	a1,-24(s0)
2010945c:	fe442503          	lw	a0,-28(s0)
20109460:	9782                	jalr	a5
20109462:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20109466:	fdc42703          	lw	a4,-36(s0)
2010946a:	400007b7          	lui	a5,0x40000
2010946e:	8ff9                	and	a5,a5,a4
20109470:	e399                	bnez	a5,20109476 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20109472:	57fd                	li	a5,-1
20109474:	a025                	j	2010949c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20109476:	fdc42783          	lw	a5,-36(s0)
2010947a:	0007c463          	bltz	a5,20109482 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
2010947e:	57fd                	li	a5,-1
20109480:	a831                	j	2010949c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20109482:	fec42503          	lw	a0,-20(s0)
20109486:	2c1010ef          	jal	2010af46 <metal_clock_get_rate_hz>
2010948a:	87aa                	mv	a5,a0
2010948c:	873e                	mv	a4,a5
2010948e:	fdc42783          	lw	a5,-36(s0)
20109492:	03f7f793          	and	a5,a5,63
20109496:	0785                	add	a5,a5,1 # 40000001 <metal_segment_data_source_start+0x1fef46a1>
20109498:	02f757b3          	divu	a5,a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
2010949c:	853e                	mv	a0,a5
2010949e:	50f2                	lw	ra,60(sp)
201094a0:	5462                	lw	s0,56(sp)
201094a2:	6121                	add	sp,sp,64
201094a4:	8082                	ret

201094a6 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
201094a6:	1101                	add	sp,sp,-32
201094a8:	ce06                	sw	ra,28(sp)
201094aa:	cc22                	sw	s0,24(sp)
201094ac:	1000                	add	s0,sp,32
201094ae:	fea42623          	sw	a0,-20(s0)
201094b2:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
201094b6:	fec42503          	lw	a0,-20(s0)
201094ba:	37a5                	jal	20109422 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
201094bc:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
201094be:	853e                	mv	a0,a5
201094c0:	40f2                	lw	ra,28(sp)
201094c2:	4462                	lw	s0,24(sp)
201094c4:	6105                	add	sp,sp,32
201094c6:	8082                	ret

201094c8 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1130
{
201094c8:	1101                	add	sp,sp,-32
201094ca:	ce22                	sw	s0,28(sp)
201094cc:	1000                	add	s0,sp,32
201094ce:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1131
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
201094d2:	800007b7          	lui	a5,0x80000
201094d6:	06c78793          	add	a5,a5,108 # 8000006c <__metal_dt_clock_0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1132
}
201094da:	853e                	mv	a0,a5
201094dc:	4472                	lw	s0,28(sp)
201094de:	6105                	add	sp,sp,32
201094e0:	8082                	ret

201094e2 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1135
{
201094e2:	1101                	add	sp,sp,-32
201094e4:	ce22                	sw	s0,28(sp)
201094e6:	1000                	add	s0,sp,32
201094e8:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1136
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
201094ec:	82818793          	add	a5,gp,-2008 # 80000aa8 <__metal_dt_prci_10008000>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1137
}
201094f0:	853e                	mv	a0,a5
201094f2:	4472                	lw	s0,28(sp)
201094f4:	6105                	add	sp,sp,32
201094f6:	8082                	ret

201094f8 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1140
{
201094f8:	1101                	add	sp,sp,-32
201094fa:	ce22                	sw	s0,28(sp)
201094fc:	1000                	add	s0,sp,32
201094fe:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1141
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20109502:	4791                	li	a5,4
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1142
}
20109504:	853e                	mv	a0,a5
20109506:	4472                	lw	s0,28(sp)
20109508:	6105                	add	sp,sp,32
2010950a:	8082                	ret

2010950c <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1239
{
2010950c:	1141                	add	sp,sp,-16
2010950e:	c622                	sw	s0,12(sp)
20109510:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20109512:	201057b7          	lui	a5,0x20105
20109516:	df078793          	add	a5,a5,-528 # 20104df0 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1241
}
2010951a:	853e                	mv	a0,a5
2010951c:	4432                	lw	s0,12(sp)
2010951e:	0141                	add	sp,sp,16
20109520:	8082                	ret

20109522 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20109522:	7139                	add	sp,sp,-64
20109524:	de06                	sw	ra,60(sp)
20109526:	dc22                	sw	s0,56(sp)
20109528:	0080                	add	s0,sp,64
2010952a:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
2010952e:	fcc42503          	lw	a0,-52(s0)
20109532:	3f59                	jal	201094c8 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20109534:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20109538:	fcc42503          	lw	a0,-52(s0)
2010953c:	3f75                	jal	201094f8 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
2010953e:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20109542:	fcc42503          	lw	a0,-52(s0)
20109546:	3f71                	jal	201094e2 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20109548:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2010954c:	37c1                	jal	2010950c <__metal_driver_sifive_fe310_g000_prci_vtable>
2010954e:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20109552:	fe042783          	lw	a5,-32(s0)
20109556:	439c                	lw	a5,0(a5)
20109558:	fe842583          	lw	a1,-24(s0)
2010955c:	fe442503          	lw	a0,-28(s0)
20109560:	9782                	jalr	a5
20109562:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20109566:	fdc42703          	lw	a4,-36(s0)
2010956a:	400007b7          	lui	a5,0x40000
2010956e:	8ff9                	and	a5,a5,a4
20109570:	e399                	bnez	a5,20109576 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20109572:	57fd                	li	a5,-1
20109574:	a821                	j	2010958c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20109576:	fdc42783          	lw	a5,-36(s0)
2010957a:	0007c463          	bltz	a5,20109582 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
2010957e:	57fd                	li	a5,-1
20109580:	a031                	j	2010958c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20109582:	fec42503          	lw	a0,-20(s0)
20109586:	1c1010ef          	jal	2010af46 <metal_clock_get_rate_hz>
2010958a:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
2010958c:	853e                	mv	a0,a5
2010958e:	50f2                	lw	ra,60(sp)
20109590:	5462                	lw	s0,56(sp)
20109592:	6121                	add	sp,sp,64
20109594:	8082                	ret

20109596 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20109596:	1101                	add	sp,sp,-32
20109598:	ce06                	sw	ra,28(sp)
2010959a:	cc22                	sw	s0,24(sp)
2010959c:	1000                	add	s0,sp,32
2010959e:	fea42623          	sw	a0,-20(s0)
201095a2:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
201095a6:	fec42503          	lw	a0,-20(s0)
201095aa:	3fa5                	jal	20109522 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
201095ac:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
201095ae:	853e                	mv	a0,a5
201095b0:	40f2                	lw	ra,28(sp)
201095b2:	4462                	lw	s0,24(sp)
201095b4:	6105                	add	sp,sp,32
201095b6:	8082                	ret

201095b8 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1191
{
201095b8:	1101                	add	sp,sp,-32
201095ba:	ce22                	sw	s0,28(sp)
201095bc:	1000                	add	s0,sp,32
201095be:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1192
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
201095c2:	800017b7          	lui	a5,0x80001
201095c6:	a5878793          	add	a5,a5,-1448 # 80000a58 <__metal_dt_clock_3>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1193
}
201095ca:	853e                	mv	a0,a5
201095cc:	4472                	lw	s0,28(sp)
201095ce:	6105                	add	sp,sp,32
201095d0:	8082                	ret

201095d2 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1196
{
201095d2:	1101                	add	sp,sp,-32
201095d4:	ce22                	sw	s0,28(sp)
201095d6:	1000                	add	s0,sp,32
201095d8:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1197
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
201095dc:	800017b7          	lui	a5,0x80001
201095e0:	a6478793          	add	a5,a5,-1436 # 80000a64 <__metal_dt_clock_1>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1198
}
201095e4:	853e                	mv	a0,a5
201095e6:	4472                	lw	s0,28(sp)
201095e8:	6105                	add	sp,sp,32
201095ea:	8082                	ret

201095ec <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1201
{
201095ec:	1101                	add	sp,sp,-32
201095ee:	ce22                	sw	s0,28(sp)
201095f0:	1000                	add	s0,sp,32
201095f2:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1202
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
201095f6:	82818793          	add	a5,gp,-2008 # 80000aa8 <__metal_dt_prci_10008000>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1203
}
201095fa:	853e                	mv	a0,a5
201095fc:	4472                	lw	s0,28(sp)
201095fe:	6105                	add	sp,sp,32
20109600:	8082                	ret

20109602 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1206
{
20109602:	1101                	add	sp,sp,-32
20109604:	ce22                	sw	s0,28(sp)
20109606:	1000                	add	s0,sp,32
20109608:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1207
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
2010960c:	47b1                	li	a5,12
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1208
}
2010960e:	853e                	mv	a0,a5
20109610:	4472                	lw	s0,28(sp)
20109612:	6105                	add	sp,sp,32
20109614:	8082                	ret

20109616 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1211
{
20109616:	1141                	add	sp,sp,-16
20109618:	c622                	sw	s0,12(sp)
2010961a:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1212
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2010961c:	82818793          	add	a5,gp,-2008 # 80000aa8 <__metal_dt_prci_10008000>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1213
}
20109620:	853e                	mv	a0,a5
20109622:	4432                	lw	s0,12(sp)
20109624:	0141                	add	sp,sp,16
20109626:	8082                	ret

20109628 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1216
{
20109628:	1141                	add	sp,sp,-16
2010962a:	c622                	sw	s0,12(sp)
2010962c:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1217
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
2010962e:	47a1                	li	a5,8
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1218
}
20109630:	853e                	mv	a0,a5
20109632:	4432                	lw	s0,12(sp)
20109634:	0141                	add	sp,sp,16
20109636:	8082                	ret

20109638 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1221
{
20109638:	1141                	add	sp,sp,-16
2010963a:	c622                	sw	s0,12(sp)
2010963c:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1222
		return 16000000;
2010963e:	00f427b7          	lui	a5,0xf42
20109642:	40078793          	add	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1223
}
20109646:	853e                	mv	a0,a5
20109648:	4432                	lw	s0,12(sp)
2010964a:	0141                	add	sp,sp,16
2010964c:	8082                	ret

2010964e <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1229
{
2010964e:	1141                	add	sp,sp,-16
20109650:	c622                	sw	s0,12(sp)
20109652:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1230
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20109654:	100087b7          	lui	a5,0x10008
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1231
}
20109658:	853e                	mv	a0,a5
2010965a:	4432                	lw	s0,12(sp)
2010965c:	0141                	add	sp,sp,16
2010965e:	8082                	ret

20109660 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1239
{
20109660:	1141                	add	sp,sp,-16
20109662:	c622                	sw	s0,12(sp)
20109664:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20109666:	201057b7          	lui	a5,0x20105
2010966a:	df078793          	add	a5,a5,-528 # 20104df0 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1241
}
2010966e:	853e                	mv	a0,a5
20109670:	4432                	lw	s0,12(sp)
20109672:	0141                	add	sp,sp,16
20109674:	8082                	ret

20109676 <get_pll_config_freq>:
get_pll_config_freq():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20109676:	1101                	add	sp,sp,-32
20109678:	ce22                	sw	s0,28(sp)
2010967a:	1000                	add	s0,sp,32
2010967c:	fea42623          	sw	a0,-20(s0)
20109680:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20109684:	fe842783          	lw	a5,-24(s0)
20109688:	479c                	lw	a5,8(a5)
2010968a:	fec42703          	lw	a4,-20(s0)
2010968e:	00f76963          	bltu	a4,a5,201096a0 <get_pll_config_freq+0x2a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20109692:	fe842783          	lw	a5,-24(s0)
20109696:	47dc                	lw	a5,12(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20109698:	fec42703          	lw	a4,-20(s0)
2010969c:	00e7f463          	bgeu	a5,a4,201096a4 <get_pll_config_freq+0x2e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
201096a0:	57fd                	li	a5,-1
201096a2:	a829                	j	201096bc <get_pll_config_freq+0x46>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
201096a4:	fe842783          	lw	a5,-24(s0)
201096a8:	4398                	lw	a4,0(a5)
201096aa:	fec42783          	lw	a5,-20(s0)
201096ae:	02f70733          	mul	a4,a4,a5
201096b2:	fe842783          	lw	a5,-24(s0)
201096b6:	43dc                	lw	a5,4(a5)
201096b8:	02f757b3          	divu	a5,a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
201096bc:	853e                	mv	a0,a5
201096be:	4472                	lw	s0,28(sp)
201096c0:	6105                	add	sp,sp,32
201096c2:	8082                	ret

201096c4 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
201096c4:	7139                	add	sp,sp,-64
201096c6:	de06                	sw	ra,60(sp)
201096c8:	dc22                	sw	s0,56(sp)
201096ca:	0080                	add	s0,sp,64
201096cc:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
201096d0:	fcc42783          	lw	a5,-52(s0)
201096d4:	853e                	mv	a0,a5
201096d6:	efdff0ef          	jal	201095d2 <__metal_driver_sifive_fe310_g000_pll_pllref>
201096da:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
201096de:	f5bff0ef          	jal	20109638 <__metal_driver_sifive_fe310_g000_pll_init_rate>
201096e2:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
201096e6:	f43ff0ef          	jal	20109628 <__metal_driver_sifive_fe310_g000_pll_config_offset>
201096ea:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
201096ee:	f61ff0ef          	jal	2010964e <__metal_driver_sifive_fe310_g000_prci_base>
201096f2:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
201096f6:	fe042703          	lw	a4,-32(s0)
201096fa:	fe442783          	lw	a5,-28(s0)
201096fe:	97ba                	add	a5,a5,a4
20109700:	fcf42e23          	sw	a5,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20109704:	fcc42783          	lw	a5,-52(s0)
20109708:	43dc                	lw	a5,4(a5)
2010970a:	853e                	mv	a0,a5
2010970c:	7a4010ef          	jal	2010aeb0 <_metal_clock_call_all_callbacks>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20109710:	fdc42783          	lw	a5,-36(s0)
20109714:	4398                	lw	a4,0(a5)
20109716:	67c1                	lui	a5,0x10
20109718:	8ff9                	and	a5,a5,a4
2010971a:	cb91                	beqz	a5,2010972e <__metal_driver_sifive_fe310_g000_pll_init+0x6a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2010971c:	fdc42783          	lw	a5,-36(s0)
20109720:	4398                	lw	a4,0(a5)
20109722:	77c1                	lui	a5,0xffff0
20109724:	17fd                	add	a5,a5,-1 # fffeffff <metal_segment_heap_target_end+0x7ffee88f>
20109726:	8f7d                	and	a4,a4,a5
20109728:	fdc42783          	lw	a5,-36(s0)
2010972c:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
2010972e:	fec42783          	lw	a5,-20(s0)
20109732:	cb91                	beqz	a5,20109746 <__metal_driver_sifive_fe310_g000_pll_init+0x82>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20109734:	fdc42783          	lw	a5,-36(s0)
20109738:	4398                	lw	a4,0(a5)
2010973a:	000207b7          	lui	a5,0x20
2010973e:	8f5d                	or	a4,a4,a5
20109740:	fdc42783          	lw	a5,-36(s0)
20109744:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20109746:	fcc42783          	lw	a5,-52(s0)
2010974a:	439c                	lw	a5,0(a5)
2010974c:	43dc                	lw	a5,4(a5)
2010974e:	fcc42703          	lw	a4,-52(s0)
20109752:	fe842583          	lw	a1,-24(s0)
20109756:	853a                	mv	a0,a4
20109758:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
2010975a:	fcc42783          	lw	a5,-52(s0)
2010975e:	479c                	lw	a5,8(a5)
20109760:	853e                	mv	a0,a5
20109762:	74e010ef          	jal	2010aeb0 <_metal_clock_call_all_callbacks>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20109766:	0001                	nop
20109768:	50f2                	lw	ra,60(sp)
2010976a:	5462                	lw	s0,56(sp)
2010976c:	6121                	add	sp,sp,64
2010976e:	8082                	ret

20109770 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20109770:	711d                	add	sp,sp,-96
20109772:	ce86                	sw	ra,92(sp)
20109774:	cca2                	sw	s0,88(sp)
20109776:	1080                	add	s0,sp,96
20109778:	faa42623          	sw	a0,-84(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2010977c:	fac42503          	lw	a0,-84(s0)
20109780:	e53ff0ef          	jal	201095d2 <__metal_driver_sifive_fe310_g000_pll_pllref>
20109784:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20109788:	fac42503          	lw	a0,-84(s0)
2010978c:	e2dff0ef          	jal	201095b8 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20109790:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20109794:	fac42503          	lw	a0,-84(s0)
20109798:	e91ff0ef          	jal	20109628 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2010979c:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
201097a0:	fac42503          	lw	a0,-84(s0)
201097a4:	e73ff0ef          	jal	20109616 <__metal_driver_sifive_fe310_g000_pll_config_base>
201097a8:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
201097ac:	fac42503          	lw	a0,-84(s0)
201097b0:	e53ff0ef          	jal	20109602 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
201097b4:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
201097b8:	fac42503          	lw	a0,-84(s0)
201097bc:	e31ff0ef          	jal	201095ec <__metal_driver_sifive_fe310_g000_pll_divider_base>
201097c0:	fca42c23          	sw	a0,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
201097c4:	e9dff0ef          	jal	20109660 <__metal_driver_sifive_fe310_g000_prci_vtable>
201097c8:	fca42a23          	sw	a0,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
201097cc:	fd442783          	lw	a5,-44(s0)
201097d0:	439c                	lw	a5,0(a5)
201097d2:	fe442583          	lw	a1,-28(s0)
201097d6:	fe042503          	lw	a0,-32(s0)
201097da:	9782                	jalr	a5
201097dc:	fca42823          	sw	a0,-48(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
201097e0:	fd442783          	lw	a5,-44(s0)
201097e4:	439c                	lw	a5,0(a5)
201097e6:	fdc42583          	lw	a1,-36(s0)
201097ea:	fd842503          	lw	a0,-40(s0)
201097ee:	9782                	jalr	a5
201097f0:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
201097f4:	fd042703          	lw	a4,-48(s0)
201097f8:	67c1                	lui	a5,0x10
201097fa:	8f7d                	and	a4,a4,a5
201097fc:	67c1                	lui	a5,0x10
201097fe:	00f77863          	bgeu	a4,a5,2010980e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20109802:	fe842503          	lw	a0,-24(s0)
20109806:	740010ef          	jal	2010af46 <metal_clock_get_rate_hz>
2010980a:	87aa                	mv	a5,a0
2010980c:	a8e1                	j	201098e4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
2010980e:	fd042703          	lw	a4,-48(s0)
20109812:	000207b7          	lui	a5,0x20
20109816:	8f7d                	and	a4,a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20109818:	000207b7          	lui	a5,0x20
2010981c:	00f76563          	bltu	a4,a5,20109826 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20109820:	fec42783          	lw	a5,-20(s0)
20109824:	a019                	j	2010982a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xba>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20109826:	fe842783          	lw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
2010982a:	853e                	mv	a0,a5
2010982c:	71a010ef          	jal	2010af46 <metal_clock_get_rate_hz>
20109830:	fca42423          	sw	a0,-56(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20109834:	fd042703          	lw	a4,-48(s0)
20109838:	000407b7          	lui	a5,0x40
2010983c:	8f7d                	and	a4,a4,a5
2010983e:	000407b7          	lui	a5,0x40
20109842:	00f76563          	bltu	a4,a5,2010984c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xdc>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20109846:	fc842783          	lw	a5,-56(s0)
2010984a:	a869                	j	201098e4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
2010984c:	fd042783          	lw	a5,-48(s0)
20109850:	8b9d                	and	a5,a5,7
20109852:	0785                	add	a5,a5,1 # 40001 <__heap_size+0x3f801>
20109854:	fcf42223          	sw	a5,-60(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20109858:	fd042783          	lw	a5,-48(s0)
2010985c:	3f07f793          	and	a5,a5,1008
20109860:	8391                	srl	a5,a5,0x4
20109862:	0785                	add	a5,a5,1
20109864:	0786                	sll	a5,a5,0x1
20109866:	fcf42023          	sw	a5,-64(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
2010986a:	fd042703          	lw	a4,-48(s0)
2010986e:	6785                	lui	a5,0x1
20109870:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
20109874:	8f7d                	and	a4,a4,a5
20109876:	3ff00793          	li	a5,1023
2010987a:	00e7e463          	bltu	a5,a4,20109882 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x112>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
2010987e:	57fd                	li	a5,-1
20109880:	a095                	j	201098e4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20109882:	fd042703          	lw	a4,-48(s0)
20109886:	6785                	lui	a5,0x1
20109888:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
2010988c:	8ff9                	and	a5,a5,a4
2010988e:	83a9                	srl	a5,a5,0xa
20109890:	4705                	li	a4,1
20109892:	00f717b3          	sll	a5,a4,a5
20109896:	faf42e23          	sw	a5,-68(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2010989a:	fc842703          	lw	a4,-56(s0)
2010989e:	fc442783          	lw	a5,-60(s0)
201098a2:	02f74733          	div	a4,a4,a5
201098a6:	fc042783          	lw	a5,-64(s0)
201098aa:	02f70733          	mul	a4,a4,a5
201098ae:	fbc42783          	lw	a5,-68(s0)
201098b2:	02f747b3          	div	a5,a4,a5
201098b6:	faf42c23          	sw	a5,-72(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
201098ba:	fcc42783          	lw	a5,-52(s0)
201098be:	1007f713          	and	a4,a5,256
201098c2:	0ff00793          	li	a5,255
201098c6:	00e7f563          	bgeu	a5,a4,201098d0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x160>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
201098ca:	fb842783          	lw	a5,-72(s0)
201098ce:	a819                	j	201098e4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
201098d0:	fb842703          	lw	a4,-72(s0)
201098d4:	fcc42783          	lw	a5,-52(s0)
201098d8:	03f7f793          	and	a5,a5,63
201098dc:	0785                	add	a5,a5,1
201098de:	0786                	sll	a5,a5,0x1
201098e0:	02f757b3          	divu	a5,a4,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
201098e4:	853e                	mv	a0,a5
201098e6:	40f6                	lw	ra,92(sp)
201098e8:	4466                	lw	s0,88(sp)
201098ea:	6125                	add	sp,sp,96
201098ec:	8082                	ret

201098ee <find_closest_config>:
find_closest_config():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
201098ee:	7139                	add	sp,sp,-64
201098f0:	de06                	sw	ra,60(sp)
201098f2:	dc22                	sw	s0,56(sp)
201098f4:	0080                	add	s0,sp,64
201098f6:	fca42623          	sw	a0,-52(s0)
201098fa:	fcb42423          	sw	a1,-56(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
201098fe:	57fd                	li	a5,-1
20109900:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20109904:	800007b7          	lui	a5,0x80000
20109908:	17fd                	add	a5,a5,-1 # 7fffffff <metal_segment_data_source_start+0x5fef469f>
2010990a:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2010990e:	04300793          	li	a5,67
20109912:	fef42223          	sw	a5,-28(s0)
20109916:	a0b5                	j	20109982 <find_closest_config+0x94>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20109918:	fcc42683          	lw	a3,-52(s0)
2010991c:	fe442783          	lw	a5,-28(s0)
20109920:	00579713          	sll	a4,a5,0x5
20109924:	201047b7          	lui	a5,0x20104
20109928:	01878793          	add	a5,a5,24 # 20104018 <pll_configs>
2010992c:	97ba                	add	a5,a5,a4
2010992e:	85be                	mv	a1,a5
20109930:	8536                	mv	a0,a3
20109932:	d45ff0ef          	jal	20109676 <get_pll_config_freq>
20109936:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2010993a:	fe042703          	lw	a4,-32(s0)
2010993e:	57fd                	li	a5,-1
20109940:	02f70c63          	beq	a4,a5,20109978 <find_closest_config+0x8a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20109944:	fe042703          	lw	a4,-32(s0)
20109948:	fc842783          	lw	a5,-56(s0)
2010994c:	8f1d                	sub	a4,a4,a5
2010994e:	41f75793          	sra	a5,a4,0x1f
20109952:	8f3d                	xor	a4,a4,a5
20109954:	40f707b3          	sub	a5,a4,a5
20109958:	fcf42e23          	sw	a5,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
2010995c:	fdc42703          	lw	a4,-36(s0)
20109960:	fe842783          	lw	a5,-24(s0)
20109964:	00f75a63          	bge	a4,a5,20109978 <find_closest_config+0x8a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20109968:	fe442783          	lw	a5,-28(s0)
2010996c:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20109970:	fdc42783          	lw	a5,-36(s0)
20109974:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20109978:	fe442783          	lw	a5,-28(s0)
2010997c:	17fd                	add	a5,a5,-1
2010997e:	fef42223          	sw	a5,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20109982:	fe442783          	lw	a5,-28(s0)
20109986:	f807d9e3          	bgez	a5,20109918 <find_closest_config+0x2a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
2010998a:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
2010998e:	853e                	mv	a0,a5
20109990:	50f2                	lw	ra,60(sp)
20109992:	5462                	lw	s0,56(sp)
20109994:	6121                	add	sp,sp,64
20109996:	8082                	ret

20109998 <configure_pll>:
configure_pll():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20109998:	7179                	add	sp,sp,-48
2010999a:	d606                	sw	ra,44(sp)
2010999c:	d422                	sw	s0,40(sp)
2010999e:	1800                	add	s0,sp,48
201099a0:	fca42e23          	sw	a0,-36(s0)
201099a4:	fcb42c23          	sw	a1,-40(s0)
201099a8:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
201099ac:	fdc42783          	lw	a5,-36(s0)
201099b0:	439c                	lw	a5,0(a5)
201099b2:	ff87f713          	and	a4,a5,-8
201099b6:	fdc42783          	lw	a5,-36(s0)
201099ba:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
201099bc:	fdc42783          	lw	a5,-36(s0)
201099c0:	4398                	lw	a4,0(a5)
201099c2:	fd442783          	lw	a5,-44(s0)
201099c6:	4b9c                	lw	a5,16(a5)
201099c8:	8b9d                	and	a5,a5,7
201099ca:	8f5d                	or	a4,a4,a5
201099cc:	fdc42783          	lw	a5,-36(s0)
201099d0:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
201099d2:	fdc42783          	lw	a5,-36(s0)
201099d6:	439c                	lw	a5,0(a5)
201099d8:	c0f7f713          	and	a4,a5,-1009
201099dc:	fdc42783          	lw	a5,-36(s0)
201099e0:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
201099e2:	fdc42783          	lw	a5,-36(s0)
201099e6:	4398                	lw	a4,0(a5)
201099e8:	fd442783          	lw	a5,-44(s0)
201099ec:	4bdc                	lw	a5,20(a5)
201099ee:	0792                	sll	a5,a5,0x4
201099f0:	3f07f793          	and	a5,a5,1008
201099f4:	8f5d                	or	a4,a4,a5
201099f6:	fdc42783          	lw	a5,-36(s0)
201099fa:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
201099fc:	fdc42783          	lw	a5,-36(s0)
20109a00:	4398                	lw	a4,0(a5)
20109a02:	77fd                	lui	a5,0xfffff
20109a04:	3ff78793          	add	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc8f>
20109a08:	8f7d                	and	a4,a4,a5
20109a0a:	fdc42783          	lw	a5,-36(s0)
20109a0e:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20109a10:	fdc42783          	lw	a5,-36(s0)
20109a14:	4398                	lw	a4,0(a5)
20109a16:	fd442783          	lw	a5,-44(s0)
20109a1a:	4f9c                	lw	a5,24(a5)
20109a1c:	00a79693          	sll	a3,a5,0xa
20109a20:	6785                	lui	a5,0x1
20109a22:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
20109a26:	8ff5                	and	a5,a5,a3
20109a28:	8f5d                	or	a4,a4,a5
20109a2a:	fdc42783          	lw	a5,-36(s0)
20109a2e:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20109a30:	fd442783          	lw	a5,-44(s0)
20109a34:	4fdc                	lw	a5,28(a5)
20109a36:	0207db63          	bgez	a5,20109a6c <configure_pll+0xd4>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20109a3a:	fd842783          	lw	a5,-40(s0)
20109a3e:	439c                	lw	a5,0(a5)
20109a40:	1007e713          	or	a4,a5,256
20109a44:	fd842783          	lw	a5,-40(s0)
20109a48:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20109a4a:	fd842783          	lw	a5,-40(s0)
20109a4e:	439c                	lw	a5,0(a5)
20109a50:	fc07f713          	and	a4,a5,-64
20109a54:	fd842783          	lw	a5,-40(s0)
20109a58:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20109a5a:	fd842783          	lw	a5,-40(s0)
20109a5e:	439c                	lw	a5,0(a5)
20109a60:	0017e713          	or	a4,a5,1
20109a64:	fd842783          	lw	a5,-40(s0)
20109a68:	c398                	sw	a4,0(a5)
20109a6a:	a82d                	j	20109aa4 <configure_pll+0x10c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20109a6c:	fd842783          	lw	a5,-40(s0)
20109a70:	439c                	lw	a5,0(a5)
20109a72:	eff7f713          	and	a4,a5,-257
20109a76:	fd842783          	lw	a5,-40(s0)
20109a7a:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20109a7c:	fd842783          	lw	a5,-40(s0)
20109a80:	439c                	lw	a5,0(a5)
20109a82:	fc07f713          	and	a4,a5,-64
20109a86:	fd842783          	lw	a5,-40(s0)
20109a8a:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20109a8c:	fd842783          	lw	a5,-40(s0)
20109a90:	4398                	lw	a4,0(a5)
20109a92:	fd442783          	lw	a5,-44(s0)
20109a96:	4fdc                	lw	a5,28(a5)
20109a98:	03f7f793          	and	a5,a5,63
20109a9c:	8f5d                	or	a4,a4,a5
20109a9e:	fd842783          	lw	a5,-40(s0)
20109aa2:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20109aa4:	fdc42783          	lw	a5,-36(s0)
20109aa8:	4398                	lw	a4,0(a5)
20109aaa:	fffc07b7          	lui	a5,0xfffc0
20109aae:	17fd                	add	a5,a5,-1 # fffbffff <metal_segment_heap_target_end+0x7ffbe88f>
20109ab0:	8f7d                	and	a4,a4,a5
20109ab2:	fdc42783          	lw	a5,-36(s0)
20109ab6:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20109ab8:	fe040793          	add	a5,s0,-32
20109abc:	863e                	mv	a2,a5
20109abe:	4585                	li	a1,1
20109ac0:	800017b7          	lui	a5,0x80001
20109ac4:	a8878513          	add	a0,a5,-1400 # 80000a88 <__metal_dt_clint_2000000>
20109ac8:	c96fd0ef          	jal	20106f5e <__metal_driver_riscv_clint0_command_request>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20109acc:	fe042603          	lw	a2,-32(s0)
20109ad0:	fe442683          	lw	a3,-28(s0)
20109ad4:	4511                	li	a0,4
20109ad6:	4581                	li	a1,0
20109ad8:	00a60733          	add	a4,a2,a0
20109adc:	883a                	mv	a6,a4
20109ade:	00c83833          	sltu	a6,a6,a2
20109ae2:	00b687b3          	add	a5,a3,a1
20109ae6:	00f806b3          	add	a3,a6,a5
20109aea:	87b6                	mv	a5,a3
20109aec:	fee42423          	sw	a4,-24(s0)
20109af0:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20109af4:	a819                	j	20109b0a <configure_pll+0x172>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20109af6:	fe040793          	add	a5,s0,-32
20109afa:	863e                	mv	a2,a5
20109afc:	4585                	li	a1,1
20109afe:	800017b7          	lui	a5,0x80001
20109b02:	a8878513          	add	a0,a5,-1400 # 80000a88 <__metal_dt_clint_2000000>
20109b06:	c58fd0ef          	jal	20106f5e <__metal_driver_riscv_clint0_command_request>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20109b0a:	fe042703          	lw	a4,-32(s0)
20109b0e:	fe442783          	lw	a5,-28(s0)
20109b12:	fec42683          	lw	a3,-20(s0)
20109b16:	863e                	mv	a2,a5
20109b18:	00c6ec63          	bltu	a3,a2,20109b30 <configure_pll+0x198>
20109b1c:	fec42683          	lw	a3,-20(s0)
20109b20:	863e                	mv	a2,a5
20109b22:	fcc69ae3          	bne	a3,a2,20109af6 <configure_pll+0x15e>
20109b26:	fe842683          	lw	a3,-24(s0)
20109b2a:	87ba                	mv	a5,a4
20109b2c:	fcf6f5e3          	bgeu	a3,a5,20109af6 <configure_pll+0x15e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20109b30:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20109b32:	fdc42783          	lw	a5,-36(s0)
20109b36:	439c                	lw	a5,0(a5)
20109b38:	fe07dde3          	bgez	a5,20109b32 <configure_pll+0x19a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20109b3c:	0001                	nop
20109b3e:	0001                	nop
20109b40:	50b2                	lw	ra,44(sp)
20109b42:	5422                	lw	s0,40(sp)
20109b44:	6145                	add	sp,sp,48
20109b46:	8082                	ret

20109b48 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20109b48:	715d                	add	sp,sp,-80
20109b4a:	c686                	sw	ra,76(sp)
20109b4c:	c4a2                	sw	s0,72(sp)
20109b4e:	0880                	add	s0,sp,80
20109b50:	faa42e23          	sw	a0,-68(s0)
20109b54:	fab42c23          	sw	a1,-72(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20109b58:	fbc42503          	lw	a0,-68(s0)
20109b5c:	a77ff0ef          	jal	201095d2 <__metal_driver_sifive_fe310_g000_pll_pllref>
20109b60:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20109b64:	fbc42503          	lw	a0,-68(s0)
20109b68:	a51ff0ef          	jal	201095b8 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20109b6c:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20109b70:	fbc42503          	lw	a0,-68(s0)
20109b74:	ab5ff0ef          	jal	20109628 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20109b78:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20109b7c:	fbc42503          	lw	a0,-68(s0)
20109b80:	a83ff0ef          	jal	20109602 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20109b84:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20109b88:	ac7ff0ef          	jal	2010964e <__metal_driver_sifive_fe310_g000_prci_base>
20109b8c:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20109b90:	fdc42703          	lw	a4,-36(s0)
20109b94:	fe442783          	lw	a5,-28(s0)
20109b98:	97ba                	add	a5,a5,a4
20109b9a:	fcf42c23          	sw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20109b9e:	fdc42703          	lw	a4,-36(s0)
20109ba2:	fe042783          	lw	a5,-32(s0)
20109ba6:	97ba                	add	a5,a5,a4
20109ba8:	fcf42a23          	sw	a5,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20109bac:	fd842783          	lw	a5,-40(s0)
20109bb0:	4398                	lw	a4,0(a5)
20109bb2:	67c1                	lui	a5,0x10
20109bb4:	8ff9                	and	a5,a5,a4
20109bb6:	cb91                	beqz	a5,20109bca <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20109bb8:	fd842783          	lw	a5,-40(s0)
20109bbc:	4398                	lw	a4,0(a5)
20109bbe:	77c1                	lui	a5,0xffff0
20109bc0:	17fd                	add	a5,a5,-1 # fffeffff <metal_segment_heap_target_end+0x7ffee88f>
20109bc2:	8f7d                	and	a4,a4,a5
20109bc4:	fd842783          	lw	a5,-40(s0)
20109bc8:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20109bca:	fd842783          	lw	a5,-40(s0)
20109bce:	4398                	lw	a4,0(a5)
20109bd0:	000207b7          	lui	a5,0x20
20109bd4:	8ff9                	and	a5,a5,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20109bd6:	c781                	beqz	a5,20109bde <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20109bd8:	fec42783          	lw	a5,-20(s0)
20109bdc:	a019                	j	20109be2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20109bde:	fe842783          	lw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20109be2:	853e                	mv	a0,a5
20109be4:	362010ef          	jal	2010af46 <metal_clock_get_rate_hz>
20109be8:	fca42823          	sw	a0,-48(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20109bec:	fd042703          	lw	a4,-48(s0)
20109bf0:	87ba                	mv	a5,a4
20109bf2:	0786                	sll	a5,a5,0x1
20109bf4:	97ba                	add	a5,a5,a4
20109bf6:	41f7d713          	sra	a4,a5,0x1f
20109bfa:	8b0d                	and	a4,a4,3
20109bfc:	97ba                	add	a5,a5,a4
20109bfe:	8789                	sra	a5,a5,0x2
20109c00:	873e                	mv	a4,a5
20109c02:	fb842783          	lw	a5,-72(s0)
20109c06:	02e7cb63          	blt	a5,a4,20109c3c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20109c0a:	fd042703          	lw	a4,-48(s0)
20109c0e:	87ba                	mv	a5,a4
20109c10:	078a                	sll	a5,a5,0x2
20109c12:	97ba                	add	a5,a5,a4
20109c14:	41f7d713          	sra	a4,a5,0x1f
20109c18:	8b0d                	and	a4,a4,3
20109c1a:	97ba                	add	a5,a5,a4
20109c1c:	8789                	sra	a5,a5,0x2
20109c1e:	873e                	mv	a4,a5
20109c20:	fb842783          	lw	a5,-72(s0)
20109c24:	00f74c63          	blt	a4,a5,20109c3c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20109c28:	fd842783          	lw	a5,-40(s0)
20109c2c:	4398                	lw	a4,0(a5)
20109c2e:	000407b7          	lui	a5,0x40
20109c32:	8f5d                	or	a4,a4,a5
20109c34:	fd842783          	lw	a5,-40(s0)
20109c38:	c398                	sw	a4,0(a5)
20109c3a:	a881                	j	20109c8a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20109c3c:	fb842583          	lw	a1,-72(s0)
20109c40:	fd042503          	lw	a0,-48(s0)
20109c44:	cabff0ef          	jal	201098ee <find_closest_config>
20109c48:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20109c4c:	fcc42703          	lw	a4,-52(s0)
20109c50:	57fd                	li	a5,-1
20109c52:	02f70363          	beq	a4,a5,20109c78 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20109c56:	fcc42783          	lw	a5,-52(s0)
20109c5a:	00579713          	sll	a4,a5,0x5
20109c5e:	201047b7          	lui	a5,0x20104
20109c62:	01878793          	add	a5,a5,24 # 20104018 <pll_configs>
20109c66:	97ba                	add	a5,a5,a4
20109c68:	863e                	mv	a2,a5
20109c6a:	fd442583          	lw	a1,-44(s0)
20109c6e:	fd842503          	lw	a0,-40(s0)
20109c72:	d27ff0ef          	jal	20109998 <configure_pll>
20109c76:	a811                	j	20109c8a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20109c78:	fd842783          	lw	a5,-40(s0)
20109c7c:	4398                	lw	a4,0(a5)
20109c7e:	000407b7          	lui	a5,0x40
20109c82:	8f5d                	or	a4,a4,a5
20109c84:	fd842783          	lw	a5,-40(s0)
20109c88:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20109c8a:	fd842783          	lw	a5,-40(s0)
20109c8e:	4398                	lw	a4,0(a5)
20109c90:	67c1                	lui	a5,0x10
20109c92:	8f5d                	or	a4,a4,a5
20109c94:	fd842783          	lw	a5,-40(s0)
20109c98:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20109c9a:	fbc42503          	lw	a0,-68(s0)
20109c9e:	ad3ff0ef          	jal	20109770 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20109ca2:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20109ca4:	853e                	mv	a0,a5
20109ca6:	40b6                	lw	ra,76(sp)
20109ca8:	4426                	lw	s0,72(sp)
20109caa:	6161                	add	sp,sp,80
20109cac:	8082                	ret

20109cae <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1229
{
20109cae:	1141                	add	sp,sp,-16
20109cb0:	c622                	sw	s0,12(sp)
20109cb2:	0800                	add	s0,sp,16
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1230
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20109cb4:	100087b7          	lui	a5,0x10008
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1231
}
20109cb8:	853e                	mv	a0,a5
20109cba:	4432                	lw	s0,12(sp)
20109cbc:	0141                	add	sp,sp,16
20109cbe:	8082                	ret

20109cc0 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20109cc0:	7179                	add	sp,sp,-48
20109cc2:	d606                	sw	ra,44(sp)
20109cc4:	d422                	sw	s0,40(sp)
20109cc6:	1800                	add	s0,sp,48
20109cc8:	fca42e23          	sw	a0,-36(s0)
20109ccc:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20109cd0:	3ff9                	jal	20109cae <__metal_driver_sifive_fe310_g000_prci_base>
20109cd2:	87aa                	mv	a5,a0
20109cd4:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20109cd8:	fd842703          	lw	a4,-40(s0)
20109cdc:	fec42783          	lw	a5,-20(s0)
20109ce0:	97ba                	add	a5,a5,a4
20109ce2:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20109ce4:	853e                	mv	a0,a5
20109ce6:	50b2                	lw	ra,44(sp)
20109ce8:	5422                	lw	s0,40(sp)
20109cea:	6145                	add	sp,sp,48
20109cec:	8082                	ret

20109cee <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20109cee:	7179                	add	sp,sp,-48
20109cf0:	d606                	sw	ra,44(sp)
20109cf2:	d422                	sw	s0,40(sp)
20109cf4:	1800                	add	s0,sp,48
20109cf6:	fca42e23          	sw	a0,-36(s0)
20109cfa:	fcb42c23          	sw	a1,-40(s0)
20109cfe:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20109d02:	fadff0ef          	jal	20109cae <__metal_driver_sifive_fe310_g000_prci_base>
20109d06:	87aa                	mv	a5,a0
20109d08:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20109d0c:	fd842703          	lw	a4,-40(s0)
20109d10:	fec42783          	lw	a5,-20(s0)
20109d14:	97ba                	add	a5,a5,a4
20109d16:	873e                	mv	a4,a5
20109d18:	fd442783          	lw	a5,-44(s0)
20109d1c:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20109d1e:	853e                	mv	a0,a5
20109d20:	50b2                	lw	ra,44(sp)
20109d22:	5422                	lw	s0,40(sp)
20109d24:	6145                	add	sp,sp,48
20109d26:	8082                	ret

20109d28 <__metal_driver_sifive_gpio_led_gpio>:
__metal_driver_sifive_gpio_led_gpio():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:581
{
20109d28:	1101                	add	sp,sp,-32
20109d2a:	ce22                	sw	s0,28(sp)
20109d2c:	1000                	add	s0,sp,32
20109d2e:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:582
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
20109d32:	fec42703          	lw	a4,-20(s0)
20109d36:	81c18793          	add	a5,gp,-2020 # 80000a9c <__metal_dt_led_0>
20109d3a:	00f71563          	bne	a4,a5,20109d44 <__metal_driver_sifive_gpio_led_gpio+0x1c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:583
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
20109d3e:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109d42:	a025                	j	20109d6a <__metal_driver_sifive_gpio_led_gpio+0x42>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:585
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
20109d44:	fec42703          	lw	a4,-20(s0)
20109d48:	82018793          	add	a5,gp,-2016 # 80000aa0 <__metal_dt_led_1>
20109d4c:	00f71563          	bne	a4,a5,20109d56 <__metal_driver_sifive_gpio_led_gpio+0x2e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:586
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
20109d50:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109d54:	a819                	j	20109d6a <__metal_driver_sifive_gpio_led_gpio+0x42>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:588
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
20109d56:	fec42703          	lw	a4,-20(s0)
20109d5a:	82418793          	add	a5,gp,-2012 # 80000aa4 <__metal_dt_led_2>
20109d5e:	00f71563          	bne	a4,a5,20109d68 <__metal_driver_sifive_gpio_led_gpio+0x40>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:589
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
20109d62:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109d66:	a011                	j	20109d6a <__metal_driver_sifive_gpio_led_gpio+0x42>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:592
		return NULL;
20109d68:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:594
}
20109d6a:	853e                	mv	a0,a5
20109d6c:	4472                	lw	s0,28(sp)
20109d6e:	6105                	add	sp,sp,32
20109d70:	8082                	ret

20109d72 <__metal_driver_sifive_gpio_led_pin>:
__metal_driver_sifive_gpio_led_pin():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:597
{
20109d72:	1101                	add	sp,sp,-32
20109d74:	ce22                	sw	s0,28(sp)
20109d76:	1000                	add	s0,sp,32
20109d78:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:598
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
20109d7c:	fec42703          	lw	a4,-20(s0)
20109d80:	81c18793          	add	a5,gp,-2020 # 80000a9c <__metal_dt_led_0>
20109d84:	00f71463          	bne	a4,a5,20109d8c <__metal_driver_sifive_gpio_led_pin+0x1a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:599
		return 22;
20109d88:	47d9                	li	a5,22
20109d8a:	a015                	j	20109dae <__metal_driver_sifive_gpio_led_pin+0x3c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:601
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
20109d8c:	fec42703          	lw	a4,-20(s0)
20109d90:	82018793          	add	a5,gp,-2016 # 80000aa0 <__metal_dt_led_1>
20109d94:	00f71463          	bne	a4,a5,20109d9c <__metal_driver_sifive_gpio_led_pin+0x2a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:602
		return 19;
20109d98:	47cd                	li	a5,19
20109d9a:	a811                	j	20109dae <__metal_driver_sifive_gpio_led_pin+0x3c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:604
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
20109d9c:	fec42703          	lw	a4,-20(s0)
20109da0:	82418793          	add	a5,gp,-2012 # 80000aa4 <__metal_dt_led_2>
20109da4:	00f71463          	bne	a4,a5,20109dac <__metal_driver_sifive_gpio_led_pin+0x3a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:605
		return 21;
20109da8:	47d5                	li	a5,21
20109daa:	a011                	j	20109dae <__metal_driver_sifive_gpio_led_pin+0x3c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:608
		return 0;
20109dac:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:610
}
20109dae:	853e                	mv	a0,a5
20109db0:	4472                	lw	s0,28(sp)
20109db2:	6105                	add	sp,sp,32
20109db4:	8082                	ret

20109db6 <__metal_driver_sifive_gpio_led_label>:
__metal_driver_sifive_gpio_led_label():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:613
{
20109db6:	1101                	add	sp,sp,-32
20109db8:	ce22                	sw	s0,28(sp)
20109dba:	1000                	add	s0,sp,32
20109dbc:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:614
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
20109dc0:	fec42703          	lw	a4,-20(s0)
20109dc4:	81c18793          	add	a5,gp,-2020 # 80000a9c <__metal_dt_led_0>
20109dc8:	00f71763          	bne	a4,a5,20109dd6 <__metal_driver_sifive_gpio_led_label+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:615
		return "LD0red";
20109dcc:	201057b7          	lui	a5,0x20105
20109dd0:	8a478793          	add	a5,a5,-1884 # 201048a4 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20109dd4:	a81d                	j	20109e0a <__metal_driver_sifive_gpio_led_label+0x54>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:617
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
20109dd6:	fec42703          	lw	a4,-20(s0)
20109dda:	82018793          	add	a5,gp,-2016 # 80000aa0 <__metal_dt_led_1>
20109dde:	00f71763          	bne	a4,a5,20109dec <__metal_driver_sifive_gpio_led_label+0x36>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:618
		return "LD0green";
20109de2:	201057b7          	lui	a5,0x20105
20109de6:	8ac78793          	add	a5,a5,-1876 # 201048ac <__metal_driver_vtable_sifive_fe310_g000_pll+0x14>
20109dea:	a005                	j	20109e0a <__metal_driver_sifive_gpio_led_label+0x54>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:620
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
20109dec:	fec42703          	lw	a4,-20(s0)
20109df0:	82418793          	add	a5,gp,-2012 # 80000aa4 <__metal_dt_led_2>
20109df4:	00f71763          	bne	a4,a5,20109e02 <__metal_driver_sifive_gpio_led_label+0x4c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:621
		return "LD0blue";
20109df8:	201057b7          	lui	a5,0x20105
20109dfc:	8b878793          	add	a5,a5,-1864 # 201048b8 <__metal_driver_vtable_sifive_fe310_g000_pll+0x20>
20109e00:	a029                	j	20109e0a <__metal_driver_sifive_gpio_led_label+0x54>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:624
		return "";
20109e02:	201057b7          	lui	a5,0x20105
20109e06:	8c078793          	add	a5,a5,-1856 # 201048c0 <__metal_driver_vtable_sifive_fe310_g000_pll+0x28>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:626
}
20109e0a:	853e                	mv	a0,a5
20109e0c:	4472                	lw	s0,28(sp)
20109e0e:	6105                	add	sp,sp,32
20109e10:	8082                	ret

20109e12 <__metal_driver_led_exist>:
__metal_driver_led_exist():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:13
#include <metal/drivers/sifive_gpio-leds.h>
#include <metal/gpio.h>
#include <metal/machine.h>
#include <string.h>

int __metal_driver_led_exist(struct metal_led *led, char *label) {
20109e12:	1101                	add	sp,sp,-32
20109e14:	ce06                	sw	ra,28(sp)
20109e16:	cc22                	sw	s0,24(sp)
20109e18:	1000                	add	s0,sp,32
20109e1a:	fea42623          	sw	a0,-20(s0)
20109e1e:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:14
    if (strcmp(__metal_driver_sifive_gpio_led_label(led), label) == 0) {
20109e22:	fec42503          	lw	a0,-20(s0)
20109e26:	f91ff0ef          	jal	20109db6 <__metal_driver_sifive_gpio_led_label>
20109e2a:	87aa                	mv	a5,a0
20109e2c:	fe842583          	lw	a1,-24(s0)
20109e30:	853e                	mv	a0,a5
20109e32:	774010ef          	jal	2010b5a6 <strcmp>
20109e36:	87aa                	mv	a5,a0
20109e38:	e399                	bnez	a5,20109e3e <__metal_driver_led_exist+0x2c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:15
        return 1;
20109e3a:	4785                	li	a5,1
20109e3c:	a011                	j	20109e40 <__metal_driver_led_exist+0x2e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:17
    }
    return 0;
20109e3e:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:18
}
20109e40:	853e                	mv	a0,a5
20109e42:	40f2                	lw	ra,28(sp)
20109e44:	4462                	lw	s0,24(sp)
20109e46:	6105                	add	sp,sp,32
20109e48:	8082                	ret

20109e4a <__metal_driver_led_enable>:
__metal_driver_led_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:20

void __metal_driver_led_enable(struct metal_led *led) {
20109e4a:	7179                	add	sp,sp,-48
20109e4c:	d606                	sw	ra,44(sp)
20109e4e:	d422                	sw	s0,40(sp)
20109e50:	1800                	add	s0,sp,48
20109e52:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:24
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20109e56:	fdc42503          	lw	a0,-36(s0)
20109e5a:	f19ff0ef          	jal	20109d72 <__metal_driver_sifive_gpio_led_pin>
20109e5e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:25
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20109e62:	fdc42503          	lw	a0,-36(s0)
20109e66:	ec3ff0ef          	jal	20109d28 <__metal_driver_sifive_gpio_led_gpio>
20109e6a:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:27

    if (gpio != NULL) {
20109e6e:	fe842783          	lw	a5,-24(s0)
20109e72:	cf89                	beqz	a5,20109e8c <__metal_driver_led_enable+0x42>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:29
        /* Configure LED as output */
        metal_gpio_disable_input((struct metal_gpio *)gpio, pin);
20109e74:	fec42583          	lw	a1,-20(s0)
20109e78:	fe842503          	lw	a0,-24(s0)
20109e7c:	1a0010ef          	jal	2010b01c <metal_gpio_disable_input>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:30
        metal_gpio_enable_output((struct metal_gpio *)gpio, pin);
20109e80:	fec42583          	lw	a1,-20(s0)
20109e84:	fe842503          	lw	a0,-24(s0)
20109e88:	1d4010ef          	jal	2010b05c <metal_gpio_enable_output>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:32
    }
}
20109e8c:	0001                	nop
20109e8e:	50b2                	lw	ra,44(sp)
20109e90:	5422                	lw	s0,40(sp)
20109e92:	6145                	add	sp,sp,48
20109e94:	8082                	ret

20109e96 <__metal_driver_led_on>:
__metal_driver_led_on():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:34

void __metal_driver_led_on(struct metal_led *led) {
20109e96:	7179                	add	sp,sp,-48
20109e98:	d606                	sw	ra,44(sp)
20109e9a:	d422                	sw	s0,40(sp)
20109e9c:	1800                	add	s0,sp,48
20109e9e:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:38
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20109ea2:	fdc42503          	lw	a0,-36(s0)
20109ea6:	ecdff0ef          	jal	20109d72 <__metal_driver_sifive_gpio_led_pin>
20109eaa:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:39
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20109eae:	fdc42503          	lw	a0,-36(s0)
20109eb2:	e77ff0ef          	jal	20109d28 <__metal_driver_sifive_gpio_led_gpio>
20109eb6:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:41

    if (gpio != NULL) {
20109eba:	fe842783          	lw	a5,-24(s0)
20109ebe:	cb81                	beqz	a5,20109ece <__metal_driver_led_on+0x38>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:42
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 1);
20109ec0:	4605                	li	a2,1
20109ec2:	fec42583          	lw	a1,-20(s0)
20109ec6:	fe842503          	lw	a0,-24(s0)
20109eca:	1d2010ef          	jal	2010b09c <metal_gpio_set_pin>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:44
    }
}
20109ece:	0001                	nop
20109ed0:	50b2                	lw	ra,44(sp)
20109ed2:	5422                	lw	s0,40(sp)
20109ed4:	6145                	add	sp,sp,48
20109ed6:	8082                	ret

20109ed8 <__metal_driver_led_off>:
__metal_driver_led_off():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:46

void __metal_driver_led_off(struct metal_led *led) {
20109ed8:	7179                	add	sp,sp,-48
20109eda:	d606                	sw	ra,44(sp)
20109edc:	d422                	sw	s0,40(sp)
20109ede:	1800                	add	s0,sp,48
20109ee0:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:50
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20109ee4:	fdc42503          	lw	a0,-36(s0)
20109ee8:	e8bff0ef          	jal	20109d72 <__metal_driver_sifive_gpio_led_pin>
20109eec:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:51
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20109ef0:	fdc42503          	lw	a0,-36(s0)
20109ef4:	e35ff0ef          	jal	20109d28 <__metal_driver_sifive_gpio_led_gpio>
20109ef8:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:53

    if (gpio != NULL) {
20109efc:	fe842783          	lw	a5,-24(s0)
20109f00:	cb81                	beqz	a5,20109f10 <__metal_driver_led_off+0x38>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:54
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 0);
20109f02:	4601                	li	a2,0
20109f04:	fec42583          	lw	a1,-20(s0)
20109f08:	fe842503          	lw	a0,-24(s0)
20109f0c:	190010ef          	jal	2010b09c <metal_gpio_set_pin>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:56
    }
}
20109f10:	0001                	nop
20109f12:	50b2                	lw	ra,44(sp)
20109f14:	5422                	lw	s0,40(sp)
20109f16:	6145                	add	sp,sp,48
20109f18:	8082                	ret

20109f1a <__metal_driver_led_toggle>:
__metal_driver_led_toggle():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:58

void __metal_driver_led_toggle(struct metal_led *led) {
20109f1a:	7179                	add	sp,sp,-48
20109f1c:	d606                	sw	ra,44(sp)
20109f1e:	d422                	sw	s0,40(sp)
20109f20:	1800                	add	s0,sp,48
20109f22:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:62
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20109f26:	fdc42503          	lw	a0,-36(s0)
20109f2a:	e49ff0ef          	jal	20109d72 <__metal_driver_sifive_gpio_led_pin>
20109f2e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:63
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20109f32:	fdc42503          	lw	a0,-36(s0)
20109f36:	df3ff0ef          	jal	20109d28 <__metal_driver_sifive_gpio_led_gpio>
20109f3a:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:65

    if (gpio != NULL) {
20109f3e:	fe842783          	lw	a5,-24(s0)
20109f42:	c799                	beqz	a5,20109f50 <__metal_driver_led_toggle+0x36>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:66
        metal_gpio_toggle_pin((struct metal_gpio *)gpio, pin);
20109f44:	fec42583          	lw	a1,-20(s0)
20109f48:	fe842503          	lw	a0,-24(s0)
20109f4c:	1b8010ef          	jal	2010b104 <metal_gpio_toggle_pin>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio-leds.c:68
    }
}
20109f50:	0001                	nop
20109f52:	50b2                	lw	ra,44(sp)
20109f54:	5422                	lw	s0,40(sp)
20109f56:	6145                	add	sp,sp,48
20109f58:	8082                	ret

20109f5a <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:480
{
20109f5a:	1101                	add	sp,sp,-32
20109f5c:	ce22                	sw	s0,28(sp)
20109f5e:	1000                	add	s0,sp,32
20109f60:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:481
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20109f64:	fec42703          	lw	a4,-20(s0)
20109f68:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109f6c:	00f71563          	bne	a4,a5,20109f76 <__metal_driver_sifive_gpio0_base+0x1c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:482
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20109f70:	100127b7          	lui	a5,0x10012
20109f74:	a011                	j	20109f78 <__metal_driver_sifive_gpio0_base+0x1e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:485
		return 0;
20109f76:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:487
}
20109f78:	853e                	mv	a0,a5
20109f7a:	4472                	lw	s0,28(sp)
20109f7c:	6105                	add	sp,sp,32
20109f7e:	8082                	ret

20109f80 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:510
{
20109f80:	1101                	add	sp,sp,-32
20109f82:	ce22                	sw	s0,28(sp)
20109f84:	1000                	add	s0,sp,32
20109f86:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:511
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20109f8a:	fec42703          	lw	a4,-20(s0)
20109f8e:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109f92:	00f71763          	bne	a4,a5,20109fa0 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:512
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20109f96:	800007b7          	lui	a5,0x80000
20109f9a:	46078793          	add	a5,a5,1120 # 80000460 <__metal_dt_interrupt_controller_c000000>
20109f9e:	a011                	j	20109fa2 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:515
		return 0;
20109fa0:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:517
}
20109fa2:	853e                	mv	a0,a5
20109fa4:	4472                	lw	s0,28(sp)
20109fa6:	6105                	add	sp,sp,32
20109fa8:	8082                	ret

20109faa <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:520
{
20109faa:	1101                	add	sp,sp,-32
20109fac:	ce22                	sw	s0,28(sp)
20109fae:	1000                	add	s0,sp,32
20109fb0:	fea42623          	sw	a0,-20(s0)
20109fb4:	feb42423          	sw	a1,-24(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:521
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20109fb8:	fec42703          	lw	a4,-20(s0)
20109fbc:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109fc0:	00f71763          	bne	a4,a5,20109fce <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
20109fc4:	fe842783          	lw	a5,-24(s0)
20109fc8:	e399                	bnez	a5,20109fce <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:522
		return 7;
20109fca:	479d                	li	a5,7
20109fcc:	a269                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20109fce:	fec42703          	lw	a4,-20(s0)
20109fd2:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109fd6:	00f71963          	bne	a4,a5,20109fe8 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
20109fda:	fe842703          	lw	a4,-24(s0)
20109fde:	4785                	li	a5,1
20109fe0:	00f71463          	bne	a4,a5,20109fe8 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:525
		return 8;
20109fe4:	47a1                	li	a5,8
20109fe6:	aa85                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20109fe8:	fec42703          	lw	a4,-20(s0)
20109fec:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
20109ff0:	00f71963          	bne	a4,a5,2010a002 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
20109ff4:	fe842703          	lw	a4,-24(s0)
20109ff8:	4789                	li	a5,2
20109ffa:	00f71463          	bne	a4,a5,2010a002 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:528
		return 9;
20109ffe:	47a5                	li	a5,9
2010a000:	aa99                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2010a002:	fec42703          	lw	a4,-20(s0)
2010a006:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a00a:	00f71963          	bne	a4,a5,2010a01c <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
2010a00e:	fe842703          	lw	a4,-24(s0)
2010a012:	478d                	li	a5,3
2010a014:	00f71463          	bne	a4,a5,2010a01c <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:531
		return 10;
2010a018:	47a9                	li	a5,10
2010a01a:	aa35                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
2010a01c:	fec42703          	lw	a4,-20(s0)
2010a020:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a024:	00f71963          	bne	a4,a5,2010a036 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
2010a028:	fe842703          	lw	a4,-24(s0)
2010a02c:	4791                	li	a5,4
2010a02e:	00f71463          	bne	a4,a5,2010a036 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:534
		return 11;
2010a032:	47ad                	li	a5,11
2010a034:	a20d                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
2010a036:	fec42703          	lw	a4,-20(s0)
2010a03a:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a03e:	00f71963          	bne	a4,a5,2010a050 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
2010a042:	fe842703          	lw	a4,-24(s0)
2010a046:	4795                	li	a5,5
2010a048:	00f71463          	bne	a4,a5,2010a050 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:537
		return 12;
2010a04c:	47b1                	li	a5,12
2010a04e:	a221                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2010a050:	fec42703          	lw	a4,-20(s0)
2010a054:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a058:	00f71963          	bne	a4,a5,2010a06a <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
2010a05c:	fe842703          	lw	a4,-24(s0)
2010a060:	4799                	li	a5,6
2010a062:	00f71463          	bne	a4,a5,2010a06a <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:540
		return 13;
2010a066:	47b5                	li	a5,13
2010a068:	a0fd                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
2010a06a:	fec42703          	lw	a4,-20(s0)
2010a06e:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a072:	00f71963          	bne	a4,a5,2010a084 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
2010a076:	fe842703          	lw	a4,-24(s0)
2010a07a:	479d                	li	a5,7
2010a07c:	00f71463          	bne	a4,a5,2010a084 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:543
		return 14;
2010a080:	47b9                	li	a5,14
2010a082:	a8d1                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
2010a084:	fec42703          	lw	a4,-20(s0)
2010a088:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a08c:	00f71963          	bne	a4,a5,2010a09e <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
2010a090:	fe842703          	lw	a4,-24(s0)
2010a094:	47a1                	li	a5,8
2010a096:	00f71463          	bne	a4,a5,2010a09e <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:546
		return 15;
2010a09a:	47bd                	li	a5,15
2010a09c:	a86d                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
2010a09e:	fec42703          	lw	a4,-20(s0)
2010a0a2:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a0a6:	00f71963          	bne	a4,a5,2010a0b8 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
2010a0aa:	fe842703          	lw	a4,-24(s0)
2010a0ae:	47a5                	li	a5,9
2010a0b0:	00f71463          	bne	a4,a5,2010a0b8 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:549
		return 16;
2010a0b4:	47c1                	li	a5,16
2010a0b6:	a045                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2010a0b8:	fec42703          	lw	a4,-20(s0)
2010a0bc:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a0c0:	00f71963          	bne	a4,a5,2010a0d2 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
2010a0c4:	fe842703          	lw	a4,-24(s0)
2010a0c8:	47a9                	li	a5,10
2010a0ca:	00f71463          	bne	a4,a5,2010a0d2 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:552
		return 17;
2010a0ce:	47c5                	li	a5,17
2010a0d0:	a059                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2010a0d2:	fec42703          	lw	a4,-20(s0)
2010a0d6:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a0da:	00f71963          	bne	a4,a5,2010a0ec <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
2010a0de:	fe842703          	lw	a4,-24(s0)
2010a0e2:	47ad                	li	a5,11
2010a0e4:	00f71463          	bne	a4,a5,2010a0ec <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:555
		return 18;
2010a0e8:	47c9                	li	a5,18
2010a0ea:	a0b5                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
2010a0ec:	fec42703          	lw	a4,-20(s0)
2010a0f0:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a0f4:	00f71963          	bne	a4,a5,2010a106 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
2010a0f8:	fe842703          	lw	a4,-24(s0)
2010a0fc:	47b1                	li	a5,12
2010a0fe:	00f71463          	bne	a4,a5,2010a106 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:558
		return 19;
2010a102:	47cd                	li	a5,19
2010a104:	a889                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
2010a106:	fec42703          	lw	a4,-20(s0)
2010a10a:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a10e:	00f71963          	bne	a4,a5,2010a120 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
2010a112:	fe842703          	lw	a4,-24(s0)
2010a116:	47b5                	li	a5,13
2010a118:	00f71463          	bne	a4,a5,2010a120 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:561
		return 20;
2010a11c:	47d1                	li	a5,20
2010a11e:	a825                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:563
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2010a120:	fec42703          	lw	a4,-20(s0)
2010a124:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a128:	00f71963          	bne	a4,a5,2010a13a <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:563 (discriminator 1)
2010a12c:	fe842703          	lw	a4,-24(s0)
2010a130:	47b9                	li	a5,14
2010a132:	00f71463          	bne	a4,a5,2010a13a <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:564
		return 21;
2010a136:	47d5                	li	a5,21
2010a138:	a839                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:566
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
2010a13a:	fec42703          	lw	a4,-20(s0)
2010a13e:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a142:	00f71963          	bne	a4,a5,2010a154 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:566 (discriminator 1)
2010a146:	fe842703          	lw	a4,-24(s0)
2010a14a:	47bd                	li	a5,15
2010a14c:	00f71463          	bne	a4,a5,2010a154 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:567
		return 22;
2010a150:	47d9                	li	a5,22
2010a152:	a011                	j	2010a156 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:570
		return 0;
2010a154:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:572
}
2010a156:	853e                	mv	a0,a5
2010a158:	4472                	lw	s0,28(sp)
2010a15a:	6105                	add	sp,sp,32
2010a15c:	8082                	ret

2010a15e <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
2010a15e:	7179                	add	sp,sp,-48
2010a160:	d606                	sw	ra,44(sp)
2010a162:	d422                	sw	s0,40(sp)
2010a164:	1800                	add	s0,sp,48
2010a166:	fca42e23          	sw	a0,-36(s0)
2010a16a:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a16e:	fdc42503          	lw	a0,-36(s0)
2010a172:	de9ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a176:	87aa                	mv	a5,a0
2010a178:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE(
2010a17c:	fec42783          	lw	a5,-20(s0)
2010a180:	0791                	add	a5,a5,4
2010a182:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:17
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2010a184:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:16
    __METAL_ACCESS_ONCE(
2010a188:	fec42683          	lw	a3,-20(s0)
2010a18c:	0691                	add	a3,a3,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:17
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2010a18e:	8fd9                	or	a5,a5,a4
2010a190:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
2010a192:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:20
}
2010a194:	853e                	mv	a0,a5
2010a196:	50b2                	lw	ra,44(sp)
2010a198:	5422                	lw	s0,40(sp)
2010a19a:	6145                	add	sp,sp,48
2010a19c:	8082                	ret

2010a19e <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
2010a19e:	7179                	add	sp,sp,-48
2010a1a0:	d606                	sw	ra,44(sp)
2010a1a2:	d422                	sw	s0,40(sp)
2010a1a4:	1800                	add	s0,sp,48
2010a1a6:	fca42e23          	sw	a0,-36(s0)
2010a1aa:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a1ae:	fdc42503          	lw	a0,-36(s0)
2010a1b2:	da9ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a1b6:	87aa                	mv	a5,a0
2010a1b8:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:26

    __METAL_ACCESS_ONCE(
2010a1bc:	fec42783          	lw	a5,-20(s0)
2010a1c0:	0791                	add	a5,a5,4
2010a1c2:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:27
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
2010a1c4:	fd842703          	lw	a4,-40(s0)
2010a1c8:	fff74713          	not	a4,a4
2010a1cc:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:26
    __METAL_ACCESS_ONCE(
2010a1ce:	fec42703          	lw	a4,-20(s0)
2010a1d2:	0711                	add	a4,a4,4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:27
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
2010a1d4:	8ff5                	and	a5,a5,a3
2010a1d6:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
2010a1d8:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:30
}
2010a1da:	853e                	mv	a0,a5
2010a1dc:	50b2                	lw	ra,44(sp)
2010a1de:	5422                	lw	s0,40(sp)
2010a1e0:	6145                	add	sp,sp,48
2010a1e2:	8082                	ret

2010a1e4 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
2010a1e4:	7179                	add	sp,sp,-48
2010a1e6:	d606                	sw	ra,44(sp)
2010a1e8:	d422                	sw	s0,40(sp)
2010a1ea:	1800                	add	s0,sp,48
2010a1ec:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a1f0:	fdc42503          	lw	a0,-36(s0)
2010a1f4:	d67ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a1f8:	87aa                	mv	a5,a0
2010a1fa:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
2010a1fe:	fec42783          	lw	a5,-20(s0)
2010a202:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
2010a204:	853e                	mv	a0,a5
2010a206:	50b2                	lw	ra,44(sp)
2010a208:	5422                	lw	s0,40(sp)
2010a20a:	6145                	add	sp,sp,48
2010a20c:	8082                	ret

2010a20e <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
2010a20e:	7179                	add	sp,sp,-48
2010a210:	d606                	sw	ra,44(sp)
2010a212:	d422                	sw	s0,40(sp)
2010a214:	1800                	add	s0,sp,48
2010a216:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a21a:	fdc42503          	lw	a0,-36(s0)
2010a21e:	d3dff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a222:	87aa                	mv	a5,a0
2010a224:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
2010a228:	fec42783          	lw	a5,-20(s0)
2010a22c:	07b1                	add	a5,a5,12
2010a22e:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
2010a230:	853e                	mv	a0,a5
2010a232:	50b2                	lw	ra,44(sp)
2010a234:	5422                	lw	s0,40(sp)
2010a236:	6145                	add	sp,sp,48
2010a238:	8082                	ret

2010a23a <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
2010a23a:	7179                	add	sp,sp,-48
2010a23c:	d606                	sw	ra,44(sp)
2010a23e:	d422                	sw	s0,40(sp)
2010a240:	1800                	add	s0,sp,48
2010a242:	fca42e23          	sw	a0,-36(s0)
2010a246:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a24a:	fdc42503          	lw	a0,-36(s0)
2010a24e:	d0dff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a252:	87aa                	mv	a5,a0
2010a254:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:50

    __METAL_ACCESS_ONCE(
2010a258:	fec42783          	lw	a5,-20(s0)
2010a25c:	07a1                	add	a5,a5,8
2010a25e:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:51
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
2010a260:	fd842703          	lw	a4,-40(s0)
2010a264:	fff74713          	not	a4,a4
2010a268:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:50
    __METAL_ACCESS_ONCE(
2010a26a:	fec42703          	lw	a4,-20(s0)
2010a26e:	0721                	add	a4,a4,8
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:51
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
2010a270:	8ff5                	and	a5,a5,a3
2010a272:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
2010a274:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:54
}
2010a276:	853e                	mv	a0,a5
2010a278:	50b2                	lw	ra,44(sp)
2010a27a:	5422                	lw	s0,40(sp)
2010a27c:	6145                	add	sp,sp,48
2010a27e:	8082                	ret

2010a280 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2010a280:	7179                	add	sp,sp,-48
2010a282:	d606                	sw	ra,44(sp)
2010a284:	d422                	sw	s0,40(sp)
2010a286:	1800                	add	s0,sp,48
2010a288:	fca42e23          	sw	a0,-36(s0)
2010a28c:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a290:	fdc42503          	lw	a0,-36(s0)
2010a294:	cc7ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a298:	87aa                	mv	a5,a0
2010a29a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:60

    __METAL_ACCESS_ONCE(
2010a29e:	fec42783          	lw	a5,-20(s0)
2010a2a2:	07a1                	add	a5,a5,8
2010a2a4:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:61
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
2010a2a6:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:60
    __METAL_ACCESS_ONCE(
2010a2aa:	fec42683          	lw	a3,-20(s0)
2010a2ae:	06a1                	add	a3,a3,8
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:61
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
2010a2b0:	8fd9                	or	a5,a5,a4
2010a2b2:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
2010a2b4:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:64
}
2010a2b6:	853e                	mv	a0,a5
2010a2b8:	50b2                	lw	ra,44(sp)
2010a2ba:	5422                	lw	s0,40(sp)
2010a2bc:	6145                	add	sp,sp,48
2010a2be:	8082                	ret

2010a2c0 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
2010a2c0:	7179                	add	sp,sp,-48
2010a2c2:	d606                	sw	ra,44(sp)
2010a2c4:	d422                	sw	s0,40(sp)
2010a2c6:	1800                	add	s0,sp,48
2010a2c8:	fca42e23          	sw	a0,-36(s0)
2010a2cc:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a2d0:	fdc42503          	lw	a0,-36(s0)
2010a2d4:	c87ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a2d8:	87aa                	mv	a5,a0
2010a2da:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
2010a2de:	fec42783          	lw	a5,-20(s0)
2010a2e2:	07b1                	add	a5,a5,12
2010a2e4:	4398                	lw	a4,0(a5)
2010a2e6:	fd842783          	lw	a5,-40(s0)
2010a2ea:	fec42683          	lw	a3,-20(s0)
2010a2ee:	06b1                	add	a3,a3,12
2010a2f0:	8fd9                	or	a5,a5,a4
2010a2f2:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
2010a2f4:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:74
}
2010a2f6:	853e                	mv	a0,a5
2010a2f8:	50b2                	lw	ra,44(sp)
2010a2fa:	5422                	lw	s0,40(sp)
2010a2fc:	6145                	add	sp,sp,48
2010a2fe:	8082                	ret

2010a300 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
2010a300:	7179                	add	sp,sp,-48
2010a302:	d606                	sw	ra,44(sp)
2010a304:	d422                	sw	s0,40(sp)
2010a306:	1800                	add	s0,sp,48
2010a308:	fca42e23          	sw	a0,-36(s0)
2010a30c:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a310:	fdc42503          	lw	a0,-36(s0)
2010a314:	c47ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a318:	87aa                	mv	a5,a0
2010a31a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2010a31e:	fec42783          	lw	a5,-20(s0)
2010a322:	07b1                	add	a5,a5,12
2010a324:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
2010a326:	fd842703          	lw	a4,-40(s0)
2010a32a:	fff74713          	not	a4,a4
2010a32e:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2010a330:	fec42703          	lw	a4,-20(s0)
2010a334:	0731                	add	a4,a4,12
2010a336:	8ff5                	and	a5,a5,a3
2010a338:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
2010a33a:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:84
}
2010a33c:	853e                	mv	a0,a5
2010a33e:	50b2                	lw	ra,44(sp)
2010a340:	5422                	lw	s0,40(sp)
2010a342:	6145                	add	sp,sp,48
2010a344:	8082                	ret

2010a346 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
2010a346:	7179                	add	sp,sp,-48
2010a348:	d606                	sw	ra,44(sp)
2010a34a:	d422                	sw	s0,40(sp)
2010a34c:	1800                	add	s0,sp,48
2010a34e:	fca42e23          	sw	a0,-36(s0)
2010a352:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a356:	fdc42503          	lw	a0,-36(s0)
2010a35a:	c01ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a35e:	87aa                	mv	a5,a0
2010a360:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
2010a364:	fec42783          	lw	a5,-20(s0)
2010a368:	07b1                	add	a5,a5,12
2010a36a:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2010a36c:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2010a370:	fec42683          	lw	a3,-20(s0)
2010a374:	06b1                	add	a3,a3,12
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2010a376:	8fb9                	xor	a5,a5,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2010a378:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
2010a37a:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2010a37c:	853e                	mv	a0,a5
2010a37e:	50b2                	lw	ra,44(sp)
2010a380:	5422                	lw	s0,40(sp)
2010a382:	6145                	add	sp,sp,48
2010a384:	8082                	ret

2010a386 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
2010a386:	7179                	add	sp,sp,-48
2010a388:	d606                	sw	ra,44(sp)
2010a38a:	d422                	sw	s0,40(sp)
2010a38c:	1800                	add	s0,sp,48
2010a38e:	fca42e23          	sw	a0,-36(s0)
2010a392:	fcb42c23          	sw	a1,-40(s0)
2010a396:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a39a:	fdc42503          	lw	a0,-36(s0)
2010a39e:	bbdff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a3a2:	87aa                	mv	a5,a0
2010a3a4:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:102

    __METAL_ACCESS_ONCE(
2010a3a8:	fec42783          	lw	a5,-20(s0)
2010a3ac:	03c78793          	add	a5,a5,60
2010a3b0:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:103
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
2010a3b2:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:102
    __METAL_ACCESS_ONCE(
2010a3b6:	fec42683          	lw	a3,-20(s0)
2010a3ba:	03c68693          	add	a3,a3,60
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:103
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
2010a3be:	8fd9                	or	a5,a5,a4
2010a3c0:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
2010a3c2:	fec42783          	lw	a5,-20(s0)
2010a3c6:	03878793          	add	a5,a5,56
2010a3ca:	4398                	lw	a4,0(a5)
2010a3cc:	fd442783          	lw	a5,-44(s0)
2010a3d0:	fec42683          	lw	a3,-20(s0)
2010a3d4:	03868693          	add	a3,a3,56
2010a3d8:	8fd9                	or	a5,a5,a4
2010a3da:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
2010a3dc:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:108
}
2010a3de:	853e                	mv	a0,a5
2010a3e0:	50b2                	lw	ra,44(sp)
2010a3e2:	5422                	lw	s0,40(sp)
2010a3e4:	6145                	add	sp,sp,48
2010a3e6:	8082                	ret

2010a3e8 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2010a3e8:	7179                	add	sp,sp,-48
2010a3ea:	d606                	sw	ra,44(sp)
2010a3ec:	d422                	sw	s0,40(sp)
2010a3ee:	1800                	add	s0,sp,48
2010a3f0:	fca42e23          	sw	a0,-36(s0)
2010a3f4:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a3f8:	fdc42503          	lw	a0,-36(s0)
2010a3fc:	b5fff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a400:	87aa                	mv	a5,a0
2010a402:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2010a406:	fec42783          	lw	a5,-20(s0)
2010a40a:	03878793          	add	a5,a5,56
2010a40e:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
2010a410:	fd842703          	lw	a4,-40(s0)
2010a414:	fff74713          	not	a4,a4
2010a418:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2010a41a:	fec42703          	lw	a4,-20(s0)
2010a41e:	03870713          	add	a4,a4,56
2010a422:	8ff5                	and	a5,a5,a3
2010a424:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
2010a426:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:118
}
2010a428:	853e                	mv	a0,a5
2010a42a:	50b2                	lw	ra,44(sp)
2010a42c:	5422                	lw	s0,40(sp)
2010a42e:	6145                	add	sp,sp,48
2010a430:	8082                	ret

2010a432 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
2010a432:	7179                	add	sp,sp,-48
2010a434:	d606                	sw	ra,44(sp)
2010a436:	d422                	sw	s0,40(sp)
2010a438:	1800                	add	s0,sp,48
2010a43a:	fca42e23          	sw	a0,-36(s0)
2010a43e:	fcb42c23          	sw	a1,-40(s0)
2010a442:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a446:	fdc42503          	lw	a0,-36(s0)
2010a44a:	b11ff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a44e:	87aa                	mv	a5,a0
2010a450:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
2010a454:	fd442703          	lw	a4,-44(s0)
2010a458:	479d                	li	a5,7
2010a45a:	1ce7e963          	bltu	a5,a4,2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
2010a45e:	fd442783          	lw	a5,-44(s0)
2010a462:	00279713          	sll	a4,a5,0x2
2010a466:	201057b7          	lui	a5,0x20105
2010a46a:	8d878793          	add	a5,a5,-1832 # 201048d8 <__metal_driver_vtable_sifive_led+0x14>
2010a46e:	97ba                	add	a5,a5,a4
2010a470:	439c                	lw	a5,0(a5)
2010a472:	8782                	jr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:126
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
2010a474:	fec42783          	lw	a5,-20(s0)
2010a478:	07e1                	add	a5,a5,24
2010a47a:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:127
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
2010a47c:	fd842703          	lw	a4,-40(s0)
2010a480:	fff74713          	not	a4,a4
2010a484:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:126
        __METAL_ACCESS_ONCE(
2010a486:	fec42703          	lw	a4,-20(s0)
2010a48a:	0761                	add	a4,a4,24
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:127
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
2010a48c:	8ff5                	and	a5,a5,a3
2010a48e:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:128
        __METAL_ACCESS_ONCE(
2010a490:	fec42783          	lw	a5,-20(s0)
2010a494:	02078793          	add	a5,a5,32
2010a498:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:129
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
2010a49a:	fd842703          	lw	a4,-40(s0)
2010a49e:	fff74713          	not	a4,a4
2010a4a2:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:128
        __METAL_ACCESS_ONCE(
2010a4a4:	fec42703          	lw	a4,-20(s0)
2010a4a8:	02070713          	add	a4,a4,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:129
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
2010a4ac:	8ff5                	and	a5,a5,a3
2010a4ae:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:130
        __METAL_ACCESS_ONCE(
2010a4b0:	fec42783          	lw	a5,-20(s0)
2010a4b4:	02878793          	add	a5,a5,40
2010a4b8:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:131
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
2010a4ba:	fd842703          	lw	a4,-40(s0)
2010a4be:	fff74713          	not	a4,a4
2010a4c2:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:130
        __METAL_ACCESS_ONCE(
2010a4c4:	fec42703          	lw	a4,-20(s0)
2010a4c8:	02870713          	add	a4,a4,40
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:131
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
2010a4cc:	8ff5                	and	a5,a5,a3
2010a4ce:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:132
        __METAL_ACCESS_ONCE(
2010a4d0:	fec42783          	lw	a5,-20(s0)
2010a4d4:	03078793          	add	a5,a5,48
2010a4d8:	439c                	lw	a5,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:133
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
2010a4da:	fd842703          	lw	a4,-40(s0)
2010a4de:	fff74713          	not	a4,a4
2010a4e2:	86ba                	mv	a3,a4
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:132
        __METAL_ACCESS_ONCE(
2010a4e4:	fec42703          	lw	a4,-20(s0)
2010a4e8:	03070713          	add	a4,a4,48
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:133
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
2010a4ec:	8ff5                	and	a5,a5,a3
2010a4ee:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
2010a4f0:	aa35                	j	2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:136
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
2010a4f2:	fec42783          	lw	a5,-20(s0)
2010a4f6:	07e1                	add	a5,a5,24
2010a4f8:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:137
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010a4fa:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:136
        __METAL_ACCESS_ONCE(
2010a4fe:	fec42683          	lw	a3,-20(s0)
2010a502:	06e1                	add	a3,a3,24
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:137
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010a504:	8fd9                	or	a5,a5,a4
2010a506:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
2010a508:	a215                	j	2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:140
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
2010a50a:	fec42783          	lw	a5,-20(s0)
2010a50e:	02078793          	add	a5,a5,32
2010a512:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:141
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010a514:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:140
        __METAL_ACCESS_ONCE(
2010a518:	fec42683          	lw	a3,-20(s0)
2010a51c:	02068693          	add	a3,a3,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:141
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010a520:	8fd9                	or	a5,a5,a4
2010a522:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
2010a524:	a221                	j	2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:144
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
2010a526:	fec42783          	lw	a5,-20(s0)
2010a52a:	07e1                	add	a5,a5,24
2010a52c:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:145
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010a52e:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:144
        __METAL_ACCESS_ONCE(
2010a532:	fec42683          	lw	a3,-20(s0)
2010a536:	06e1                	add	a3,a3,24
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:145
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010a538:	8fd9                	or	a5,a5,a4
2010a53a:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:146
        __METAL_ACCESS_ONCE(
2010a53c:	fec42783          	lw	a5,-20(s0)
2010a540:	02078793          	add	a5,a5,32
2010a544:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:147
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010a546:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:146
        __METAL_ACCESS_ONCE(
2010a54a:	fec42683          	lw	a3,-20(s0)
2010a54e:	02068693          	add	a3,a3,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:147
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010a552:	8fd9                	or	a5,a5,a4
2010a554:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
2010a556:	a8d9                	j	2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:150
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
2010a558:	fec42783          	lw	a5,-20(s0)
2010a55c:	02878793          	add	a5,a5,40
2010a560:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:151
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010a562:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:150
        __METAL_ACCESS_ONCE(
2010a566:	fec42683          	lw	a3,-20(s0)
2010a56a:	02868693          	add	a3,a3,40
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:151
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010a56e:	8fd9                	or	a5,a5,a4
2010a570:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
2010a572:	a86d                	j	2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:154
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
2010a574:	fec42783          	lw	a5,-20(s0)
2010a578:	03078793          	add	a5,a5,48
2010a57c:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:155
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010a57e:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:154
        __METAL_ACCESS_ONCE(
2010a582:	fec42683          	lw	a3,-20(s0)
2010a586:	03068693          	add	a3,a3,48
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:155
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010a58a:	8fd9                	or	a5,a5,a4
2010a58c:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
2010a58e:	a879                	j	2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:158
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
2010a590:	fec42783          	lw	a5,-20(s0)
2010a594:	02878793          	add	a5,a5,40
2010a598:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:159
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010a59a:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:158
        __METAL_ACCESS_ONCE(
2010a59e:	fec42683          	lw	a3,-20(s0)
2010a5a2:	02868693          	add	a3,a3,40
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:159
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010a5a6:	8fd9                	or	a5,a5,a4
2010a5a8:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:160
        __METAL_ACCESS_ONCE(
2010a5aa:	fec42783          	lw	a5,-20(s0)
2010a5ae:	03078793          	add	a5,a5,48
2010a5b2:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:161
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010a5b4:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:160
        __METAL_ACCESS_ONCE(
2010a5b8:	fec42683          	lw	a3,-20(s0)
2010a5bc:	03068693          	add	a3,a3,48
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:161
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010a5c0:	8fd9                	or	a5,a5,a4
2010a5c2:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
2010a5c4:	a0a5                	j	2010a62c <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:164
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
2010a5c6:	fec42783          	lw	a5,-20(s0)
2010a5ca:	07e1                	add	a5,a5,24
2010a5cc:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:165
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010a5ce:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:164
        __METAL_ACCESS_ONCE(
2010a5d2:	fec42683          	lw	a3,-20(s0)
2010a5d6:	06e1                	add	a3,a3,24
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:165
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010a5d8:	8fd9                	or	a5,a5,a4
2010a5da:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:166
        __METAL_ACCESS_ONCE(
2010a5dc:	fec42783          	lw	a5,-20(s0)
2010a5e0:	02078793          	add	a5,a5,32
2010a5e4:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:167
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010a5e6:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:166
        __METAL_ACCESS_ONCE(
2010a5ea:	fec42683          	lw	a3,-20(s0)
2010a5ee:	02068693          	add	a3,a3,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:167
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010a5f2:	8fd9                	or	a5,a5,a4
2010a5f4:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:168
        __METAL_ACCESS_ONCE(
2010a5f6:	fec42783          	lw	a5,-20(s0)
2010a5fa:	02878793          	add	a5,a5,40
2010a5fe:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:169
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010a600:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:168
        __METAL_ACCESS_ONCE(
2010a604:	fec42683          	lw	a3,-20(s0)
2010a608:	02868693          	add	a3,a3,40
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:169
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010a60c:	8fd9                	or	a5,a5,a4
2010a60e:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:170
        __METAL_ACCESS_ONCE(
2010a610:	fec42783          	lw	a5,-20(s0)
2010a614:	03078793          	add	a5,a5,48
2010a618:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:171
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010a61a:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:170
        __METAL_ACCESS_ONCE(
2010a61e:	fec42683          	lw	a3,-20(s0)
2010a622:	03068693          	add	a3,a3,48
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:171
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010a626:	8fd9                	or	a5,a5,a4
2010a628:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
2010a62a:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
2010a62c:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:175
}
2010a62e:	853e                	mv	a0,a5
2010a630:	50b2                	lw	ra,44(sp)
2010a632:	5422                	lw	s0,40(sp)
2010a634:	6145                	add	sp,sp,48
2010a636:	8082                	ret

2010a638 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
2010a638:	7179                	add	sp,sp,-48
2010a63a:	d606                	sw	ra,44(sp)
2010a63c:	d422                	sw	s0,40(sp)
2010a63e:	1800                	add	s0,sp,48
2010a640:	fca42e23          	sw	a0,-36(s0)
2010a644:	fcb42c23          	sw	a1,-40(s0)
2010a648:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010a64c:	fdc42503          	lw	a0,-36(s0)
2010a650:	90bff0ef          	jal	20109f5a <__metal_driver_sifive_gpio0_base>
2010a654:	87aa                	mv	a5,a0
2010a656:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
2010a65a:	fd442703          	lw	a4,-44(s0)
2010a65e:	479d                	li	a5,7
2010a660:	14e7ea63          	bltu	a5,a4,2010a7b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
2010a664:	fd442783          	lw	a5,-44(s0)
2010a668:	00279713          	sll	a4,a5,0x2
2010a66c:	201057b7          	lui	a5,0x20105
2010a670:	8f878793          	add	a5,a5,-1800 # 201048f8 <__metal_driver_vtable_sifive_led+0x34>
2010a674:	97ba                	add	a5,a5,a4
2010a676:	439c                	lw	a5,0(a5)
2010a678:	8782                	jr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:183
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
2010a67a:	fec42783          	lw	a5,-20(s0)
2010a67e:	07f1                	add	a5,a5,28
2010a680:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:184
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010a682:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:183
        __METAL_ACCESS_ONCE(
2010a686:	fec42683          	lw	a3,-20(s0)
2010a68a:	06f1                	add	a3,a3,28
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:184
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010a68c:	8fd9                	or	a5,a5,a4
2010a68e:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
2010a690:	a215                	j	2010a7b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:187
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
2010a692:	fec42783          	lw	a5,-20(s0)
2010a696:	02478793          	add	a5,a5,36
2010a69a:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:188
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010a69c:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:187
        __METAL_ACCESS_ONCE(
2010a6a0:	fec42683          	lw	a3,-20(s0)
2010a6a4:	02468693          	add	a3,a3,36
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:188
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010a6a8:	8fd9                	or	a5,a5,a4
2010a6aa:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
2010a6ac:	a221                	j	2010a7b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:191
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
2010a6ae:	fec42783          	lw	a5,-20(s0)
2010a6b2:	07f1                	add	a5,a5,28
2010a6b4:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:192
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010a6b6:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:191
        __METAL_ACCESS_ONCE(
2010a6ba:	fec42683          	lw	a3,-20(s0)
2010a6be:	06f1                	add	a3,a3,28
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:192
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010a6c0:	8fd9                	or	a5,a5,a4
2010a6c2:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:193
        __METAL_ACCESS_ONCE(
2010a6c4:	fec42783          	lw	a5,-20(s0)
2010a6c8:	02478793          	add	a5,a5,36
2010a6cc:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:194
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010a6ce:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:193
        __METAL_ACCESS_ONCE(
2010a6d2:	fec42683          	lw	a3,-20(s0)
2010a6d6:	02468693          	add	a3,a3,36
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:194
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010a6da:	8fd9                	or	a5,a5,a4
2010a6dc:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
2010a6de:	a8d9                	j	2010a7b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:197
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
2010a6e0:	fec42783          	lw	a5,-20(s0)
2010a6e4:	02c78793          	add	a5,a5,44
2010a6e8:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:198
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010a6ea:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:197
        __METAL_ACCESS_ONCE(
2010a6ee:	fec42683          	lw	a3,-20(s0)
2010a6f2:	02c68693          	add	a3,a3,44
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:198
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010a6f6:	8fd9                	or	a5,a5,a4
2010a6f8:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
2010a6fa:	a86d                	j	2010a7b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:201
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
2010a6fc:	fec42783          	lw	a5,-20(s0)
2010a700:	03478793          	add	a5,a5,52
2010a704:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:202
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010a706:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:201
        __METAL_ACCESS_ONCE(
2010a70a:	fec42683          	lw	a3,-20(s0)
2010a70e:	03468693          	add	a3,a3,52
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:202
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010a712:	8fd9                	or	a5,a5,a4
2010a714:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
2010a716:	a879                	j	2010a7b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:205
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
2010a718:	fec42783          	lw	a5,-20(s0)
2010a71c:	02c78793          	add	a5,a5,44
2010a720:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:206
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010a722:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:205
        __METAL_ACCESS_ONCE(
2010a726:	fec42683          	lw	a3,-20(s0)
2010a72a:	02c68693          	add	a3,a3,44
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:206
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010a72e:	8fd9                	or	a5,a5,a4
2010a730:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:207
        __METAL_ACCESS_ONCE(
2010a732:	fec42783          	lw	a5,-20(s0)
2010a736:	03478793          	add	a5,a5,52
2010a73a:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:208
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010a73c:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:207
        __METAL_ACCESS_ONCE(
2010a740:	fec42683          	lw	a3,-20(s0)
2010a744:	03468693          	add	a3,a3,52
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:208
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010a748:	8fd9                	or	a5,a5,a4
2010a74a:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2010a74c:	a0a5                	j	2010a7b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:211
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
2010a74e:	fec42783          	lw	a5,-20(s0)
2010a752:	07f1                	add	a5,a5,28
2010a754:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:212
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010a756:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:211
        __METAL_ACCESS_ONCE(
2010a75a:	fec42683          	lw	a3,-20(s0)
2010a75e:	06f1                	add	a3,a3,28
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:212
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010a760:	8fd9                	or	a5,a5,a4
2010a762:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:213
        __METAL_ACCESS_ONCE(
2010a764:	fec42783          	lw	a5,-20(s0)
2010a768:	02478793          	add	a5,a5,36
2010a76c:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:214
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010a76e:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:213
        __METAL_ACCESS_ONCE(
2010a772:	fec42683          	lw	a3,-20(s0)
2010a776:	02468693          	add	a3,a3,36
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:214
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010a77a:	8fd9                	or	a5,a5,a4
2010a77c:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:215
        __METAL_ACCESS_ONCE(
2010a77e:	fec42783          	lw	a5,-20(s0)
2010a782:	02c78793          	add	a5,a5,44
2010a786:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:216
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010a788:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:215
        __METAL_ACCESS_ONCE(
2010a78c:	fec42683          	lw	a3,-20(s0)
2010a790:	02c68693          	add	a3,a3,44
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:216
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010a794:	8fd9                	or	a5,a5,a4
2010a796:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:217
        __METAL_ACCESS_ONCE(
2010a798:	fec42783          	lw	a5,-20(s0)
2010a79c:	03478793          	add	a5,a5,52
2010a7a0:	4398                	lw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:218
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010a7a2:	fd842783          	lw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:217
        __METAL_ACCESS_ONCE(
2010a7a6:	fec42683          	lw	a3,-20(s0)
2010a7aa:	03468693          	add	a3,a3,52
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:218
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010a7ae:	8fd9                	or	a5,a5,a4
2010a7b0:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
2010a7b2:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
2010a7b4:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:222
}
2010a7b6:	853e                	mv	a0,a5
2010a7b8:	50b2                	lw	ra,44(sp)
2010a7ba:	5422                	lw	s0,40(sp)
2010a7bc:	6145                	add	sp,sp,48
2010a7be:	8082                	ret

2010a7c0 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
2010a7c0:	1101                	add	sp,sp,-32
2010a7c2:	ce06                	sw	ra,28(sp)
2010a7c4:	cc22                	sw	s0,24(sp)
2010a7c6:	1000                	add	s0,sp,32
2010a7c8:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
2010a7cc:	fec42503          	lw	a0,-20(s0)
2010a7d0:	fb0ff0ef          	jal	20109f80 <__metal_driver_sifive_gpio0_interrupt_parent>
2010a7d4:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:227
}
2010a7d6:	853e                	mv	a0,a5
2010a7d8:	40f2                	lw	ra,28(sp)
2010a7da:	4462                	lw	s0,24(sp)
2010a7dc:	6105                	add	sp,sp,32
2010a7de:	8082                	ret

2010a7e0 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
2010a7e0:	7179                	add	sp,sp,-48
2010a7e2:	d606                	sw	ra,44(sp)
2010a7e4:	d422                	sw	s0,40(sp)
2010a7e6:	1800                	add	s0,sp,48
2010a7e8:	fca42e23          	sw	a0,-36(s0)
2010a7ec:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
2010a7f0:	fd842583          	lw	a1,-40(s0)
2010a7f4:	fdc42503          	lw	a0,-36(s0)
2010a7f8:	fb2ff0ef          	jal	20109faa <__metal_driver_sifive_gpio0_interrupt_lines>
2010a7fc:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
2010a800:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_gpio0.c:233
}
2010a804:	853e                	mv	a0,a5
2010a806:	50b2                	lw	ra,44(sp)
2010a808:	5422                	lw	s0,40(sp)
2010a80a:	6145                	add	sp,sp,48
2010a80c:	8082                	ret

2010a80e <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:958
{
2010a80e:	1101                	add	sp,sp,-32
2010a810:	ce22                	sw	s0,28(sp)
2010a812:	1000                	add	s0,sp,32
2010a814:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010a818:	fec42703          	lw	a4,-20(s0)
2010a81c:	800017b7          	lui	a5,0x80001
2010a820:	a3878793          	add	a5,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010a824:	00f71563          	bne	a4,a5,2010a82e <__metal_driver_sifive_uart0_control_base+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:960
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
2010a828:	100137b7          	lui	a5,0x10013
2010a82c:	a011                	j	2010a830 <__metal_driver_sifive_uart0_control_base+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:963
		return 0;
2010a82e:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:965
}
2010a830:	853e                	mv	a0,a5
2010a832:	4472                	lw	s0,28(sp)
2010a834:	6105                	add	sp,sp,32
2010a836:	8082                	ret

2010a838 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:988
{
2010a838:	1101                	add	sp,sp,-32
2010a83a:	ce22                	sw	s0,28(sp)
2010a83c:	1000                	add	s0,sp,32
2010a83e:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:989
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010a842:	fec42703          	lw	a4,-20(s0)
2010a846:	800017b7          	lui	a5,0x80001
2010a84a:	a3878793          	add	a5,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010a84e:	00f71763          	bne	a4,a5,2010a85c <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:990
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
2010a852:	800007b7          	lui	a5,0x80000
2010a856:	46078793          	add	a5,a5,1120 # 80000460 <__metal_dt_interrupt_controller_c000000>
2010a85a:	a011                	j	2010a85e <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:993
		return 0;
2010a85c:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:995
}
2010a85e:	853e                	mv	a0,a5
2010a860:	4472                	lw	s0,28(sp)
2010a862:	6105                	add	sp,sp,32
2010a864:	8082                	ret

2010a866 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:998
{
2010a866:	1101                	add	sp,sp,-32
2010a868:	ce22                	sw	s0,28(sp)
2010a86a:	1000                	add	s0,sp,32
2010a86c:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:999
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010a870:	fec42703          	lw	a4,-20(s0)
2010a874:	800017b7          	lui	a5,0x80001
2010a878:	a3878793          	add	a5,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010a87c:	00f71463          	bne	a4,a5,2010a884 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1000
		return 5;
2010a880:	4795                	li	a5,5
2010a882:	a011                	j	2010a886 <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1003
		return 0;
2010a884:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1005
}
2010a886:	853e                	mv	a0,a5
2010a888:	4472                	lw	s0,28(sp)
2010a88a:	6105                	add	sp,sp,32
2010a88c:	8082                	ret

2010a88e <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1008
{
2010a88e:	1101                	add	sp,sp,-32
2010a890:	ce22                	sw	s0,28(sp)
2010a892:	1000                	add	s0,sp,32
2010a894:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1009
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010a898:	fec42703          	lw	a4,-20(s0)
2010a89c:	800017b7          	lui	a5,0x80001
2010a8a0:	a3878793          	add	a5,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010a8a4:	00f71763          	bne	a4,a5,2010a8b2 <__metal_driver_sifive_uart0_clock+0x24>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1010
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
2010a8a8:	800017b7          	lui	a5,0x80001
2010a8ac:	a7078793          	add	a5,a5,-1424 # 80000a70 <__metal_dt_clock_4>
2010a8b0:	a011                	j	2010a8b4 <__metal_driver_sifive_uart0_clock+0x26>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1013
		return 0;
2010a8b2:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1015
}
2010a8b4:	853e                	mv	a0,a5
2010a8b6:	4472                	lw	s0,28(sp)
2010a8b8:	6105                	add	sp,sp,32
2010a8ba:	8082                	ret

2010a8bc <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1018
{
2010a8bc:	1101                	add	sp,sp,-32
2010a8be:	ce22                	sw	s0,28(sp)
2010a8c0:	1000                	add	s0,sp,32
2010a8c2:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1019
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010a8c6:	fec42703          	lw	a4,-20(s0)
2010a8ca:	800017b7          	lui	a5,0x80001
2010a8ce:	a3878793          	add	a5,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010a8d2:	00f71563          	bne	a4,a5,2010a8dc <__metal_driver_sifive_uart0_pinmux+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1020
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
2010a8d6:	81818793          	add	a5,gp,-2024 # 80000a98 <__metal_dt_gpio_10012000>
2010a8da:	a011                	j	2010a8de <__metal_driver_sifive_uart0_pinmux+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1023
		return 0;
2010a8dc:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1025
}
2010a8de:	853e                	mv	a0,a5
2010a8e0:	4472                	lw	s0,28(sp)
2010a8e2:	6105                	add	sp,sp,32
2010a8e4:	8082                	ret

2010a8e6 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1028
{
2010a8e6:	1101                	add	sp,sp,-32
2010a8e8:	ce22                	sw	s0,28(sp)
2010a8ea:	1000                	add	s0,sp,32
2010a8ec:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1029
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010a8f0:	fec42703          	lw	a4,-20(s0)
2010a8f4:	800017b7          	lui	a5,0x80001
2010a8f8:	a3878793          	add	a5,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010a8fc:	00f71463          	bne	a4,a5,2010a904 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1030
		return 0;
2010a900:	4781                	li	a5,0
2010a902:	a011                	j	2010a906 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1033
		return 0;
2010a904:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1035
}
2010a906:	853e                	mv	a0,a5
2010a908:	4472                	lw	s0,28(sp)
2010a90a:	6105                	add	sp,sp,32
2010a90c:	8082                	ret

2010a90e <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1038
{
2010a90e:	1101                	add	sp,sp,-32
2010a910:	ce22                	sw	s0,28(sp)
2010a912:	1000                	add	s0,sp,32
2010a914:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1039
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010a918:	fec42703          	lw	a4,-20(s0)
2010a91c:	800017b7          	lui	a5,0x80001
2010a920:	a3878793          	add	a5,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010a924:	00f71563          	bne	a4,a5,2010a92e <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1040
		return 196608;
2010a928:	000307b7          	lui	a5,0x30
2010a92c:	a011                	j	2010a930 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1043
		return 0;
2010a92e:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:1045
}
2010a930:	853e                	mv	a0,a5
2010a932:	4472                	lw	s0,28(sp)
2010a934:	6105                	add	sp,sp,32
2010a936:	8082                	ret

2010a938 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
2010a938:	1101                	add	sp,sp,-32
2010a93a:	ce06                	sw	ra,28(sp)
2010a93c:	cc22                	sw	s0,24(sp)
2010a93e:	1000                	add	s0,sp,32
2010a940:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
2010a944:	fec42503          	lw	a0,-20(s0)
2010a948:	ef1ff0ef          	jal	2010a838 <__metal_driver_sifive_uart0_interrupt_parent>
2010a94c:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:39
}
2010a94e:	853e                	mv	a0,a5
2010a950:	40f2                	lw	ra,28(sp)
2010a952:	4462                	lw	s0,24(sp)
2010a954:	6105                	add	sp,sp,32
2010a956:	8082                	ret

2010a958 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
2010a958:	1101                	add	sp,sp,-32
2010a95a:	ce06                	sw	ra,28(sp)
2010a95c:	cc22                	sw	s0,24(sp)
2010a95e:	1000                	add	s0,sp,32
2010a960:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
2010a964:	fec42503          	lw	a0,-20(s0)
2010a968:	effff0ef          	jal	2010a866 <__metal_driver_sifive_uart0_interrupt_line>
2010a96c:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:43
}
2010a96e:	853e                	mv	a0,a5
2010a970:	40f2                	lw	ra,28(sp)
2010a972:	4462                	lw	s0,24(sp)
2010a974:	6105                	add	sp,sp,32
2010a976:	8082                	ret

2010a978 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
2010a978:	7179                	add	sp,sp,-48
2010a97a:	d606                	sw	ra,44(sp)
2010a97c:	d422                	sw	s0,40(sp)
2010a97e:	1800                	add	s0,sp,48
2010a980:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010a984:	fdc42503          	lw	a0,-36(s0)
2010a988:	e87ff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010a98c:	87aa                	mv	a5,a0
2010a98e:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
2010a992:	fec42783          	lw	a5,-20(s0)
2010a996:	07c1                	add	a5,a5,16 # 30010 <__heap_size+0x2f810>
2010a998:	439c                	lw	a5,0(a5)
2010a99a:	fec42703          	lw	a4,-20(s0)
2010a99e:	0741                	add	a4,a4,16
2010a9a0:	0017e793          	or	a5,a5,1
2010a9a4:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
2010a9a6:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:50
}
2010a9a8:	853e                	mv	a0,a5
2010a9aa:	50b2                	lw	ra,44(sp)
2010a9ac:	5422                	lw	s0,40(sp)
2010a9ae:	6145                	add	sp,sp,48
2010a9b0:	8082                	ret

2010a9b2 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
2010a9b2:	7179                	add	sp,sp,-48
2010a9b4:	d606                	sw	ra,44(sp)
2010a9b6:	d422                	sw	s0,40(sp)
2010a9b8:	1800                	add	s0,sp,48
2010a9ba:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010a9be:	fdc42503          	lw	a0,-36(s0)
2010a9c2:	e4dff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010a9c6:	87aa                	mv	a5,a0
2010a9c8:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
2010a9cc:	fec42783          	lw	a5,-20(s0)
2010a9d0:	07c1                	add	a5,a5,16
2010a9d2:	439c                	lw	a5,0(a5)
2010a9d4:	fec42703          	lw	a4,-20(s0)
2010a9d8:	0741                	add	a4,a4,16
2010a9da:	9bf9                	and	a5,a5,-2
2010a9dc:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
2010a9de:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:57
}
2010a9e0:	853e                	mv	a0,a5
2010a9e2:	50b2                	lw	ra,44(sp)
2010a9e4:	5422                	lw	s0,40(sp)
2010a9e6:	6145                	add	sp,sp,48
2010a9e8:	8082                	ret

2010a9ea <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
2010a9ea:	7179                	add	sp,sp,-48
2010a9ec:	d606                	sw	ra,44(sp)
2010a9ee:	d422                	sw	s0,40(sp)
2010a9f0:	1800                	add	s0,sp,48
2010a9f2:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010a9f6:	fdc42503          	lw	a0,-36(s0)
2010a9fa:	e15ff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010a9fe:	87aa                	mv	a5,a0
2010aa00:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
2010aa04:	fec42783          	lw	a5,-20(s0)
2010aa08:	07c1                	add	a5,a5,16
2010aa0a:	439c                	lw	a5,0(a5)
2010aa0c:	fec42703          	lw	a4,-20(s0)
2010aa10:	0741                	add	a4,a4,16
2010aa12:	0027e793          	or	a5,a5,2
2010aa16:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
2010aa18:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:64
}
2010aa1a:	853e                	mv	a0,a5
2010aa1c:	50b2                	lw	ra,44(sp)
2010aa1e:	5422                	lw	s0,40(sp)
2010aa20:	6145                	add	sp,sp,48
2010aa22:	8082                	ret

2010aa24 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
2010aa24:	7179                	add	sp,sp,-48
2010aa26:	d606                	sw	ra,44(sp)
2010aa28:	d422                	sw	s0,40(sp)
2010aa2a:	1800                	add	s0,sp,48
2010aa2c:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010aa30:	fdc42503          	lw	a0,-36(s0)
2010aa34:	ddbff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010aa38:	87aa                	mv	a5,a0
2010aa3a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
2010aa3e:	fec42783          	lw	a5,-20(s0)
2010aa42:	07c1                	add	a5,a5,16
2010aa44:	439c                	lw	a5,0(a5)
2010aa46:	fec42703          	lw	a4,-20(s0)
2010aa4a:	0741                	add	a4,a4,16
2010aa4c:	9bf5                	and	a5,a5,-3
2010aa4e:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
2010aa50:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:71
}
2010aa52:	853e                	mv	a0,a5
2010aa54:	50b2                	lw	ra,44(sp)
2010aa56:	5422                	lw	s0,40(sp)
2010aa58:	6145                	add	sp,sp,48
2010aa5a:	8082                	ret

2010aa5c <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
2010aa5c:	7179                	add	sp,sp,-48
2010aa5e:	d606                	sw	ra,44(sp)
2010aa60:	d422                	sw	s0,40(sp)
2010aa62:	1800                	add	s0,sp,48
2010aa64:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010aa68:	fdc42503          	lw	a0,-36(s0)
2010aa6c:	da3ff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010aa70:	87aa                	mv	a5,a0
2010aa72:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2010aa76:	fec42783          	lw	a5,-20(s0)
2010aa7a:	439c                	lw	a5,0(a5)
2010aa7c:	83fd                	srl	a5,a5,0x1f
2010aa7e:	0ff7f793          	zext.b	a5,a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:77
}
2010aa82:	853e                	mv	a0,a5
2010aa84:	50b2                	lw	ra,44(sp)
2010aa86:	5422                	lw	s0,40(sp)
2010aa88:	6145                	add	sp,sp,48
2010aa8a:	8082                	ret

2010aa8c <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2010aa8c:	7179                	add	sp,sp,-48
2010aa8e:	d606                	sw	ra,44(sp)
2010aa90:	d422                	sw	s0,40(sp)
2010aa92:	1800                	add	s0,sp,48
2010aa94:	fca42e23          	sw	a0,-36(s0)
2010aa98:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010aa9c:	fdc42503          	lw	a0,-36(s0)
2010aaa0:	d6fff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010aaa4:	87aa                	mv	a5,a0
2010aaa6:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
2010aaaa:	fec42783          	lw	a5,-20(s0)
2010aaae:	07a1                	add	a5,a5,8
2010aab0:	4398                	lw	a4,0(a5)
2010aab2:	fd842783          	lw	a5,-40(s0)
2010aab6:	01079693          	sll	a3,a5,0x10
2010aaba:	000707b7          	lui	a5,0x70
2010aabe:	8ff5                	and	a5,a5,a3
2010aac0:	fec42683          	lw	a3,-20(s0)
2010aac4:	06a1                	add	a3,a3,8
2010aac6:	8fd9                	or	a5,a5,a4
2010aac8:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
2010aaca:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:85
}
2010aacc:	853e                	mv	a0,a5
2010aace:	50b2                	lw	ra,44(sp)
2010aad0:	5422                	lw	s0,40(sp)
2010aad2:	6145                	add	sp,sp,48
2010aad4:	8082                	ret

2010aad6 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
2010aad6:	7179                	add	sp,sp,-48
2010aad8:	d606                	sw	ra,44(sp)
2010aada:	d422                	sw	s0,40(sp)
2010aadc:	1800                	add	s0,sp,48
2010aade:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010aae2:	fdc42503          	lw	a0,-36(s0)
2010aae6:	d29ff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010aaea:	87aa                	mv	a5,a0
2010aaec:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2010aaf0:	fec42783          	lw	a5,-20(s0)
2010aaf4:	07a1                	add	a5,a5,8 # 70008 <__heap_size+0x6f808>
2010aaf6:	439c                	lw	a5,0(a5)
2010aaf8:	83c1                	srl	a5,a5,0x10
2010aafa:	8b9d                	and	a5,a5,7
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:91
}
2010aafc:	853e                	mv	a0,a5
2010aafe:	50b2                	lw	ra,44(sp)
2010ab00:	5422                	lw	s0,40(sp)
2010ab02:	6145                	add	sp,sp,48
2010ab04:	8082                	ret

2010ab06 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2010ab06:	7179                	add	sp,sp,-48
2010ab08:	d606                	sw	ra,44(sp)
2010ab0a:	d422                	sw	s0,40(sp)
2010ab0c:	1800                	add	s0,sp,48
2010ab0e:	fca42e23          	sw	a0,-36(s0)
2010ab12:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010ab16:	fdc42503          	lw	a0,-36(s0)
2010ab1a:	cf5ff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010ab1e:	87aa                	mv	a5,a0
2010ab20:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
2010ab24:	fec42783          	lw	a5,-20(s0)
2010ab28:	07b1                	add	a5,a5,12
2010ab2a:	4398                	lw	a4,0(a5)
2010ab2c:	fd842783          	lw	a5,-40(s0)
2010ab30:	01079693          	sll	a3,a5,0x10
2010ab34:	000707b7          	lui	a5,0x70
2010ab38:	8ff5                	and	a5,a5,a3
2010ab3a:	fec42683          	lw	a3,-20(s0)
2010ab3e:	06b1                	add	a3,a3,12
2010ab40:	8fd9                	or	a5,a5,a4
2010ab42:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
2010ab44:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:99
}
2010ab46:	853e                	mv	a0,a5
2010ab48:	50b2                	lw	ra,44(sp)
2010ab4a:	5422                	lw	s0,40(sp)
2010ab4c:	6145                	add	sp,sp,48
2010ab4e:	8082                	ret

2010ab50 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
2010ab50:	7179                	add	sp,sp,-48
2010ab52:	d606                	sw	ra,44(sp)
2010ab54:	d422                	sw	s0,40(sp)
2010ab56:	1800                	add	s0,sp,48
2010ab58:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010ab5c:	fdc42503          	lw	a0,-36(s0)
2010ab60:	cafff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010ab64:	87aa                	mv	a5,a0
2010ab66:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
2010ab6a:	fec42783          	lw	a5,-20(s0)
2010ab6e:	07b1                	add	a5,a5,12 # 7000c <__heap_size+0x6f80c>
2010ab70:	439c                	lw	a5,0(a5)
2010ab72:	83c1                	srl	a5,a5,0x10
2010ab74:	8b9d                	and	a5,a5,7
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:105
}
2010ab76:	853e                	mv	a0,a5
2010ab78:	50b2                	lw	ra,44(sp)
2010ab7a:	5422                	lw	s0,40(sp)
2010ab7c:	6145                	add	sp,sp,48
2010ab7e:	8082                	ret

2010ab80 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
2010ab80:	7179                	add	sp,sp,-48
2010ab82:	d606                	sw	ra,44(sp)
2010ab84:	d422                	sw	s0,40(sp)
2010ab86:	1800                	add	s0,sp,48
2010ab88:	fca42e23          	sw	a0,-36(s0)
2010ab8c:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010ab90:	fdc42503          	lw	a0,-36(s0)
2010ab94:	c7bff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010ab98:	87aa                	mv	a5,a0
2010ab9a:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
2010ab9e:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
2010aba0:	fdc42503          	lw	a0,-36(s0)
2010aba4:	eb9ff0ef          	jal	2010aa5c <__metal_driver_sifive_uart0_txready>
2010aba8:	87aa                	mv	a5,a0
2010abaa:	fbfd                	bnez	a5,2010aba0 <__metal_driver_sifive_uart0_putc+0x20>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
2010abac:	fec42783          	lw	a5,-20(s0)
2010abb0:	fd842703          	lw	a4,-40(s0)
2010abb4:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2010abb6:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:115
}
2010abb8:	853e                	mv	a0,a5
2010abba:	50b2                	lw	ra,44(sp)
2010abbc:	5422                	lw	s0,40(sp)
2010abbe:	6145                	add	sp,sp,48
2010abc0:	8082                	ret

2010abc2 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
2010abc2:	7179                	add	sp,sp,-48
2010abc4:	d606                	sw	ra,44(sp)
2010abc6:	d422                	sw	s0,40(sp)
2010abc8:	1800                	add	s0,sp,48
2010abca:	fca42e23          	sw	a0,-36(s0)
2010abce:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010abd2:	fdc42503          	lw	a0,-36(s0)
2010abd6:	c39ff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010abda:	87aa                	mv	a5,a0
2010abdc:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
2010abe0:	fec42783          	lw	a5,-20(s0)
2010abe4:	0791                	add	a5,a5,4
2010abe6:	439c                	lw	a5,0(a5)
2010abe8:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
2010abec:	fe842783          	lw	a5,-24(s0)
2010abf0:	0007d763          	bgez	a5,2010abfe <__metal_driver_sifive_uart0_getc+0x3c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
2010abf4:	fd842783          	lw	a5,-40(s0)
2010abf8:	577d                	li	a4,-1
2010abfa:	c398                	sw	a4,0(a5)
2010abfc:	a801                	j	2010ac0c <__metal_driver_sifive_uart0_getc+0x4a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
2010abfe:	fe842783          	lw	a5,-24(s0)
2010ac02:	0ff7f713          	zext.b	a4,a5
2010ac06:	fd842783          	lw	a5,-40(s0)
2010ac0a:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
2010ac0c:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:129
}
2010ac0e:	853e                	mv	a0,a5
2010ac10:	50b2                	lw	ra,44(sp)
2010ac12:	5422                	lw	s0,40(sp)
2010ac14:	6145                	add	sp,sp,48
2010ac16:	8082                	ret

2010ac18 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
2010ac18:	7179                	add	sp,sp,-48
2010ac1a:	d622                	sw	s0,44(sp)
2010ac1c:	1800                	add	s0,sp,48
2010ac1e:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2010ac22:	fdc42783          	lw	a5,-36(s0)
2010ac26:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
2010ac2a:	fec42783          	lw	a5,-20(s0)
2010ac2e:	43dc                	lw	a5,4(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:134
}
2010ac30:	853e                	mv	a0,a5
2010ac32:	5432                	lw	s0,44(sp)
2010ac34:	6145                	add	sp,sp,48
2010ac36:	8082                	ret

2010ac38 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
2010ac38:	7179                	add	sp,sp,-48
2010ac3a:	d606                	sw	ra,44(sp)
2010ac3c:	d422                	sw	s0,40(sp)
2010ac3e:	1800                	add	s0,sp,48
2010ac40:	fca42e23          	sw	a0,-36(s0)
2010ac44:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2010ac48:	fdc42783          	lw	a5,-36(s0)
2010ac4c:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
2010ac50:	fdc42503          	lw	a0,-36(s0)
2010ac54:	bbbff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010ac58:	87aa                	mv	a5,a0
2010ac5a:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2010ac5e:	fdc42503          	lw	a0,-36(s0)
2010ac62:	c2dff0ef          	jal	2010a88e <__metal_driver_sifive_uart0_clock>
2010ac66:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2010ac6a:	fd842703          	lw	a4,-40(s0)
2010ac6e:	fec42783          	lw	a5,-20(s0)
2010ac72:	c3d8                	sw	a4,4(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
2010ac74:	fe442783          	lw	a5,-28(s0)
2010ac78:	cbb1                	beqz	a5,2010accc <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2010ac7a:	fe442783          	lw	a5,-28(s0)
2010ac7e:	439c                	lw	a5,0(a5)
2010ac80:	439c                	lw	a5,0(a5)
2010ac82:	fe442503          	lw	a0,-28(s0)
2010ac86:	9782                	jalr	a5
2010ac88:	fea42023          	sw	a0,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2010ac8c:	fe042703          	lw	a4,-32(s0)
2010ac90:	fd842783          	lw	a5,-40(s0)
2010ac94:	02f747b3          	div	a5,a4,a5
2010ac98:	fff78713          	add	a4,a5,-1
2010ac9c:	fe842783          	lw	a5,-24(s0)
2010aca0:	07e1                	add	a5,a5,24
2010aca2:	c398                	sw	a4,0(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2010aca4:	fe842783          	lw	a5,-24(s0)
2010aca8:	07a1                	add	a5,a5,8
2010acaa:	439c                	lw	a5,0(a5)
2010acac:	fe842703          	lw	a4,-24(s0)
2010acb0:	0721                	add	a4,a4,8
2010acb2:	0017e793          	or	a5,a5,1
2010acb6:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
2010acb8:	fe842783          	lw	a5,-24(s0)
2010acbc:	07b1                	add	a5,a5,12
2010acbe:	439c                	lw	a5,0(a5)
2010acc0:	fe842703          	lw	a4,-24(s0)
2010acc4:	0731                	add	a4,a4,12
2010acc6:	0017e793          	or	a5,a5,1
2010acca:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
2010accc:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:151
}
2010acce:	853e                	mv	a0,a5
2010acd0:	50b2                	lw	ra,44(sp)
2010acd2:	5422                	lw	s0,40(sp)
2010acd4:	6145                	add	sp,sp,48
2010acd6:	8082                	ret

2010acd8 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
2010acd8:	7139                	add	sp,sp,-64
2010acda:	de06                	sw	ra,60(sp)
2010acdc:	dc22                	sw	s0,56(sp)
2010acde:	0080                	add	s0,sp,64
2010ace0:	fca42623          	sw	a0,-52(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
2010ace4:	fcc42783          	lw	a5,-52(s0)
2010ace8:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2010acec:	fcc42503          	lw	a0,-52(s0)
2010acf0:	b1fff0ef          	jal	2010a80e <__metal_driver_sifive_uart0_control_base>
2010acf4:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
2010acf6:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2010acfa:	fcc42503          	lw	a0,-52(s0)
2010acfe:	b91ff0ef          	jal	2010a88e <__metal_driver_sifive_uart0_clock>
2010ad02:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
2010ad06:	fe842783          	lw	a5,-24(s0)
2010ad0a:	07a1                	add	a5,a5,8
2010ad0c:	4398                	lw	a4,0(a5)
2010ad0e:	fe842783          	lw	a5,-24(s0)
2010ad12:	07a1                	add	a5,a5,8
2010ad14:	86be                	mv	a3,a5
2010ad16:	fff907b7          	lui	a5,0xfff90
2010ad1a:	17fd                	add	a5,a5,-1 # fff8ffff <metal_segment_heap_target_end+0x7ff8e88f>
2010ad1c:	8ff9                	and	a5,a5,a4
2010ad1e:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2010ad20:	fe842783          	lw	a5,-24(s0)
2010ad24:	07a1                	add	a5,a5,8
2010ad26:	4398                	lw	a4,0(a5)
2010ad28:	fe842783          	lw	a5,-24(s0)
2010ad2c:	07a1                	add	a5,a5,8
2010ad2e:	86be                	mv	a3,a5
2010ad30:	67c1                	lui	a5,0x10
2010ad32:	8fd9                	or	a5,a5,a4
2010ad34:	c29c                	sw	a5,0(a3)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
2010ad36:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
2010ad38:	fe842783          	lw	a5,-24(s0)
2010ad3c:	07d1                	add	a5,a5,20 # 10014 <__heap_size+0xf814>
2010ad3e:	439c                	lw	a5,0(a5)
2010ad40:	8b85                	and	a5,a5,1
2010ad42:	dbfd                	beqz	a5,2010ad38 <pre_rate_change_callback_func+0x60>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2010ad44:	fe842783          	lw	a5,-24(s0)
2010ad48:	07a1                	add	a5,a5,8
2010ad4a:	439c                	lw	a5,0(a5)
2010ad4c:	8b89                	and	a5,a5,2
2010ad4e:	c399                	beqz	a5,2010ad54 <pre_rate_change_callback_func+0x7c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
2010ad50:	47a5                	li	a5,9
2010ad52:	a011                	j	2010ad56 <pre_rate_change_callback_func+0x7e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
2010ad54:	47a9                	li	a5,10
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2010ad56:	fef42023          	sw	a5,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2010ad5a:	fe442783          	lw	a5,-28(s0)
2010ad5e:	439c                	lw	a5,0(a5)
2010ad60:	439c                	lw	a5,0(a5)
2010ad62:	fe442503          	lw	a0,-28(s0)
2010ad66:	9782                	jalr	a5
2010ad68:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2010ad6c:	fe042703          	lw	a4,-32(s0)
2010ad70:	fdc42783          	lw	a5,-36(s0)
2010ad74:	02f707b3          	mul	a5,a4,a5
2010ad78:	873e                	mv	a4,a5
2010ad7a:	fec42783          	lw	a5,-20(s0)
2010ad7e:	43dc                	lw	a5,4(a5)
2010ad80:	02f757b3          	divu	a5,a4,a5
2010ad84:	fcf42c23          	sw	a5,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2010ad88:	fc042a23          	sw	zero,-44(s0)
2010ad8c:	a039                	j	2010ad9a <pre_rate_change_callback_func+0xc2>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
2010ad8e:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
2010ad90:	fd442783          	lw	a5,-44(s0)
2010ad94:	0785                	add	a5,a5,1
2010ad96:	fcf42a23          	sw	a5,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2010ad9a:	fd442783          	lw	a5,-44(s0)
2010ad9e:	fd842703          	lw	a4,-40(s0)
2010ada2:	fee7c6e3          	blt	a5,a4,2010ad8e <pre_rate_change_callback_func+0xb6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:180
}
2010ada6:	0001                	nop
2010ada8:	0001                	nop
2010adaa:	50f2                	lw	ra,60(sp)
2010adac:	5462                	lw	s0,56(sp)
2010adae:	6121                	add	sp,sp,64
2010adb0:	8082                	ret

2010adb2 <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
2010adb2:	7179                	add	sp,sp,-48
2010adb4:	d606                	sw	ra,44(sp)
2010adb6:	d422                	sw	s0,40(sp)
2010adb8:	1800                	add	s0,sp,48
2010adba:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
2010adbe:	fdc42783          	lw	a5,-36(s0)
2010adc2:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2010adc6:	fec42703          	lw	a4,-20(s0)
2010adca:	fec42783          	lw	a5,-20(s0)
2010adce:	43dc                	lw	a5,4(a5)
2010add0:	85be                	mv	a1,a5
2010add2:	853a                	mv	a0,a4
2010add4:	2ee1                	jal	2010b1ac <metal_uart_set_baud_rate>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:185
}
2010add6:	0001                	nop
2010add8:	50b2                	lw	ra,44(sp)
2010adda:	5422                	lw	s0,40(sp)
2010addc:	6145                	add	sp,sp,48
2010adde:	8082                	ret

2010ade0 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2010ade0:	7139                	add	sp,sp,-64
2010ade2:	de06                	sw	ra,60(sp)
2010ade4:	dc22                	sw	s0,56(sp)
2010ade6:	0080                	add	s0,sp,64
2010ade8:	fca42623          	sw	a0,-52(s0)
2010adec:	fcb42423          	sw	a1,-56(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2010adf0:	fcc42783          	lw	a5,-52(s0)
2010adf4:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2010adf8:	fcc42503          	lw	a0,-52(s0)
2010adfc:	a93ff0ef          	jal	2010a88e <__metal_driver_sifive_uart0_clock>
2010ae00:	fea42423          	sw	a0,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
2010ae04:	fcc42503          	lw	a0,-52(s0)
2010ae08:	ab5ff0ef          	jal	2010a8bc <__metal_driver_sifive_uart0_pinmux>
2010ae0c:	fea42223          	sw	a0,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2010ae10:	fe842783          	lw	a5,-24(s0)
2010ae14:	c7b9                	beqz	a5,2010ae62 <__metal_driver_sifive_uart0_init+0x82>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
2010ae16:	fec42783          	lw	a5,-20(s0)
2010ae1a:	2010b737          	lui	a4,0x2010b
2010ae1e:	cd870713          	add	a4,a4,-808 # 2010acd8 <pre_rate_change_callback_func>
2010ae22:	c798                	sw	a4,8(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
2010ae24:	fec42783          	lw	a5,-20(s0)
2010ae28:	fcc42703          	lw	a4,-52(s0)
2010ae2c:	c7d8                	sw	a4,12(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2010ae2e:	fec42783          	lw	a5,-20(s0)
2010ae32:	07a1                	add	a5,a5,8
2010ae34:	85be                	mv	a1,a5
2010ae36:	fe842503          	lw	a0,-24(s0)
2010ae3a:	2abd                	jal	2010afb8 <metal_clock_register_pre_rate_change_callback>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
2010ae3c:	fec42783          	lw	a5,-20(s0)
2010ae40:	2010b737          	lui	a4,0x2010b
2010ae44:	db270713          	add	a4,a4,-590 # 2010adb2 <post_rate_change_callback_func>
2010ae48:	cbd8                	sw	a4,20(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
2010ae4a:	fec42783          	lw	a5,-20(s0)
2010ae4e:	fcc42703          	lw	a4,-52(s0)
2010ae52:	cf98                	sw	a4,24(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
2010ae54:	fec42783          	lw	a5,-20(s0)
2010ae58:	07d1                	add	a5,a5,20
2010ae5a:	85be                	mv	a1,a5
2010ae5c:	fe842503          	lw	a0,-24(s0)
2010ae60:	2269                	jal	2010afea <metal_clock_register_post_rate_change_callback>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2010ae62:	fec42783          	lw	a5,-20(s0)
2010ae66:	fc842583          	lw	a1,-56(s0)
2010ae6a:	853e                	mv	a0,a5
2010ae6c:	2681                	jal	2010b1ac <metal_uart_set_baud_rate>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2010ae6e:	fe442783          	lw	a5,-28(s0)
2010ae72:	cb95                	beqz	a5,2010aea6 <__metal_driver_sifive_uart0_init+0xc6>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
2010ae74:	fcc42503          	lw	a0,-52(s0)
2010ae78:	a6fff0ef          	jal	2010a8e6 <__metal_driver_sifive_uart0_pinmux_output_selector>
2010ae7c:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2010ae7e:	fef42023          	sw	a5,-32(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
2010ae82:	fcc42503          	lw	a0,-52(s0)
2010ae86:	a89ff0ef          	jal	2010a90e <__metal_driver_sifive_uart0_pinmux_source_selector>
2010ae8a:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
2010ae8c:	fcf42e23          	sw	a5,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2010ae90:	fe442783          	lw	a5,-28(s0)
2010ae94:	439c                	lw	a5,0(a5)
2010ae96:	53dc                	lw	a5,36(a5)
2010ae98:	fdc42603          	lw	a2,-36(s0)
2010ae9c:	fe042583          	lw	a1,-32(s0)
2010aea0:	fe442503          	lw	a0,-28(s0)
2010aea4:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
2010aea6:	0001                	nop
2010aea8:	50f2                	lw	ra,60(sp)
2010aeaa:	5462                	lw	s0,56(sp)
2010aeac:	6121                	add	sp,sp,64
2010aeae:	8082                	ret

2010aeb0 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2010aeb0:	7179                	add	sp,sp,-48
2010aeb2:	d606                	sw	ra,44(sp)
2010aeb4:	d422                	sw	s0,40(sp)
2010aeb6:	1800                	add	s0,sp,48
2010aeb8:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
2010aebc:	fdc42783          	lw	a5,-36(s0)
2010aec0:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:52
    while (current) {
2010aec4:	a831                	j	2010aee0 <_metal_clock_call_all_callbacks+0x30>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
2010aec6:	fec42783          	lw	a5,-20(s0)
2010aeca:	439c                	lw	a5,0(a5)
2010aecc:	fec42703          	lw	a4,-20(s0)
2010aed0:	4358                	lw	a4,4(a4)
2010aed2:	853a                	mv	a0,a4
2010aed4:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:54
        current = current->_next;
2010aed6:	fec42783          	lw	a5,-20(s0)
2010aeda:	479c                	lw	a5,8(a5)
2010aedc:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:52
    while (current) {
2010aee0:	fec42783          	lw	a5,-20(s0)
2010aee4:	f3ed                	bnez	a5,2010aec6 <_metal_clock_call_all_callbacks+0x16>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:56
    }
}
2010aee6:	0001                	nop
2010aee8:	0001                	nop
2010aeea:	50b2                	lw	ra,44(sp)
2010aeec:	5422                	lw	s0,40(sp)
2010aeee:	6145                	add	sp,sp,48
2010aef0:	8082                	ret

2010aef2 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2010aef2:	7179                	add	sp,sp,-48
2010aef4:	d622                	sw	s0,44(sp)
2010aef6:	1800                	add	s0,sp,48
2010aef8:	fca42e23          	sw	a0,-36(s0)
2010aefc:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2010af00:	fd842783          	lw	a5,-40(s0)
2010af04:	0007a423          	sw	zero,8(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:66

    if (!list) {
2010af08:	fdc42783          	lw	a5,-36(s0)
2010af0c:	e781                	bnez	a5,2010af14 <_metal_clock_append_to_callbacks+0x22>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:67
        return cb;
2010af0e:	fd842783          	lw	a5,-40(s0)
2010af12:	a035                	j	2010af3e <_metal_clock_append_to_callbacks+0x4c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
2010af14:	fdc42783          	lw	a5,-36(s0)
2010af18:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
2010af1c:	a031                	j	2010af28 <_metal_clock_append_to_callbacks+0x36>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:73
        current = current->_next;
2010af1e:	fec42783          	lw	a5,-20(s0)
2010af22:	479c                	lw	a5,8(a5)
2010af24:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
2010af28:	fec42783          	lw	a5,-20(s0)
2010af2c:	479c                	lw	a5,8(a5)
2010af2e:	fbe5                	bnez	a5,2010af1e <_metal_clock_append_to_callbacks+0x2c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2010af30:	fec42783          	lw	a5,-20(s0)
2010af34:	fd842703          	lw	a4,-40(s0)
2010af38:	c798                	sw	a4,8(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:78

    return list;
2010af3a:	fdc42783          	lw	a5,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:79
}
2010af3e:	853e                	mv	a0,a5
2010af40:	5432                	lw	s0,44(sp)
2010af42:	6145                	add	sp,sp,48
2010af44:	8082                	ret

2010af46 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
2010af46:	1101                	add	sp,sp,-32
2010af48:	ce06                	sw	ra,28(sp)
2010af4a:	cc22                	sw	s0,24(sp)
2010af4c:	1000                	add	s0,sp,32
2010af4e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2010af52:	fec42783          	lw	a5,-20(s0)
2010af56:	439c                	lw	a5,0(a5)
2010af58:	439c                	lw	a5,0(a5)
2010af5a:	fec42503          	lw	a0,-20(s0)
2010af5e:	9782                	jalr	a5
2010af60:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:112
}
2010af62:	853e                	mv	a0,a5
2010af64:	40f2                	lw	ra,28(sp)
2010af66:	4462                	lw	s0,24(sp)
2010af68:	6105                	add	sp,sp,32
2010af6a:	8082                	ret

2010af6c <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
2010af6c:	7179                	add	sp,sp,-48
2010af6e:	d606                	sw	ra,44(sp)
2010af70:	d422                	sw	s0,40(sp)
2010af72:	1800                	add	s0,sp,48
2010af74:	fca42e23          	sw	a0,-36(s0)
2010af78:	fcb42c23          	sw	a1,-40(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
2010af7c:	fdc42783          	lw	a5,-36(s0)
2010af80:	43dc                	lw	a5,4(a5)
2010af82:	853e                	mv	a0,a5
2010af84:	f2dff0ef          	jal	2010aeb0 <_metal_clock_call_all_callbacks>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
2010af88:	fdc42783          	lw	a5,-36(s0)
2010af8c:	439c                	lw	a5,0(a5)
2010af8e:	43dc                	lw	a5,4(a5)
2010af90:	fd842583          	lw	a1,-40(s0)
2010af94:	fdc42503          	lw	a0,-36(s0)
2010af98:	9782                	jalr	a5
2010af9a:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
2010af9e:	fdc42783          	lw	a5,-36(s0)
2010afa2:	479c                	lw	a5,8(a5)
2010afa4:	853e                	mv	a0,a5
2010afa6:	f0bff0ef          	jal	2010aeb0 <_metal_clock_call_all_callbacks>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:135

    return out;
2010afaa:	fec42783          	lw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:136
}
2010afae:	853e                	mv	a0,a5
2010afb0:	50b2                	lw	ra,44(sp)
2010afb2:	5422                	lw	s0,40(sp)
2010afb4:	6145                	add	sp,sp,48
2010afb6:	8082                	ret

2010afb8 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
2010afb8:	1101                	add	sp,sp,-32
2010afba:	ce06                	sw	ra,28(sp)
2010afbc:	cc22                	sw	s0,24(sp)
2010afbe:	1000                	add	s0,sp,32
2010afc0:	fea42623          	sw	a0,-20(s0)
2010afc4:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
2010afc8:	fec42783          	lw	a5,-20(s0)
2010afcc:	43dc                	lw	a5,4(a5)
2010afce:	fe842583          	lw	a1,-24(s0)
2010afd2:	853e                	mv	a0,a5
2010afd4:	f1fff0ef          	jal	2010aef2 <_metal_clock_append_to_callbacks>
2010afd8:	872a                	mv	a4,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
2010afda:	fec42783          	lw	a5,-20(s0)
2010afde:	c3d8                	sw	a4,4(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:149
}
2010afe0:	0001                	nop
2010afe2:	40f2                	lw	ra,28(sp)
2010afe4:	4462                	lw	s0,24(sp)
2010afe6:	6105                	add	sp,sp,32
2010afe8:	8082                	ret

2010afea <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
2010afea:	1101                	add	sp,sp,-32
2010afec:	ce06                	sw	ra,28(sp)
2010afee:	cc22                	sw	s0,24(sp)
2010aff0:	1000                	add	s0,sp,32
2010aff2:	fea42623          	sw	a0,-20(s0)
2010aff6:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
2010affa:	fec42783          	lw	a5,-20(s0)
2010affe:	479c                	lw	a5,8(a5)
2010b000:	fe842583          	lw	a1,-24(s0)
2010b004:	853e                	mv	a0,a5
2010b006:	eedff0ef          	jal	2010aef2 <_metal_clock_append_to_callbacks>
2010b00a:	872a                	mv	a4,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
2010b00c:	fec42783          	lw	a5,-20(s0)
2010b010:	c798                	sw	a4,8(a5)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/clock.h:162
}
2010b012:	0001                	nop
2010b014:	40f2                	lw	ra,28(sp)
2010b016:	4462                	lw	s0,24(sp)
2010b018:	6105                	add	sp,sp,32
2010b01a:	8082                	ret

2010b01c <metal_gpio_disable_input>:
metal_gpio_disable_input():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:79
 * @brief Disable input on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the input is successfully disabled
 */
__inline__ int metal_gpio_disable_input(struct metal_gpio *gpio, int pin) {
2010b01c:	1101                	add	sp,sp,-32
2010b01e:	ce06                	sw	ra,28(sp)
2010b020:	cc22                	sw	s0,24(sp)
2010b022:	1000                	add	s0,sp,32
2010b024:	fea42623          	sw	a0,-20(s0)
2010b028:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:80
    if (!gpio) {
2010b02c:	fec42783          	lw	a5,-20(s0)
2010b030:	e399                	bnez	a5,2010b036 <metal_gpio_disable_input+0x1a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:81
        return 1;
2010b032:	4785                	li	a5,1
2010b034:	a839                	j	2010b052 <metal_gpio_disable_input+0x36>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:84
    }

    return gpio->vtable->disable_input(gpio, (1 << pin));
2010b036:	fec42783          	lw	a5,-20(s0)
2010b03a:	439c                	lw	a5,0(a5)
2010b03c:	439c                	lw	a5,0(a5)
2010b03e:	fe842703          	lw	a4,-24(s0)
2010b042:	4685                	li	a3,1
2010b044:	00e69733          	sll	a4,a3,a4
2010b048:	85ba                	mv	a1,a4
2010b04a:	fec42503          	lw	a0,-20(s0)
2010b04e:	9782                	jalr	a5
2010b050:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:85
}
2010b052:	853e                	mv	a0,a5
2010b054:	40f2                	lw	ra,28(sp)
2010b056:	4462                	lw	s0,24(sp)
2010b058:	6105                	add	sp,sp,32
2010b05a:	8082                	ret

2010b05c <metal_gpio_enable_output>:
metal_gpio_enable_output():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:93
 * @brief Enable output on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the output is successfully enabled
 */
__inline__ int metal_gpio_enable_output(struct metal_gpio *gpio, int pin) {
2010b05c:	1101                	add	sp,sp,-32
2010b05e:	ce06                	sw	ra,28(sp)
2010b060:	cc22                	sw	s0,24(sp)
2010b062:	1000                	add	s0,sp,32
2010b064:	fea42623          	sw	a0,-20(s0)
2010b068:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:94
    if (!gpio) {
2010b06c:	fec42783          	lw	a5,-20(s0)
2010b070:	e399                	bnez	a5,2010b076 <metal_gpio_enable_output+0x1a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:95
        return 1;
2010b072:	4785                	li	a5,1
2010b074:	a839                	j	2010b092 <metal_gpio_enable_output+0x36>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:98
    }

    return gpio->vtable->enable_output(gpio, (1 << pin));
2010b076:	fec42783          	lw	a5,-20(s0)
2010b07a:	439c                	lw	a5,0(a5)
2010b07c:	4bdc                	lw	a5,20(a5)
2010b07e:	fe842703          	lw	a4,-24(s0)
2010b082:	4685                	li	a3,1
2010b084:	00e69733          	sll	a4,a3,a4
2010b088:	85ba                	mv	a1,a4
2010b08a:	fec42503          	lw	a0,-20(s0)
2010b08e:	9782                	jalr	a5
2010b090:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:99
}
2010b092:	853e                	mv	a0,a5
2010b094:	40f2                	lw	ra,28(sp)
2010b096:	4462                	lw	s0,24(sp)
2010b098:	6105                	add	sp,sp,32
2010b09a:	8082                	ret

2010b09c <metal_gpio_set_pin>:
metal_gpio_set_pin():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:122
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @param value The value to set the pin to
 * @return 0 if the output is successfully set
 */
__inline__ int metal_gpio_set_pin(struct metal_gpio *gpio, int pin, int value) {
2010b09c:	1101                	add	sp,sp,-32
2010b09e:	ce06                	sw	ra,28(sp)
2010b0a0:	cc22                	sw	s0,24(sp)
2010b0a2:	1000                	add	s0,sp,32
2010b0a4:	fea42623          	sw	a0,-20(s0)
2010b0a8:	feb42423          	sw	a1,-24(s0)
2010b0ac:	fec42223          	sw	a2,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:123
    if (!gpio) {
2010b0b0:	fec42783          	lw	a5,-20(s0)
2010b0b4:	e399                	bnez	a5,2010b0ba <metal_gpio_set_pin+0x1e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:124
        return 1;
2010b0b6:	4785                	li	a5,1
2010b0b8:	a089                	j	2010b0fa <metal_gpio_set_pin+0x5e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:127
    }

    if (value == 0) {
2010b0ba:	fe442783          	lw	a5,-28(s0)
2010b0be:	e385                	bnez	a5,2010b0de <metal_gpio_set_pin+0x42>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:128
        return gpio->vtable->output_clear(gpio, (1 << pin));
2010b0c0:	fec42783          	lw	a5,-20(s0)
2010b0c4:	439c                	lw	a5,0(a5)
2010b0c6:	4fdc                	lw	a5,28(a5)
2010b0c8:	fe842703          	lw	a4,-24(s0)
2010b0cc:	4685                	li	a3,1
2010b0ce:	00e69733          	sll	a4,a3,a4
2010b0d2:	85ba                	mv	a1,a4
2010b0d4:	fec42503          	lw	a0,-20(s0)
2010b0d8:	9782                	jalr	a5
2010b0da:	87aa                	mv	a5,a0
2010b0dc:	a839                	j	2010b0fa <metal_gpio_set_pin+0x5e>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:130
    } else {
        return gpio->vtable->output_set(gpio, (1 << pin));
2010b0de:	fec42783          	lw	a5,-20(s0)
2010b0e2:	439c                	lw	a5,0(a5)
2010b0e4:	4f9c                	lw	a5,24(a5)
2010b0e6:	fe842703          	lw	a4,-24(s0)
2010b0ea:	4685                	li	a3,1
2010b0ec:	00e69733          	sll	a4,a3,a4
2010b0f0:	85ba                	mv	a1,a4
2010b0f2:	fec42503          	lw	a0,-20(s0)
2010b0f6:	9782                	jalr	a5
2010b0f8:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:132
    }
}
2010b0fa:	853e                	mv	a0,a5
2010b0fc:	40f2                	lw	ra,28(sp)
2010b0fe:	4462                	lw	s0,24(sp)
2010b100:	6105                	add	sp,sp,32
2010b102:	8082                	ret

2010b104 <metal_gpio_toggle_pin>:
metal_gpio_toggle_pin():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:194
 * @brief Toggles the value of the GPIO pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the pin is successfully toggled
 */
__inline__ int metal_gpio_toggle_pin(struct metal_gpio *gpio, int pin) {
2010b104:	1101                	add	sp,sp,-32
2010b106:	ce06                	sw	ra,28(sp)
2010b108:	cc22                	sw	s0,24(sp)
2010b10a:	1000                	add	s0,sp,32
2010b10c:	fea42623          	sw	a0,-20(s0)
2010b110:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:195
    if (!gpio) {
2010b114:	fec42783          	lw	a5,-20(s0)
2010b118:	e399                	bnez	a5,2010b11e <metal_gpio_toggle_pin+0x1a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:196
        return 1;
2010b11a:	4785                	li	a5,1
2010b11c:	a839                	j	2010b13a <metal_gpio_toggle_pin+0x36>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:199
    }

    return gpio->vtable->output_toggle(gpio, (1 << pin));
2010b11e:	fec42783          	lw	a5,-20(s0)
2010b122:	439c                	lw	a5,0(a5)
2010b124:	539c                	lw	a5,32(a5)
2010b126:	fe842703          	lw	a4,-24(s0)
2010b12a:	4685                	li	a3,1
2010b12c:	00e69733          	sll	a4,a3,a4
2010b130:	85ba                	mv	a1,a4
2010b132:	fec42503          	lw	a0,-20(s0)
2010b136:	9782                	jalr	a5
2010b138:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/gpio.h:200
}
2010b13a:	853e                	mv	a0,a5
2010b13c:	40f2                	lw	ra,28(sp)
2010b13e:	4462                	lw	s0,24(sp)
2010b140:	6105                	add	sp,sp,32
2010b142:	8082                	ret

2010b144 <metal_shutdown>:
metal_shutdown():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
2010b144:	1101                	add	sp,sp,-32
2010b146:	ce22                	sw	s0,28(sp)
2010b148:	1000                	add	s0,sp,32
2010b14a:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
2010b14e:	0001                	nop
2010b150:	bffd                	j	2010b14e <metal_shutdown+0xa>

2010b152 <metal_uart_init>:
metal_uart_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
2010b152:	1101                	add	sp,sp,-32
2010b154:	ce06                	sw	ra,28(sp)
2010b156:	cc22                	sw	s0,24(sp)
2010b158:	1000                	add	s0,sp,32
2010b15a:	fea42623          	sw	a0,-20(s0)
2010b15e:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
2010b162:	fec42783          	lw	a5,-20(s0)
2010b166:	439c                	lw	a5,0(a5)
2010b168:	439c                	lw	a5,0(a5)
2010b16a:	fe842583          	lw	a1,-24(s0)
2010b16e:	fec42503          	lw	a0,-20(s0)
2010b172:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:61
}
2010b174:	0001                	nop
2010b176:	40f2                	lw	ra,28(sp)
2010b178:	4462                	lw	s0,24(sp)
2010b17a:	6105                	add	sp,sp,32
2010b17c:	8082                	ret

2010b17e <metal_uart_putc>:
metal_uart_putc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
2010b17e:	1101                	add	sp,sp,-32
2010b180:	ce06                	sw	ra,28(sp)
2010b182:	cc22                	sw	s0,24(sp)
2010b184:	1000                	add	s0,sp,32
2010b186:	fea42623          	sw	a0,-20(s0)
2010b18a:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
2010b18e:	fec42783          	lw	a5,-20(s0)
2010b192:	439c                	lw	a5,0(a5)
2010b194:	43dc                	lw	a5,4(a5)
2010b196:	fe842583          	lw	a1,-24(s0)
2010b19a:	fec42503          	lw	a0,-20(s0)
2010b19e:	9782                	jalr	a5
2010b1a0:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:71
}
2010b1a2:	853e                	mv	a0,a5
2010b1a4:	40f2                	lw	ra,28(sp)
2010b1a6:	4462                	lw	s0,24(sp)
2010b1a8:	6105                	add	sp,sp,32
2010b1aa:	8082                	ret

2010b1ac <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
2010b1ac:	1101                	add	sp,sp,-32
2010b1ae:	ce06                	sw	ra,28(sp)
2010b1b0:	cc22                	sw	s0,24(sp)
2010b1b2:	1000                	add	s0,sp,32
2010b1b4:	fea42623          	sw	a0,-20(s0)
2010b1b8:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
2010b1bc:	fec42783          	lw	a5,-20(s0)
2010b1c0:	439c                	lw	a5,0(a5)
2010b1c2:	4bdc                	lw	a5,20(a5)
2010b1c4:	fe842583          	lw	a1,-24(s0)
2010b1c8:	fec42503          	lw	a0,-20(s0)
2010b1cc:	9782                	jalr	a5
2010b1ce:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/metal/uart.h:113
}
2010b1d0:	853e                	mv	a0,a5
2010b1d2:	40f2                	lw	ra,28(sp)
2010b1d4:	4462                	lw	s0,24(sp)
2010b1d6:	6105                	add	sp,sp,32
2010b1d8:	8082                	ret
	...

2010b200 <__metal_vector_table>:
IRQ_0():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:76
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
2010b200:	940fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b204 <IRQ_1>:
IRQ_1():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:78
IRQ_1:
        j metal_interrupt_vector_handler
2010b204:	93cfc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b208 <IRQ_2>:
IRQ_2():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:80
IRQ_2:
        j metal_interrupt_vector_handler
2010b208:	938fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b20c <IRQ_3>:
IRQ_3():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:82
IRQ_3:
        j metal_software_interrupt_vector_handler
2010b20c:	962fc06f          	j	2010736e <metal_software_interrupt_vector_handler>

2010b210 <IRQ_4>:
IRQ_4():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:84
IRQ_4:
        j metal_interrupt_vector_handler
2010b210:	930fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b214 <IRQ_5>:
IRQ_5():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:86
IRQ_5:
        j metal_interrupt_vector_handler
2010b214:	92cfc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b218 <IRQ_6>:
IRQ_6():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:88
IRQ_6:
        j metal_interrupt_vector_handler
2010b218:	928fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b21c <IRQ_7>:
IRQ_7():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:90
IRQ_7:
        j metal_timer_interrupt_vector_handler
2010b21c:	a4cfc06f          	j	20107468 <metal_timer_interrupt_vector_handler>

2010b220 <IRQ_8>:
IRQ_8():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:92
IRQ_8:
        j metal_interrupt_vector_handler
2010b220:	920fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b224 <IRQ_9>:
IRQ_9():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:94
IRQ_9:
        j metal_interrupt_vector_handler
2010b224:	91cfc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b228 <IRQ_10>:
IRQ_10():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:96
IRQ_10:
        j metal_interrupt_vector_handler
2010b228:	918fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b22c <IRQ_11>:
IRQ_11():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:98
IRQ_11:
        j metal_interrupt_vector_handler
2010b22c:	914fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b230 <IRQ_12>:
IRQ_12():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:100
IRQ_12:
        j metal_interrupt_vector_handler
2010b230:	910fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b234 <IRQ_13>:
IRQ_13():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:102
IRQ_13:
        j metal_interrupt_vector_handler
2010b234:	90cfc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b238 <IRQ_14>:
IRQ_14():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:104
IRQ_14:
        j metal_interrupt_vector_handler
2010b238:	908fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b23c <IRQ_15>:
IRQ_15():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:106
IRQ_15:
        j metal_interrupt_vector_handler
2010b23c:	904fc06f          	j	20107340 <metal_interrupt_vector_handler>

2010b240 <IRQ_LC0>:
IRQ_LC0():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:108
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
2010b240:	d3afc06f          	j	2010777a <metal_lc0_interrupt_vector_handler>

2010b244 <IRQ_LC1>:
IRQ_LC1():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:110
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
2010b244:	dccfc06f          	j	20107810 <metal_lc1_interrupt_vector_handler>

2010b248 <IRQ_LC2>:
IRQ_LC2():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:112
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
2010b248:	e5efc06f          	j	201078a6 <metal_lc2_interrupt_vector_handler>

2010b24c <IRQ_LC3>:
IRQ_LC3():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:114
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2010b24c:	ef0fc06f          	j	2010793c <metal_lc3_interrupt_vector_handler>

2010b250 <IRQ_LC4>:
IRQ_LC4():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:116
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
2010b250:	f82fc06f          	j	201079d2 <metal_lc4_interrupt_vector_handler>

2010b254 <IRQ_LC5>:
IRQ_LC5():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:118
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
2010b254:	815fc06f          	j	20107a68 <metal_lc5_interrupt_vector_handler>

2010b258 <IRQ_LC6>:
IRQ_LC6():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:120
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
2010b258:	8a7fc06f          	j	20107afe <metal_lc6_interrupt_vector_handler>

2010b25c <IRQ_LC7>:
IRQ_LC7():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:122
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2010b25c:	939fc06f          	j	20107b94 <metal_lc7_interrupt_vector_handler>

2010b260 <IRQ_LC8>:
IRQ_LC8():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:124
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
2010b260:	9cbfc06f          	j	20107c2a <metal_lc8_interrupt_vector_handler>

2010b264 <IRQ_LC9>:
IRQ_LC9():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:126
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
2010b264:	a5dfc06f          	j	20107cc0 <metal_lc9_interrupt_vector_handler>

2010b268 <IRQ_LC10>:
IRQ_LC10():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:128
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
2010b268:	aeffc06f          	j	20107d56 <metal_lc10_interrupt_vector_handler>

2010b26c <IRQ_LC11>:
IRQ_LC11():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:130
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2010b26c:	b81fc06f          	j	20107dec <metal_lc11_interrupt_vector_handler>

2010b270 <IRQ_LC12>:
IRQ_LC12():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:132
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
2010b270:	c13fc06f          	j	20107e82 <metal_lc12_interrupt_vector_handler>

2010b274 <IRQ_LC13>:
IRQ_LC13():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:134
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
2010b274:	ca5fc06f          	j	20107f18 <metal_lc13_interrupt_vector_handler>

2010b278 <IRQ_LC14>:
IRQ_LC14():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:136
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
2010b278:	d37fc06f          	j	20107fae <metal_lc14_interrupt_vector_handler>

2010b27c <IRQ_LC15>:
IRQ_LC15():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/vector.S:138
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2010b27c:	dc9fc06f          	j	20108044 <metal_lc15_interrupt_vector_handler>

2010b280 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:186
{
2010b280:	1101                	add	sp,sp,-32
2010b282:	ce22                	sw	s0,28(sp)
2010b284:	1000                	add	s0,sp,32
2010b286:	fea42623          	sw	a0,-20(s0)
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:187
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2010b28a:	fec42703          	lw	a4,-20(s0)
2010b28e:	800007b7          	lui	a5,0x80000
2010b292:	06c78793          	add	a5,a5,108 # 8000006c <__metal_dt_clock_0>
2010b296:	00f71763          	bne	a4,a5,2010b2a4 <__metal_driver_fixed_clock_rate+0x24>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_0_CLOCK_0_CLOCK_FREQUENCY;
2010b29a:	00f427b7          	lui	a5,0xf42
2010b29e:	40078793          	add	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
2010b2a2:	a825                	j	2010b2da <__metal_driver_fixed_clock_rate+0x5a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:190
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
2010b2a4:	fec42703          	lw	a4,-20(s0)
2010b2a8:	800007b7          	lui	a5,0x80000
2010b2ac:	07878793          	add	a5,a5,120 # 80000078 <__metal_dt_clock_2>
2010b2b0:	00f71763          	bne	a4,a5,2010b2be <__metal_driver_fixed_clock_rate+0x3e>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:191
		return METAL_FIXED_CLOCK_2_CLOCK_2_CLOCK_FREQUENCY;
2010b2b4:	044aa7b7          	lui	a5,0x44aa
2010b2b8:	20078793          	add	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2010b2bc:	a839                	j	2010b2da <__metal_driver_fixed_clock_rate+0x5a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:193
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2010b2be:	fec42703          	lw	a4,-20(s0)
2010b2c2:	800007b7          	lui	a5,0x80000
2010b2c6:	08478793          	add	a5,a5,132 # 80000084 <__metal_dt_clock_5>
2010b2ca:	00f71763          	bne	a4,a5,2010b2d8 <__metal_driver_fixed_clock_rate+0x58>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:194
		return METAL_FIXED_CLOCK_5_CLOCK_5_CLOCK_FREQUENCY;
2010b2ce:	01e857b7          	lui	a5,0x1e85
2010b2d2:	80078793          	add	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
2010b2d6:	a011                	j	2010b2da <__metal_driver_fixed_clock_rate+0x5a>
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:197
		return 0;
2010b2d8:	4781                	li	a5,0
C:\fs3_vsd\projects\SiFive_BitNET_MCU\bsp\build\debug/./metal/machine.h:199
}
2010b2da:	853e                	mv	a0,a5
2010b2dc:	4472                	lw	s0,28(sp)
2010b2de:	6105                	add	sp,sp,32
2010b2e0:	8082                	ret

2010b2e2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
2010b2e2:	1101                	add	sp,sp,-32
2010b2e4:	ce06                	sw	ra,28(sp)
2010b2e6:	cc22                	sw	s0,24(sp)
2010b2e8:	1000                	add	s0,sp,32
2010b2ea:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2010b2ee:	fec42503          	lw	a0,-20(s0)
2010b2f2:	f8fff0ef          	jal	2010b280 <__metal_driver_fixed_clock_rate>
2010b2f6:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/fixed-clock.c:14
}
2010b2f8:	853e                	mv	a0,a5
2010b2fa:	40f2                	lw	ra,28(sp)
2010b2fc:	4462                	lw	s0,24(sp)
2010b2fe:	6105                	add	sp,sp,32
2010b300:	8082                	ret

2010b302 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
2010b302:	1101                	add	sp,sp,-32
2010b304:	ce06                	sw	ra,28(sp)
2010b306:	cc22                	sw	s0,24(sp)
2010b308:	1000                	add	s0,sp,32
2010b30a:	fea42623          	sw	a0,-20(s0)
2010b30e:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2010b312:	fec42503          	lw	a0,-20(s0)
2010b316:	fcdff0ef          	jal	2010b2e2 <__metal_driver_fixed_clock_get_rate_hz>
2010b31a:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/drivers/fixed-clock.c:19
}
2010b31c:	853e                	mv	a0,a5
2010b31e:	40f2                	lw	ra,28(sp)
2010b320:	4462                	lw	s0,24(sp)
2010b322:	6105                	add	sp,sp,32
2010b324:	8082                	ret

2010b326 <_close>:
_close():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2010b326:	1101                	add	sp,sp,-32
2010b328:	ce06                	sw	ra,28(sp)
2010b32a:	cc22                	sw	s0,24(sp)
2010b32c:	1000                	add	s0,sp,32
2010b32e:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
2010b332:	2a49                	jal	2010b4c4 <__errno>
2010b334:	872a                	mv	a4,a0
2010b336:	05800793          	li	a5,88
2010b33a:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_close.c:5
    return -1;
2010b33c:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_close.c:6
}
2010b33e:	853e                	mv	a0,a5
2010b340:	40f2                	lw	ra,28(sp)
2010b342:	4462                	lw	s0,24(sp)
2010b344:	6105                	add	sp,sp,32
2010b346:	8082                	ret

2010b348 <_fstat>:
_fstat():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
2010b348:	1101                	add	sp,sp,-32
2010b34a:	ce06                	sw	ra,28(sp)
2010b34c:	cc22                	sw	s0,24(sp)
2010b34e:	1000                	add	s0,sp,32
2010b350:	fea42623          	sw	a0,-20(s0)
2010b354:	feb42423          	sw	a1,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
2010b358:	22b5                	jal	2010b4c4 <__errno>
2010b35a:	872a                	mv	a4,a0
2010b35c:	fa800793          	li	a5,-88
2010b360:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_fstat.c:6
    return -1;
2010b362:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_fstat.c:7
}
2010b364:	853e                	mv	a0,a5
2010b366:	40f2                	lw	ra,28(sp)
2010b368:	4462                	lw	s0,24(sp)
2010b36a:	6105                	add	sp,sp,32
2010b36c:	8082                	ret

2010b36e <_isatty>:
_isatty():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
2010b36e:	1101                	add	sp,sp,-32
2010b370:	ce22                	sw	s0,28(sp)
2010b372:	1000                	add	s0,sp,32
2010b374:	fea42623          	sw	a0,-20(s0)
2010b378:	fec42783          	lw	a5,-20(s0)
2010b37c:	17fd                	add	a5,a5,-1
2010b37e:	0017b793          	seqz	a5,a5
2010b382:	0ff7f793          	zext.b	a5,a5
2010b386:	853e                	mv	a0,a5
2010b388:	4472                	lw	s0,28(sp)
2010b38a:	6105                	add	sp,sp,32
2010b38c:	8082                	ret

2010b38e <_lseek>:
_lseek():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
2010b38e:	1101                	add	sp,sp,-32
2010b390:	ce06                	sw	ra,28(sp)
2010b392:	cc22                	sw	s0,24(sp)
2010b394:	1000                	add	s0,sp,32
2010b396:	fea42623          	sw	a0,-20(s0)
2010b39a:	feb42423          	sw	a1,-24(s0)
2010b39e:	fec42223          	sw	a2,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
2010b3a2:	220d                	jal	2010b4c4 <__errno>
2010b3a4:	872a                	mv	a4,a0
2010b3a6:	05800793          	li	a5,88
2010b3aa:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_lseek.c:6
    return -1;
2010b3ac:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_lseek.c:7
}
2010b3ae:	853e                	mv	a0,a5
2010b3b0:	40f2                	lw	ra,28(sp)
2010b3b2:	4462                	lw	s0,24(sp)
2010b3b4:	6105                	add	sp,sp,32
2010b3b6:	8082                	ret

2010b3b8 <_read>:
_read():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
2010b3b8:	1101                	add	sp,sp,-32
2010b3ba:	ce06                	sw	ra,28(sp)
2010b3bc:	cc22                	sw	s0,24(sp)
2010b3be:	1000                	add	s0,sp,32
2010b3c0:	fea42623          	sw	a0,-20(s0)
2010b3c4:	feb42423          	sw	a1,-24(s0)
2010b3c8:	fec42223          	sw	a2,-28(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
2010b3cc:	28e5                	jal	2010b4c4 <__errno>
2010b3ce:	872a                	mv	a4,a0
2010b3d0:	05800793          	li	a5,88
2010b3d4:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_read.c:6
    return -1;
2010b3d6:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_read.c:7
}
2010b3d8:	853e                	mv	a0,a5
2010b3da:	40f2                	lw	ra,28(sp)
2010b3dc:	4462                	lw	s0,24(sp)
2010b3de:	6105                	add	sp,sp,32
2010b3e0:	8082                	ret

2010b3e2 <_sbrk>:
_sbrk():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
2010b3e2:	7179                	add	sp,sp,-48
2010b3e4:	d606                	sw	ra,44(sp)
2010b3e6:	d422                	sw	s0,40(sp)
2010b3e8:	1800                	add	s0,sp,48
2010b3ea:	fca42e23          	sw	a0,-36(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
2010b3ee:	82c1a783          	lw	a5,-2004(gp) # 80000aac <__brk>
2010b3f2:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
2010b3f6:	cf018713          	add	a4,gp,-784 # 80000f70 <_sp>
2010b3fa:	4f018793          	add	a5,gp,1264 # 80001770 <metal_segment_heap_target_end>
2010b3fe:	00f71463          	bne	a4,a5,2010b406 <_sbrk+0x24>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
2010b402:	57fd                	li	a5,-1
2010b404:	a83d                	j	2010b442 <_sbrk+0x60>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
2010b406:	82c1a703          	lw	a4,-2004(gp) # 80000aac <__brk>
2010b40a:	fdc42783          	lw	a5,-36(s0)
2010b40e:	973e                	add	a4,a4,a5
2010b410:	4f018793          	add	a5,gp,1264 # 80001770 <metal_segment_heap_target_end>
2010b414:	02f77263          	bgeu	a4,a5,2010b438 <_sbrk+0x56>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
2010b418:	82c1a703          	lw	a4,-2004(gp) # 80000aac <__brk>
2010b41c:	fdc42783          	lw	a5,-36(s0)
2010b420:	973e                	add	a4,a4,a5
2010b422:	82e1a623          	sw	a4,-2004(gp) # 80000aac <__brk>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
2010b426:	fdc42583          	lw	a1,-36(s0)
2010b42a:	fec42503          	lw	a0,-20(s0)
2010b42e:	c5df40ef          	jal	2010008a <metal_mem_scrub>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:42

    return old;
2010b432:	fec42783          	lw	a5,-20(s0)
2010b436:	a031                	j	2010b442 <_sbrk+0x60>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
2010b438:	4f018713          	add	a4,gp,1264 # 80001770 <metal_segment_heap_target_end>
2010b43c:	82e1a623          	sw	a4,-2004(gp) # 80000aac <__brk>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
2010b440:	57fd                	li	a5,-1
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_sbrk.c:43
}
2010b442:	853e                	mv	a0,a5
2010b444:	50b2                	lw	ra,44(sp)
2010b446:	5422                	lw	s0,40(sp)
2010b448:	6145                	add	sp,sp,48
2010b44a:	8082                	ret

2010b44c <_write>:
_write():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
2010b44c:	7179                	add	sp,sp,-48
2010b44e:	d606                	sw	ra,44(sp)
2010b450:	d422                	sw	s0,40(sp)
2010b452:	1800                	add	s0,sp,48
2010b454:	fca42e23          	sw	a0,-36(s0)
2010b458:	fcb42c23          	sw	a1,-40(s0)
2010b45c:	fcc42a23          	sw	a2,-44(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
2010b460:	fdc42703          	lw	a4,-36(s0)
2010b464:	4785                	li	a5,1
2010b466:	00f70963          	beq	a4,a5,2010b478 <_write+0x2c>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
2010b46a:	28a9                	jal	2010b4c4 <__errno>
2010b46c:	872a                	mv	a4,a0
2010b46e:	05800793          	li	a5,88
2010b472:	c31c                	sw	a5,0(a4)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:10
        return -1;
2010b474:	57fd                	li	a5,-1
2010b476:	a82d                	j	2010b4b0 <_write+0x64>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
2010b478:	fd842783          	lw	a5,-40(s0)
2010b47c:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
2010b480:	fe042623          	sw	zero,-20(s0)
2010b484:	a839                	j	2010b4a2 <_write+0x56>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
2010b486:	fe842703          	lw	a4,-24(s0)
2010b48a:	fec42783          	lw	a5,-20(s0)
2010b48e:	97ba                	add	a5,a5,a4
2010b490:	0007c783          	lbu	a5,0(a5)
2010b494:	853e                	mv	a0,a5
2010b496:	2171                	jal	2010b922 <metal_tty_putc>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
2010b498:	fec42783          	lw	a5,-20(s0)
2010b49c:	0785                	add	a5,a5,1
2010b49e:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
2010b4a2:	fec42703          	lw	a4,-20(s0)
2010b4a6:	fd442783          	lw	a5,-44(s0)
2010b4aa:	fcf76ee3          	bltu	a4,a5,2010b486 <_write+0x3a>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:16
    return 0;
2010b4ae:	4781                	li	a5,0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_write.c:17
}
2010b4b0:	853e                	mv	a0,a5
2010b4b2:	50b2                	lw	ra,44(sp)
2010b4b4:	5422                	lw	s0,40(sp)
2010b4b6:	6145                	add	sp,sp,48
2010b4b8:	8082                	ret

2010b4ba <atexit>:
atexit():
2010b4ba:	85aa                	mv	a1,a0
2010b4bc:	4681                	li	a3,0
2010b4be:	4601                	li	a2,0
2010b4c0:	4501                	li	a0,0
2010b4c2:	ac11                	j	2010b6d6 <__register_exitproc>

2010b4c4 <__errno>:
__errno():
2010b4c4:	5fef5517          	auipc	a0,0x5fef5
2010b4c8:	5bc52503          	lw	a0,1468(a0) # 80000a80 <_impure_ptr>
2010b4cc:	8082                	ret

2010b4ce <exit>:
exit():
2010b4ce:	1141                	add	sp,sp,-16
2010b4d0:	c422                	sw	s0,8(sp)
2010b4d2:	c606                	sw	ra,12(sp)
2010b4d4:	00000797          	auipc	a5,0x0
2010b4d8:	27e78793          	add	a5,a5,638 # 2010b752 <__call_exitprocs>
2010b4dc:	842a                	mv	s0,a0
2010b4de:	c399                	beqz	a5,2010b4e4 <exit+0x16>
2010b4e0:	4581                	li	a1,0
2010b4e2:	2c85                	jal	2010b752 <__call_exitprocs>
2010b4e4:	ffffa517          	auipc	a0,0xffffa
2010b4e8:	8f852503          	lw	a0,-1800(a0) # 20104ddc <_global_impure_ptr>
2010b4ec:	551c                	lw	a5,40(a0)
2010b4ee:	c391                	beqz	a5,2010b4f2 <exit+0x24>
2010b4f0:	9782                	jalr	a5
2010b4f2:	8522                	mv	a0,s0
2010b4f4:	2999                	jal	2010b94a <_exit>

2010b4f6 <__libc_fini_array>:
__libc_fini_array():
2010b4f6:	1141                	add	sp,sp,-16
2010b4f8:	c422                	sw	s0,8(sp)
2010b4fa:	c226                	sw	s1,4(sp)
2010b4fc:	ffff5417          	auipc	s0,0xffff5
2010b500:	dcc40413          	add	s0,s0,-564 # 201002c8 <__fini_array_end>
2010b504:	ffff5497          	auipc	s1,0xffff5
2010b508:	dc448493          	add	s1,s1,-572 # 201002c8 <__fini_array_end>
2010b50c:	8c05                	sub	s0,s0,s1
2010b50e:	c606                	sw	ra,12(sp)
2010b510:	8409                	sra	s0,s0,0x2
2010b512:	e411                	bnez	s0,2010b51e <__libc_fini_array+0x28>
2010b514:	40b2                	lw	ra,12(sp)
2010b516:	4422                	lw	s0,8(sp)
2010b518:	4492                	lw	s1,4(sp)
2010b51a:	0141                	add	sp,sp,16
2010b51c:	8082                	ret
2010b51e:	147d                	add	s0,s0,-1
2010b520:	00241793          	sll	a5,s0,0x2
2010b524:	97a6                	add	a5,a5,s1
2010b526:	439c                	lw	a5,0(a5)
2010b528:	9782                	jalr	a5
2010b52a:	b7e5                	j	2010b512 <__libc_fini_array+0x1c>

2010b52c <__libc_init_array>:
__libc_init_array():
2010b52c:	1141                	add	sp,sp,-16
2010b52e:	c422                	sw	s0,8(sp)
2010b530:	c226                	sw	s1,4(sp)
2010b532:	ffff5417          	auipc	s0,0xffff5
2010b536:	d8640413          	add	s0,s0,-634 # 201002b8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010b53a:	ffff5497          	auipc	s1,0xffff5
2010b53e:	d7e48493          	add	s1,s1,-642 # 201002b8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010b542:	8c81                	sub	s1,s1,s0
2010b544:	c04a                	sw	s2,0(sp)
2010b546:	c606                	sw	ra,12(sp)
2010b548:	8489                	sra	s1,s1,0x2
2010b54a:	4901                	li	s2,0
2010b54c:	02991563          	bne	s2,s1,2010b576 <__libc_init_array+0x4a>
2010b550:	ffff5417          	auipc	s0,0xffff5
2010b554:	d6840413          	add	s0,s0,-664 # 201002b8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010b558:	ffff5497          	auipc	s1,0xffff5
2010b55c:	d6048493          	add	s1,s1,-672 # 201002b8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010b560:	8c81                	sub	s1,s1,s0
2010b562:	8489                	sra	s1,s1,0x2
2010b564:	4901                	li	s2,0
2010b566:	00991d63          	bne	s2,s1,2010b580 <__libc_init_array+0x54>
2010b56a:	40b2                	lw	ra,12(sp)
2010b56c:	4422                	lw	s0,8(sp)
2010b56e:	4492                	lw	s1,4(sp)
2010b570:	4902                	lw	s2,0(sp)
2010b572:	0141                	add	sp,sp,16
2010b574:	8082                	ret
2010b576:	401c                	lw	a5,0(s0)
2010b578:	0905                	add	s2,s2,1
2010b57a:	0411                	add	s0,s0,4
2010b57c:	9782                	jalr	a5
2010b57e:	b7f9                	j	2010b54c <__libc_init_array+0x20>
2010b580:	401c                	lw	a5,0(s0)
2010b582:	0905                	add	s2,s2,1
2010b584:	0411                	add	s0,s0,4
2010b586:	9782                	jalr	a5
2010b588:	bff9                	j	2010b566 <__libc_init_array+0x3a>

2010b58a <strcat>:
strcat():
2010b58a:	87aa                	mv	a5,a0
2010b58c:	0007c683          	lbu	a3,0(a5)
2010b590:	873e                	mv	a4,a5
2010b592:	0785                	add	a5,a5,1
2010b594:	fee5                	bnez	a3,2010b58c <strcat+0x2>
2010b596:	0005c783          	lbu	a5,0(a1)
2010b59a:	0585                	add	a1,a1,1
2010b59c:	0705                	add	a4,a4,1
2010b59e:	fef70fa3          	sb	a5,-1(a4)
2010b5a2:	fbf5                	bnez	a5,2010b596 <strcat+0xc>
2010b5a4:	8082                	ret

2010b5a6 <strcmp>:
strcmp():
2010b5a6:	00b56733          	or	a4,a0,a1
2010b5aa:	53fd                	li	t2,-1
2010b5ac:	8b0d                	and	a4,a4,3
2010b5ae:	e779                	bnez	a4,2010b67c <strcmp+0xd6>
2010b5b0:	7f7f87b7          	lui	a5,0x7f7f8
2010b5b4:	f7f78793          	add	a5,a5,-129 # 7f7f7f7f <metal_segment_data_source_start+0x5f6ec61f>
2010b5b8:	4110                	lw	a2,0(a0)
2010b5ba:	4194                	lw	a3,0(a1)
2010b5bc:	00f672b3          	and	t0,a2,a5
2010b5c0:	00f66333          	or	t1,a2,a5
2010b5c4:	92be                	add	t0,t0,a5
2010b5c6:	0062e2b3          	or	t0,t0,t1
2010b5ca:	0c729763          	bne	t0,t2,2010b698 <strcmp+0xf2>
2010b5ce:	06d61863          	bne	a2,a3,2010b63e <strcmp+0x98>
2010b5d2:	4150                	lw	a2,4(a0)
2010b5d4:	41d4                	lw	a3,4(a1)
2010b5d6:	00f672b3          	and	t0,a2,a5
2010b5da:	00f66333          	or	t1,a2,a5
2010b5de:	92be                	add	t0,t0,a5
2010b5e0:	0062e2b3          	or	t0,t0,t1
2010b5e4:	0a729863          	bne	t0,t2,2010b694 <strcmp+0xee>
2010b5e8:	04d61b63          	bne	a2,a3,2010b63e <strcmp+0x98>
2010b5ec:	4510                	lw	a2,8(a0)
2010b5ee:	4594                	lw	a3,8(a1)
2010b5f0:	00f672b3          	and	t0,a2,a5
2010b5f4:	00f66333          	or	t1,a2,a5
2010b5f8:	92be                	add	t0,t0,a5
2010b5fa:	0062e2b3          	or	t0,t0,t1
2010b5fe:	0a729163          	bne	t0,t2,2010b6a0 <strcmp+0xfa>
2010b602:	02d61e63          	bne	a2,a3,2010b63e <strcmp+0x98>
2010b606:	4550                	lw	a2,12(a0)
2010b608:	45d4                	lw	a3,12(a1)
2010b60a:	00f672b3          	and	t0,a2,a5
2010b60e:	00f66333          	or	t1,a2,a5
2010b612:	92be                	add	t0,t0,a5
2010b614:	0062e2b3          	or	t0,t0,t1
2010b618:	08729a63          	bne	t0,t2,2010b6ac <strcmp+0x106>
2010b61c:	02d61163          	bne	a2,a3,2010b63e <strcmp+0x98>
2010b620:	4910                	lw	a2,16(a0)
2010b622:	4994                	lw	a3,16(a1)
2010b624:	00f672b3          	and	t0,a2,a5
2010b628:	00f66333          	or	t1,a2,a5
2010b62c:	92be                	add	t0,t0,a5
2010b62e:	0062e2b3          	or	t0,t0,t1
2010b632:	08729363          	bne	t0,t2,2010b6b8 <strcmp+0x112>
2010b636:	0551                	add	a0,a0,20
2010b638:	05d1                	add	a1,a1,20
2010b63a:	f6d60fe3          	beq	a2,a3,2010b5b8 <strcmp+0x12>
2010b63e:	01061713          	sll	a4,a2,0x10
2010b642:	01069793          	sll	a5,a3,0x10
2010b646:	00f71c63          	bne	a4,a5,2010b65e <strcmp+0xb8>
2010b64a:	01065713          	srl	a4,a2,0x10
2010b64e:	0106d793          	srl	a5,a3,0x10
2010b652:	40f70533          	sub	a0,a4,a5
2010b656:	0ff57593          	zext.b	a1,a0
2010b65a:	e991                	bnez	a1,2010b66e <strcmp+0xc8>
2010b65c:	8082                	ret
2010b65e:	8341                	srl	a4,a4,0x10
2010b660:	83c1                	srl	a5,a5,0x10
2010b662:	40f70533          	sub	a0,a4,a5
2010b666:	0ff57593          	zext.b	a1,a0
2010b66a:	e191                	bnez	a1,2010b66e <strcmp+0xc8>
2010b66c:	8082                	ret
2010b66e:	0ff77713          	zext.b	a4,a4
2010b672:	0ff7f793          	zext.b	a5,a5
2010b676:	40f70533          	sub	a0,a4,a5
2010b67a:	8082                	ret
2010b67c:	00054603          	lbu	a2,0(a0)
2010b680:	0005c683          	lbu	a3,0(a1)
2010b684:	0505                	add	a0,a0,1
2010b686:	0585                	add	a1,a1,1
2010b688:	00d61363          	bne	a2,a3,2010b68e <strcmp+0xe8>
2010b68c:	fa65                	bnez	a2,2010b67c <strcmp+0xd6>
2010b68e:	40d60533          	sub	a0,a2,a3
2010b692:	8082                	ret
2010b694:	0511                	add	a0,a0,4
2010b696:	0591                	add	a1,a1,4
2010b698:	fed612e3          	bne	a2,a3,2010b67c <strcmp+0xd6>
2010b69c:	4501                	li	a0,0
2010b69e:	8082                	ret
2010b6a0:	0521                	add	a0,a0,8
2010b6a2:	05a1                	add	a1,a1,8
2010b6a4:	fcd61ce3          	bne	a2,a3,2010b67c <strcmp+0xd6>
2010b6a8:	4501                	li	a0,0
2010b6aa:	8082                	ret
2010b6ac:	0531                	add	a0,a0,12
2010b6ae:	05b1                	add	a1,a1,12
2010b6b0:	fcd616e3          	bne	a2,a3,2010b67c <strcmp+0xd6>
2010b6b4:	4501                	li	a0,0
2010b6b6:	8082                	ret
2010b6b8:	0541                	add	a0,a0,16
2010b6ba:	05c1                	add	a1,a1,16
2010b6bc:	fcd610e3          	bne	a2,a3,2010b67c <strcmp+0xd6>
2010b6c0:	4501                	li	a0,0
2010b6c2:	8082                	ret

2010b6c4 <strcpy>:
strcpy():
2010b6c4:	87aa                	mv	a5,a0
2010b6c6:	0005c703          	lbu	a4,0(a1)
2010b6ca:	0785                	add	a5,a5,1
2010b6cc:	0585                	add	a1,a1,1
2010b6ce:	fee78fa3          	sb	a4,-1(a5)
2010b6d2:	fb75                	bnez	a4,2010b6c6 <strcpy+0x2>
2010b6d4:	8082                	ret

2010b6d6 <__register_exitproc>:
__register_exitproc():
2010b6d6:	83c18713          	add	a4,gp,-1988 # 80000abc <_global_atexit>
2010b6da:	431c                	lw	a5,0(a4)
2010b6dc:	88aa                	mv	a7,a0
2010b6de:	e385                	bnez	a5,2010b6fe <__register_exitproc+0x28>
2010b6e0:	5fef5797          	auipc	a5,0x5fef5
2010b6e4:	3e878793          	add	a5,a5,1000 # 80000ac8 <_global_atexit0>
2010b6e8:	c31c                	sw	a5,0(a4)
2010b6ea:	00000713          	li	a4,0
2010b6ee:	c701                	beqz	a4,2010b6f6 <__register_exitproc+0x20>
2010b6f0:	4318                	lw	a4,0(a4)
2010b6f2:	08e7a423          	sw	a4,136(a5)
2010b6f6:	5fef5797          	auipc	a5,0x5fef5
2010b6fa:	3d278793          	add	a5,a5,978 # 80000ac8 <_global_atexit0>
2010b6fe:	43d8                	lw	a4,4(a5)
2010b700:	487d                	li	a6,31
2010b702:	557d                	li	a0,-1
2010b704:	04e84663          	blt	a6,a4,2010b750 <__register_exitproc+0x7a>
2010b708:	02088d63          	beqz	a7,2010b742 <__register_exitproc+0x6c>
2010b70c:	0887a803          	lw	a6,136(a5)
2010b710:	04080063          	beqz	a6,2010b750 <__register_exitproc+0x7a>
2010b714:	00271513          	sll	a0,a4,0x2
2010b718:	9542                	add	a0,a0,a6
2010b71a:	c110                	sw	a2,0(a0)
2010b71c:	10082303          	lw	t1,256(a6)
2010b720:	4605                	li	a2,1
2010b722:	00e61633          	sll	a2,a2,a4
2010b726:	00c36333          	or	t1,t1,a2
2010b72a:	10682023          	sw	t1,256(a6)
2010b72e:	08d52023          	sw	a3,128(a0)
2010b732:	4689                	li	a3,2
2010b734:	00d89763          	bne	a7,a3,2010b742 <__register_exitproc+0x6c>
2010b738:	10482683          	lw	a3,260(a6)
2010b73c:	8ed1                	or	a3,a3,a2
2010b73e:	10d82223          	sw	a3,260(a6)
2010b742:	00170693          	add	a3,a4,1
2010b746:	070a                	sll	a4,a4,0x2
2010b748:	c3d4                	sw	a3,4(a5)
2010b74a:	97ba                	add	a5,a5,a4
2010b74c:	c78c                	sw	a1,8(a5)
2010b74e:	4501                	li	a0,0
2010b750:	8082                	ret

2010b752 <__call_exitprocs>:
__call_exitprocs():
2010b752:	7179                	add	sp,sp,-48
2010b754:	ca56                	sw	s5,20(sp)
2010b756:	c85a                	sw	s6,16(sp)
2010b758:	c65e                	sw	s7,12(sp)
2010b75a:	c462                	sw	s8,8(sp)
2010b75c:	d606                	sw	ra,44(sp)
2010b75e:	d422                	sw	s0,40(sp)
2010b760:	d226                	sw	s1,36(sp)
2010b762:	d04a                	sw	s2,32(sp)
2010b764:	ce4e                	sw	s3,28(sp)
2010b766:	cc52                	sw	s4,24(sp)
2010b768:	c266                	sw	s9,4(sp)
2010b76a:	8b2a                	mv	s6,a0
2010b76c:	8aae                	mv	s5,a1
2010b76e:	83c18b93          	add	s7,gp,-1988 # 80000abc <_global_atexit>
2010b772:	4c05                	li	s8,1
2010b774:	000ba483          	lw	s1,0(s7)
2010b778:	cc81                	beqz	s1,2010b790 <__call_exitprocs+0x3e>
2010b77a:	40c0                	lw	s0,4(s1)
2010b77c:	0884a983          	lw	s3,136(s1)
2010b780:	fff40913          	add	s2,s0,-1
2010b784:	040a                	sll	s0,s0,0x2
2010b786:	00898a33          	add	s4,s3,s0
2010b78a:	9426                	add	s0,s0,s1
2010b78c:	00095f63          	bgez	s2,2010b7aa <__call_exitprocs+0x58>
2010b790:	50b2                	lw	ra,44(sp)
2010b792:	5422                	lw	s0,40(sp)
2010b794:	5492                	lw	s1,36(sp)
2010b796:	5902                	lw	s2,32(sp)
2010b798:	49f2                	lw	s3,28(sp)
2010b79a:	4a62                	lw	s4,24(sp)
2010b79c:	4ad2                	lw	s5,20(sp)
2010b79e:	4b42                	lw	s6,16(sp)
2010b7a0:	4bb2                	lw	s7,12(sp)
2010b7a2:	4c22                	lw	s8,8(sp)
2010b7a4:	4c92                	lw	s9,4(sp)
2010b7a6:	6145                	add	sp,sp,48
2010b7a8:	8082                	ret
2010b7aa:	000a8c63          	beqz	s5,2010b7c2 <__call_exitprocs+0x70>
2010b7ae:	00099663          	bnez	s3,2010b7ba <__call_exitprocs+0x68>
2010b7b2:	197d                	add	s2,s2,-1
2010b7b4:	1a71                	add	s4,s4,-4
2010b7b6:	1471                	add	s0,s0,-4
2010b7b8:	bfd1                	j	2010b78c <__call_exitprocs+0x3a>
2010b7ba:	07ca2783          	lw	a5,124(s4)
2010b7be:	ff579ae3          	bne	a5,s5,2010b7b2 <__call_exitprocs+0x60>
2010b7c2:	40d8                	lw	a4,4(s1)
2010b7c4:	405c                	lw	a5,4(s0)
2010b7c6:	177d                	add	a4,a4,-1
2010b7c8:	03271863          	bne	a4,s2,2010b7f8 <__call_exitprocs+0xa6>
2010b7cc:	0124a223          	sw	s2,4(s1)
2010b7d0:	d3ed                	beqz	a5,2010b7b2 <__call_exitprocs+0x60>
2010b7d2:	0044ac83          	lw	s9,4(s1)
2010b7d6:	00098863          	beqz	s3,2010b7e6 <__call_exitprocs+0x94>
2010b7da:	1009a683          	lw	a3,256(s3)
2010b7de:	012c1733          	sll	a4,s8,s2
2010b7e2:	8ef9                	and	a3,a3,a4
2010b7e4:	ee89                	bnez	a3,2010b7fe <__call_exitprocs+0xac>
2010b7e6:	9782                	jalr	a5
2010b7e8:	40d8                	lw	a4,4(s1)
2010b7ea:	000ba783          	lw	a5,0(s7)
2010b7ee:	f99713e3          	bne	a4,s9,2010b774 <__call_exitprocs+0x22>
2010b7f2:	fcf480e3          	beq	s1,a5,2010b7b2 <__call_exitprocs+0x60>
2010b7f6:	bfbd                	j	2010b774 <__call_exitprocs+0x22>
2010b7f8:	00042223          	sw	zero,4(s0)
2010b7fc:	bfd1                	j	2010b7d0 <__call_exitprocs+0x7e>
2010b7fe:	1049a683          	lw	a3,260(s3)
2010b802:	ffca2583          	lw	a1,-4(s4)
2010b806:	8f75                	and	a4,a4,a3
2010b808:	e701                	bnez	a4,2010b810 <__call_exitprocs+0xbe>
2010b80a:	855a                	mv	a0,s6
2010b80c:	9782                	jalr	a5
2010b80e:	bfe9                	j	2010b7e8 <__call_exitprocs+0x96>
2010b810:	852e                	mv	a0,a1
2010b812:	9782                	jalr	a5
2010b814:	bfd1                	j	2010b7e8 <__call_exitprocs+0x96>

2010b816 <metal_init>:
metal_init():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:21
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2010b816:	1101                	add	sp,sp,-32
2010b818:	ce06                	sw	ra,28(sp)
2010b81a:	cc22                	sw	s0,24(sp)
2010b81c:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:24
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
2010b81e:	8401a783          	lw	a5,-1984(gp) # 80000ac0 <init_done.1>
2010b822:	ebb9                	bnez	a5,2010b878 <metal_init+0x62>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:27
        return;
    }
    init_done = 1;
2010b824:	4705                	li	a4,1
2010b826:	84e1a023          	sw	a4,-1984(gp) # 80000ac0 <init_done.1>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:42
#ifdef METAL_SIFIVE_L2PF1
    /* Do L2 Stride Prefetcher initialization. */
    sifive_l2pf1_init();
#endif /* METAL_SIFIVE_L2PF1 */

    if (&metal_constructors_end <= &metal_constructors_start) {
2010b82a:	201007b7          	lui	a5,0x20100
2010b82e:	2c478713          	add	a4,a5,708 # 201002c4 <metal_sifive_fe310_g000_pll_init>
2010b832:	201007b7          	lui	a5,0x20100
2010b836:	2b878793          	add	a5,a5,696 # 201002b8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010b83a:	04e7f163          	bgeu	a5,a4,2010b87c <metal_init+0x66>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:46
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
2010b83e:	201007b7          	lui	a5,0x20100
2010b842:	2b878793          	add	a5,a5,696 # 201002b8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010b846:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
2010b84a:	a831                	j	2010b866 <metal_init+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:48
        metal_constructor_t func = *funcptr;
2010b84c:	fec42783          	lw	a5,-20(s0)
2010b850:	439c                	lw	a5,0(a5)
2010b852:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:50

        func();
2010b856:	fe842783          	lw	a5,-24(s0)
2010b85a:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:52

        funcptr += 1;
2010b85c:	fec42783          	lw	a5,-20(s0)
2010b860:	0791                	add	a5,a5,4
2010b862:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
2010b866:	fec42703          	lw	a4,-20(s0)
2010b86a:	201007b7          	lui	a5,0x20100
2010b86e:	2c478793          	add	a5,a5,708 # 201002c4 <metal_sifive_fe310_g000_pll_init>
2010b872:	fcf71de3          	bne	a4,a5,2010b84c <metal_init+0x36>
2010b876:	a021                	j	2010b87e <metal_init+0x68>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:25
        return;
2010b878:	0001                	nop
2010b87a:	a011                	j	2010b87e <metal_init+0x68>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:43
        return;
2010b87c:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:54
    }
}
2010b87e:	40f2                	lw	ra,28(sp)
2010b880:	4462                	lw	s0,24(sp)
2010b882:	6105                	add	sp,sp,32
2010b884:	8082                	ret

2010b886 <metal_fini>:
metal_fini():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:56

void metal_fini(void) {
2010b886:	1101                	add	sp,sp,-32
2010b888:	ce06                	sw	ra,28(sp)
2010b88a:	cc22                	sw	s0,24(sp)
2010b88c:	1000                	add	s0,sp,32
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:59
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
2010b88e:	8441a783          	lw	a5,-1980(gp) # 80000ac4 <fini_done.0>
2010b892:	ebb9                	bnez	a5,2010b8e8 <metal_fini+0x62>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:62
        return;
    }
    fini_done = 1;
2010b894:	4705                	li	a4,1
2010b896:	84e1a223          	sw	a4,-1980(gp) # 80000ac4 <fini_done.0>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:64

    if (&metal_destructors_end <= &metal_destructors_start) {
2010b89a:	201007b7          	lui	a5,0x20100
2010b89e:	2c878713          	add	a4,a5,712 # 201002c8 <__fini_array_end>
2010b8a2:	201007b7          	lui	a5,0x20100
2010b8a6:	2c878793          	add	a5,a5,712 # 201002c8 <__fini_array_end>
2010b8aa:	04e7f163          	bgeu	a5,a4,2010b8ec <metal_fini+0x66>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:68
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
2010b8ae:	201007b7          	lui	a5,0x20100
2010b8b2:	2c878793          	add	a5,a5,712 # 201002c8 <__fini_array_end>
2010b8b6:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
2010b8ba:	a831                	j	2010b8d6 <metal_fini+0x50>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:70
        metal_destructor_t func = *funcptr;
2010b8bc:	fec42783          	lw	a5,-20(s0)
2010b8c0:	439c                	lw	a5,0(a5)
2010b8c2:	fef42423          	sw	a5,-24(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:72

        func();
2010b8c6:	fe842783          	lw	a5,-24(s0)
2010b8ca:	9782                	jalr	a5
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:74

        funcptr += 1;
2010b8cc:	fec42783          	lw	a5,-20(s0)
2010b8d0:	0791                	add	a5,a5,4
2010b8d2:	fef42623          	sw	a5,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
2010b8d6:	fec42703          	lw	a4,-20(s0)
2010b8da:	201007b7          	lui	a5,0x20100
2010b8de:	2c878793          	add	a5,a5,712 # 201002c8 <__fini_array_end>
2010b8e2:	fcf71de3          	bne	a4,a5,2010b8bc <metal_fini+0x36>
2010b8e6:	a021                	j	2010b8ee <metal_fini+0x68>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:60
        return;
2010b8e8:	0001                	nop
2010b8ea:	a011                	j	2010b8ee <metal_fini+0x68>
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:65
        return;
2010b8ec:	0001                	nop
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:76
    }
}
2010b8ee:	40f2                	lw	ra,28(sp)
2010b8f0:	4462                	lw	s0,24(sp)
2010b8f2:	6105                	add	sp,sp,32
2010b8f4:	8082                	ret

2010b8f6 <metal_init_run>:
metal_init_run():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:86
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2010b8f6:	1141                	add	sp,sp,-16
2010b8f8:	c606                	sw	ra,12(sp)
2010b8fa:	c422                	sw	s0,8(sp)
2010b8fc:	0800                	add	s0,sp,16
2010b8fe:	f19ff0ef          	jal	2010b816 <metal_init>
2010b902:	0001                	nop
2010b904:	40b2                	lw	ra,12(sp)
2010b906:	4422                	lw	s0,8(sp)
2010b908:	0141                	add	sp,sp,16
2010b90a:	8082                	ret

2010b90c <metal_fini_run>:
metal_fini_run():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/init.c:89

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2010b90c:	1141                	add	sp,sp,-16
2010b90e:	c606                	sw	ra,12(sp)
2010b910:	c422                	sw	s0,8(sp)
2010b912:	0800                	add	s0,sp,16
2010b914:	f73ff0ef          	jal	2010b886 <metal_fini>
2010b918:	0001                	nop
2010b91a:	40b2                	lw	ra,12(sp)
2010b91c:	4422                	lw	s0,8(sp)
2010b91e:	0141                	add	sp,sp,16
2010b920:	8082                	ret

2010b922 <metal_tty_putc>:
metal_tty_putc():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
2010b922:	1101                	add	sp,sp,-32
2010b924:	ce06                	sw	ra,28(sp)
2010b926:	cc22                	sw	s0,24(sp)
2010b928:	1000                	add	s0,sp,32
2010b92a:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2010b92e:	fec42583          	lw	a1,-20(s0)
2010b932:	800017b7          	lui	a5,0x80001
2010b936:	a3878513          	add	a0,a5,-1480 # 80000a38 <__metal_dt_serial_10013000>
2010b93a:	845ff0ef          	jal	2010b17e <metal_uart_putc>
2010b93e:	87aa                	mv	a5,a0
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/src/tty.c:14
}
2010b940:	853e                	mv	a0,a5
2010b942:	40f2                	lw	ra,28(sp)
2010b944:	4462                	lw	s0,24(sp)
2010b946:	6105                	add	sp,sp,32
2010b948:	8082                	ret

2010b94a <_exit>:
_exit():
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
2010b94a:	1101                	add	sp,sp,-32
2010b94c:	ce06                	sw	ra,28(sp)
2010b94e:	cc22                	sw	s0,24(sp)
2010b950:	1000                	add	s0,sp,32
2010b952:	fea42623          	sw	a0,-20(s0)
C:/fs3_vsd/projects/SiFive_BitNET_MCU/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2010b956:	fec42503          	lw	a0,-20(s0)
2010b95a:	feaff0ef          	jal	2010b144 <metal_shutdown>
